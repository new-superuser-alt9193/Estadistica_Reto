{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 114,
      "metadata": {
        "id": "uZ9fILXjKzTZ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "38613f9f-6a4b-4846-e0fb-b59edf06d1c1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (3.2.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (0.11.0)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (3.0.9)\n",
            "Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (1.21.6)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (1.4.4)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib) (2.8.2)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver>=1.0.1->matplotlib) (4.1.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib) (1.15.0)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (1.3.5)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas) (2022.2.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas) (1.21.6)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas) (1.15.0)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: pandas_datareader in /usr/local/lib/python3.7/dist-packages (0.9.0)\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from pandas_datareader) (4.9.1)\n",
            "Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.7/dist-packages (from pandas_datareader) (2.23.0)\n",
            "Requirement already satisfied: pandas>=0.23 in /usr/local/lib/python3.7/dist-packages (from pandas_datareader) (1.3.5)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.23->pandas_datareader) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.23->pandas_datareader) (2022.2.1)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.23->pandas_datareader) (1.21.6)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.23->pandas_datareader) (1.15.0)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas_datareader) (3.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas_datareader) (2022.6.15)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas_datareader) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas_datareader) (2.10)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: dataprep in /usr/local/lib/python3.7/dist-packages (0.4.3)\n",
            "Requirement already satisfied: aiohttp<4.0,>=3.6 in /usr/local/lib/python3.7/dist-packages (from dataprep) (3.8.1)\n",
            "Requirement already satisfied: sqlalchemy<2.0.0,>=1.4.32 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.4.40)\n",
            "Requirement already satisfied: pystache<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from dataprep) (0.6.0)\n",
            "Requirement already satisfied: regex<2022.0.0,>=2021.8.3 in /usr/local/lib/python3.7/dist-packages (from dataprep) (2021.11.10)\n",
            "Requirement already satisfied: wordcloud<2.0,>=1.8 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.8.2.2)\n",
            "Requirement already satisfied: tqdm<5.0,>=4.48 in /usr/local/lib/python3.7/dist-packages (from dataprep) (4.64.0)\n",
            "Requirement already satisfied: python-Levenshtein<0.13.0,>=0.12.2 in /usr/local/lib/python3.7/dist-packages (from dataprep) (0.12.2)\n",
            "Requirement already satisfied: ipywidgets<8.0,>=7.5 in /usr/local/lib/python3.7/dist-packages (from dataprep) (7.7.1)\n",
            "Requirement already satisfied: numpy<2.0,>=1.21 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.21.6)\n",
            "Requirement already satisfied: pandas<2.0,>=1.1 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.3.5)\n",
            "Requirement already satisfied: pydantic<2.0,>=1.6 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.9.2)\n",
            "Requirement already satisfied: flask<3,>=2 in /usr/local/lib/python3.7/dist-packages (from dataprep) (2.2.2)\n",
            "Requirement already satisfied: jinja2<4,>=3 in /usr/local/lib/python3.7/dist-packages (from dataprep) (3.1.2)\n",
            "Requirement already satisfied: flask_cors<4.0.0,>=3.0.10 in /usr/local/lib/python3.7/dist-packages (from dataprep) (3.0.10)\n",
            "Requirement already satisfied: varname<0.9.0,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from dataprep) (0.8.3)\n",
            "Requirement already satisfied: metaphone<0.7,>=0.6 in /usr/local/lib/python3.7/dist-packages (from dataprep) (0.6)\n",
            "Requirement already satisfied: python-stdnum<2.0,>=1.16 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.17)\n",
            "Requirement already satisfied: bokeh<3,>=2 in /usr/local/lib/python3.7/dist-packages (from dataprep) (2.3.3)\n",
            "Requirement already satisfied: python-crfsuite<0.10.0,>=0.9.7 in /usr/local/lib/python3.7/dist-packages (from dataprep) (0.9.8)\n",
            "Requirement already satisfied: dask[array,dataframe,delayed]<2022.0,>=2021.11 in /usr/local/lib/python3.7/dist-packages (from dataprep) (2021.12.0)\n",
            "Requirement already satisfied: scipy<=1.7.1 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.7.1)\n",
            "Requirement already satisfied: jsonpath-ng<2.0,>=1.5 in /usr/local/lib/python3.7/dist-packages (from dataprep) (1.5.3)\n",
            "Requirement already satisfied: nltk<4.0.0,>=3.6.7 in /usr/local/lib/python3.7/dist-packages (from dataprep) (3.7)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (22.1.0)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (4.1.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (1.2.0)\n",
            "Requirement already satisfied: charset-normalizer<3.0,>=2.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (2.1.1)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (4.0.2)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (1.3.1)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (1.8.1)\n",
            "Requirement already satisfied: asynctest==0.13.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (0.13.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.7/dist-packages (from aiohttp<4.0,>=3.6->dataprep) (6.0.2)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from bokeh<3,>=2->dataprep) (2.8.2)\n",
            "Requirement already satisfied: tornado>=5.1 in /usr/local/lib/python3.7/dist-packages (from bokeh<3,>=2->dataprep) (5.1.1)\n",
            "Requirement already satisfied: pillow>=7.1.0 in /usr/local/lib/python3.7/dist-packages (from bokeh<3,>=2->dataprep) (7.1.2)\n",
            "Requirement already satisfied: packaging>=16.8 in /usr/local/lib/python3.7/dist-packages (from bokeh<3,>=2->dataprep) (21.3)\n",
            "Requirement already satisfied: PyYAML>=3.10 in /usr/local/lib/python3.7/dist-packages (from bokeh<3,>=2->dataprep) (6.0)\n",
            "Requirement already satisfied: fsspec>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from dask[array,dataframe,delayed]<2022.0,>=2021.11->dataprep) (2022.8.1)\n",
            "Requirement already satisfied: partd>=0.3.10 in /usr/local/lib/python3.7/dist-packages (from dask[array,dataframe,delayed]<2022.0,>=2021.11->dataprep) (1.3.0)\n",
            "Requirement already satisfied: cloudpickle>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from dask[array,dataframe,delayed]<2022.0,>=2021.11->dataprep) (1.5.0)\n",
            "Requirement already satisfied: toolz>=0.8.2 in /usr/local/lib/python3.7/dist-packages (from dask[array,dataframe,delayed]<2022.0,>=2021.11->dataprep) (0.12.0)\n",
            "Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.7/dist-packages (from flask<3,>=2->dataprep) (2.1.2)\n",
            "Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.7/dist-packages (from flask<3,>=2->dataprep) (8.1.3)\n",
            "Requirement already satisfied: importlib-metadata>=3.6.0 in /usr/local/lib/python3.7/dist-packages (from flask<3,>=2->dataprep) (4.12.0)\n",
            "Requirement already satisfied: Werkzeug>=2.2.2 in /usr/local/lib/python3.7/dist-packages (from flask<3,>=2->dataprep) (2.2.2)\n",
            "Requirement already satisfied: Six in /usr/local/lib/python3.7/dist-packages (from flask_cors<4.0.0,>=3.0.10->dataprep) (1.15.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=3.6.0->flask<3,>=2->dataprep) (3.8.1)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets<8.0,>=7.5->dataprep) (3.0.2)\n",
            "Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets<8.0,>=7.5->dataprep) (5.3.4)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets<8.0,>=7.5->dataprep) (0.2.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets<8.0,>=7.5->dataprep) (3.6.1)\n",
            "Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets<8.0,>=7.5->dataprep) (5.1.1)\n",
            "Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets<8.0,>=7.5->dataprep) (7.9.0)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets<8.0,>=7.5->dataprep) (6.1.12)\n",
            "Requirement already satisfied: prompt-toolkit<2.1.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (2.0.10)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (0.7.5)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (2.6.1)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (0.2.0)\n",
            "Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (4.8.0)\n",
            "Requirement already satisfied: jedi>=0.10 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (0.18.1)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (57.4.0)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (4.4.2)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.0 in /usr/local/lib/python3.7/dist-packages (from jedi>=0.10->ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (0.8.3)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.7/dist-packages (from jinja2<4,>=3->dataprep) (2.1.1)\n",
            "Requirement already satisfied: ply in /usr/local/lib/python3.7/dist-packages (from jsonpath-ng<2.0,>=1.5->dataprep) (3.11)\n",
            "Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from nltk<4.0.0,>=3.6.7->dataprep) (1.1.0)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=16.8->bokeh<3,>=2->dataprep) (3.0.9)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas<2.0,>=1.1->dataprep) (2022.2.1)\n",
            "Requirement already satisfied: locket in /usr/local/lib/python3.7/dist-packages (from partd>=0.3.10->dask[array,dataframe,delayed]<2022.0,>=2021.11->dataprep) (1.0.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets<8.0,>=7.5->dataprep) (0.2.5)\n",
            "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.7/dist-packages (from sqlalchemy<2.0.0,>=1.4.32->dataprep) (1.1.3)\n",
            "Requirement already satisfied: asttokens<3.0.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from varname<0.9.0,>=0.8.1->dataprep) (2.0.8)\n",
            "Requirement already satisfied: pure_eval<1.0.0 in /usr/local/lib/python3.7/dist-packages (from varname<0.9.0,>=0.8.1->dataprep) (0.2.2)\n",
            "Requirement already satisfied: executing<0.9.0,>=0.8.3 in /usr/local/lib/python3.7/dist-packages (from varname<0.9.0,>=0.8.1->dataprep) (0.8.3)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (5.3.1)\n",
            "Requirement already satisfied: nbformat in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (5.4.0)\n",
            "Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (5.6.1)\n",
            "Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (1.8.0)\n",
            "Requirement already satisfied: jupyter-core>=4.4.0 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (4.11.1)\n",
            "Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.13.3)\n",
            "Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets<8.0,>=7.5->dataprep) (23.2.1)\n",
            "Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.1->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.7.0)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from wordcloud<2.0,>=1.8->dataprep) (3.2.2)\n",
            "Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.7/dist-packages (from yarl<2.0,>=1.0->aiohttp<4.0,>=3.6->dataprep) (2.10)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->wordcloud<2.0,>=1.8->dataprep) (1.4.4)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->wordcloud<2.0,>=1.8->dataprep) (0.11.0)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.8.4)\n",
            "Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.4)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.7.1)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (5.0.1)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (1.5.0)\n",
            "Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.6.0)\n",
            "Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (4.3.3)\n",
            "Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (2.16.1)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.18.1)\n",
            "Requirement already satisfied: importlib-resources>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (5.9.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets<8.0,>=7.5->dataprep) (0.5.1)\n",
            "Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n",
            "/content/gdrive/Shareddrives/Reto AI SEPTIMO\n"
          ]
        }
      ],
      "source": [
        "!pip install matplotlib\n",
        "!pip install pandas\n",
        "!pip install pandas_datareader\n",
        "!pip install dataprep\n",
        "\n",
        "from google.colab import drive\n",
        "\n",
        "drive.mount(\"/content/gdrive\")\n",
        "%cd \"/content/gdrive/Shareddrives/Reto AI SEPTIMO\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 115,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 783
        },
        "id": "Vc4IVRDRK1aa",
        "outputId": "165e8f56-2627-4c04-c294-b44e762c7810"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.7/dist-packages (0.11.2)\n",
            "Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.7/dist-packages (from seaborn) (1.7.1)\n",
            "Requirement already satisfied: pandas>=0.23 in /usr/local/lib/python3.7/dist-packages (from seaborn) (1.3.5)\n",
            "Requirement already satisfied: matplotlib>=2.2 in /usr/local/lib/python3.7/dist-packages (from seaborn) (3.2.2)\n",
            "Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from seaborn) (1.21.6)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (1.4.4)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (0.11.0)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (3.0.9)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.2->seaborn) (2.8.2)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver>=1.0.1->matplotlib>=2.2->seaborn) (4.1.1)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.23->seaborn) (2022.2.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib>=2.2->seaborn) (1.15.0)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py:3326: DtypeWarning:\n",
            "\n",
            "Columns (2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) have mixed types.Specify dtype option on import or set low_memory=False.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae  otheropexp  extraincome  \\\n",
              "0       firm       q  revenue     cogs       sgae  otheropexp  extraincome   \n",
              "1          A  2000q1      NaN      NaN        NaN         NaN          NaN   \n",
              "2          A  2000q2  2485000  1261000    1010000           0        42000   \n",
              "3          A  2000q3  2670000  1369000    1091000           0        28000   \n",
              "4          A  2000q4  3372000  1732000    1182000           0        10000   \n",
              "...      ...     ...      ...      ...        ...         ...          ...   \n",
              "324442  ZYNE  2021q2      0.0      0.0  9838.4941         0.0   -117.52822   \n",
              "324443  ZYNE  2021q3      0.0      0.0  10210.652         0.0   -376.63675   \n",
              "324444  ZYNE  2021q4      0.0      0.0  8836.4365         0.0    16.937906   \n",
              "324445  ZYNE  2022q1      0.0      0.0   8903.915         0.0    317.25211   \n",
              "324446  ZYNE  2022q2      0.0      0.0  9168.7695         0.0   -775.92786   \n",
              "\n",
              "        finexp  incometax  totalassets  totalliabilities  shortdebt  longdebt  \\\n",
              "0       finexp  incometax  totalassets  totalliabilities  shortdebt  longdebt   \n",
              "1          NaN        NaN          NaN               NaN        NaN       NaN   \n",
              "2            0      90000      7321000           2679000     512000         0   \n",
              "3            0      83000      7827000           2925000     528000         0   \n",
              "4            0     163000      8425000           3160000     830000         0   \n",
              "...        ...        ...          ...               ...        ...       ...   \n",
              "324442  -5.943        0.0    98195.904         10496.647    206.211   468.385   \n",
              "324443  -5.038        0.0     89996.17         11309.171    207.635   411.237   \n",
              "324444  -4.433        0.0    81171.507         10258.173    209.068   353.694   \n",
              "324445 -96.044        0.0    74381.029          9214.059    210.512   295.754   \n",
              "324446 -91.691        0.0    67006.959          9765.086    211.965   237.414   \n",
              "\n",
              "        stockholderequity     adjprice  originalprice  sharesoutstanding  \\\n",
              "0       stockholderequity     adjprice  originalprice  sharesoutstanding   \n",
              "1                     NaN  63.76167023            104             452000   \n",
              "2                 4642000   45.2156075          73.75         452271.967   \n",
              "3                 4902000  30.00323786        48.9375         453014.579   \n",
              "4                 5265000  33.56684082          54.75         456366.381   \n",
              "...                   ...          ...            ...                ...   \n",
              "324442          87699.257         5.29           5.29          41251.537   \n",
              "324443          78686.999         4.24           4.24          41251.537   \n",
              "324444          70913.334         2.88           2.88          41217.537   \n",
              "324445           65166.97         2.05           2.05          42447.037   \n",
              "324446          57241.873         1.14           1.14          43595.959   \n",
              "\n",
              "        fiscalmonth  year  cto  \n",
              "0       fiscalmonth  year  cto  \n",
              "1               NaN  2000    1  \n",
              "2                 6  2000    2  \n",
              "3                 9  2000    3  \n",
              "4                12  2000    4  \n",
              "...             ...   ...  ...  \n",
              "324442          6.0  2021    2  \n",
              "324443          9.0  2021    3  \n",
              "324444         12.0  2021    4  \n",
              "324445          3.0  2022    1  \n",
              "324446          6.0  2022    2  \n",
              "\n",
              "[324447 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1d1d2d46-c6d3-4bfa-9b28-65690b74fb45\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>totalliabilities</th>\n",
              "      <th>shortdebt</th>\n",
              "      <th>longdebt</th>\n",
              "      <th>stockholderequity</th>\n",
              "      <th>adjprice</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>firm</td>\n",
              "      <td>q</td>\n",
              "      <td>revenue</td>\n",
              "      <td>cogs</td>\n",
              "      <td>sgae</td>\n",
              "      <td>otheropexp</td>\n",
              "      <td>extraincome</td>\n",
              "      <td>finexp</td>\n",
              "      <td>incometax</td>\n",
              "      <td>totalassets</td>\n",
              "      <td>totalliabilities</td>\n",
              "      <td>shortdebt</td>\n",
              "      <td>longdebt</td>\n",
              "      <td>stockholderequity</td>\n",
              "      <td>adjprice</td>\n",
              "      <td>originalprice</td>\n",
              "      <td>sharesoutstanding</td>\n",
              "      <td>fiscalmonth</td>\n",
              "      <td>year</td>\n",
              "      <td>cto</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>63.76167023</td>\n",
              "      <td>104</td>\n",
              "      <td>452000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>2679000</td>\n",
              "      <td>512000</td>\n",
              "      <td>0</td>\n",
              "      <td>4642000</td>\n",
              "      <td>45.2156075</td>\n",
              "      <td>73.75</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>2925000</td>\n",
              "      <td>528000</td>\n",
              "      <td>0</td>\n",
              "      <td>4902000</td>\n",
              "      <td>30.00323786</td>\n",
              "      <td>48.9375</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>3160000</td>\n",
              "      <td>830000</td>\n",
              "      <td>0</td>\n",
              "      <td>5265000</td>\n",
              "      <td>33.56684082</td>\n",
              "      <td>54.75</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324442</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>10496.647</td>\n",
              "      <td>206.211</td>\n",
              "      <td>468.385</td>\n",
              "      <td>87699.257</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.29</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324443</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>11309.171</td>\n",
              "      <td>207.635</td>\n",
              "      <td>411.237</td>\n",
              "      <td>78686.999</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.24</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324444</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>10258.173</td>\n",
              "      <td>209.068</td>\n",
              "      <td>353.694</td>\n",
              "      <td>70913.334</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.88</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324445</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>9214.059</td>\n",
              "      <td>210.512</td>\n",
              "      <td>295.754</td>\n",
              "      <td>65166.97</td>\n",
              "      <td>2.05</td>\n",
              "      <td>2.05</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324446</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>9765.086</td>\n",
              "      <td>211.965</td>\n",
              "      <td>237.414</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>324447 rows × 20 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d1d2d46-c6d3-4bfa-9b28-65690b74fb45')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1d1d2d46-c6d3-4bfa-9b28-65690b74fb45 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1d1d2d46-c6d3-4bfa-9b28-65690b74fb45');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import matplotlib\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "!pip install seaborn\n",
        "import seaborn as sns\n",
        "\n",
        "data = pd.read_csv('us2022q2a.csv')\n",
        "df1 = pd.read_csv('us2022q2a.csv',names = data.columns)\n",
        "df1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 116,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 502
        },
        "id": "lj4oXXaIK3DL",
        "outputId": "0bbeb3cb-40d0-4149-aa1f-d14e491f86de"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Ticker                             Name  \\\n",
              "0     Ticker                             Name   \n",
              "1       FLWS            1 800 Flowers Com Inc   \n",
              "2        TXG                10x Genomics, Inc   \n",
              "3       GOED                1847 Goedeker Inc   \n",
              "4       ONEM            1life Healthcare, Inc   \n",
              "...      ...                              ...   \n",
              "3604     ZUO                       Zuora, Inc   \n",
              "3605     ZWS  Zurn Elkay Water Solutions Corp   \n",
              "3606      ZY                     Zymergen Inc   \n",
              "3607    ZYNE     Zynerba Pharmaceuticals, Inc   \n",
              "3608    ZNGA                        Zynga Inc   \n",
              "\n",
              "                                 Sector NAICS\\nlevel 1  \n",
              "0                                Sector NAICS\\nlevel 1  \n",
              "1                                         Retail Trade  \n",
              "2                                        Manufacturing  \n",
              "3                                         Retail Trade  \n",
              "4                    Health Care and Social Assistance  \n",
              "...                                                ...  \n",
              "3604                                       Information  \n",
              "3605                                     Manufacturing  \n",
              "3606  Professional, Scientific, and Technical Services  \n",
              "3607                                     Manufacturing  \n",
              "3608                                       Information  \n",
              "\n",
              "[3609 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b4e89829-a5eb-430f-add1-cefdae422c50\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ticker</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Ticker</td>\n",
              "      <td>Name</td>\n",
              "      <td>Sector NAICS\\nlevel 1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>FLWS</td>\n",
              "      <td>1 800 Flowers Com Inc</td>\n",
              "      <td>Retail Trade</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TXG</td>\n",
              "      <td>10x Genomics, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>GOED</td>\n",
              "      <td>1847 Goedeker Inc</td>\n",
              "      <td>Retail Trade</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ONEM</td>\n",
              "      <td>1life Healthcare, Inc</td>\n",
              "      <td>Health Care and Social Assistance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3604</th>\n",
              "      <td>ZUO</td>\n",
              "      <td>Zuora, Inc</td>\n",
              "      <td>Information</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3605</th>\n",
              "      <td>ZWS</td>\n",
              "      <td>Zurn Elkay Water Solutions Corp</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3606</th>\n",
              "      <td>ZY</td>\n",
              "      <td>Zymergen Inc</td>\n",
              "      <td>Professional, Scientific, and Technical Services</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3607</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3608</th>\n",
              "      <td>ZNGA</td>\n",
              "      <td>Zynga Inc</td>\n",
              "      <td>Information</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3609 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4e89829-a5eb-430f-add1-cefdae422c50')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b4e89829-a5eb-430f-add1-cefdae422c50 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b4e89829-a5eb-430f-add1-cefdae422c50');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ],
      "source": [
        "data = pd.read_csv('usfirms2022.csv')\n",
        "df2 = pd.read_csv('usfirms2022.csv', names = data.columns)\n",
        "df2 = df2[[\"Ticker\",\"Name\", \"Sector NAICS\\nlevel 1\"]]\n",
        "df2"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 117,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 870
        },
        "id": "gicLBrZVK6iN",
        "outputId": "12c15758-b3fb-4ebb-b552-4d5745ad58ad"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae otheropexp extraincome  \\\n",
              "1          A  2000q2  2485000  1261000    1010000          0       42000   \n",
              "2          A  2000q3  2670000  1369000    1091000          0       28000   \n",
              "3          A  2000q4  3372000  1732000    1182000          0       10000   \n",
              "4          A  2001q1  2841000  1449000    1113000          0       -6000   \n",
              "5          A  2001q2  2382000  1406000    1038000          0      273000   \n",
              "...      ...     ...      ...      ...        ...        ...         ...   \n",
              "323811  ZYNE  2021q2      0.0      0.0  9838.4941        0.0  -117.52822   \n",
              "323812  ZYNE  2021q3      0.0      0.0  10210.652        0.0  -376.63675   \n",
              "323813  ZYNE  2021q4      0.0      0.0  8836.4365        0.0   16.937906   \n",
              "323814  ZYNE  2022q1      0.0      0.0   8903.915        0.0   317.25211   \n",
              "323815  ZYNE  2022q2      0.0      0.0  9168.7695        0.0  -775.92786   \n",
              "\n",
              "        finexp incometax totalassets  ... longdebt stockholderequity  \\\n",
              "1            0     90000     7321000  ...        0           4642000   \n",
              "2            0     83000     7827000  ...        0           4902000   \n",
              "3            0    163000     8425000  ...        0           5265000   \n",
              "4            0    119000     9208000  ...        0           5541000   \n",
              "5            0    115000     9080000  ...        0           5616000   \n",
              "...        ...       ...         ...  ...      ...               ...   \n",
              "323811  -5.943       0.0   98195.904  ...  468.385         87699.257   \n",
              "323812  -5.038       0.0    89996.17  ...  411.237         78686.999   \n",
              "323813  -4.433       0.0   81171.507  ...  353.694         70913.334   \n",
              "323814 -96.044       0.0   74381.029  ...  295.754          65166.97   \n",
              "323815 -91.691       0.0   67006.959  ...  237.414         57241.873   \n",
              "\n",
              "           adjprice originalprice sharesoutstanding fiscalmonth  year cto  \\\n",
              "1        45.2156075         73.75        452271.967           6  2000   2   \n",
              "2       30.00323786       48.9375        453014.579           9  2000   3   \n",
              "3       33.56684082         54.75        456366.381          12  2000   4   \n",
              "4       18.84034709   30.72999954        456769.737           3  2001   1   \n",
              "5       19.92552195          32.5        457072.749           6  2001   2   \n",
              "...             ...           ...               ...         ...   ...  ..   \n",
              "323811         5.29          5.29         41251.537         6.0  2021   2   \n",
              "323812         4.24          4.24         41251.537         9.0  2021   3   \n",
              "323813         2.88          2.88         41217.537        12.0  2021   4   \n",
              "323814         2.05          2.05         42447.037         3.0  2022   1   \n",
              "323815         1.14          1.14         43595.959         6.0  2022   2   \n",
              "\n",
              "                                Name Sector NAICS\\nlevel 1  \n",
              "1          Agilent Technologies, Inc         Manufacturing  \n",
              "2          Agilent Technologies, Inc         Manufacturing  \n",
              "3          Agilent Technologies, Inc         Manufacturing  \n",
              "4          Agilent Technologies, Inc         Manufacturing  \n",
              "5          Agilent Technologies, Inc         Manufacturing  \n",
              "...                              ...                   ...  \n",
              "323811  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323812  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323813  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323814  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323815  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "\n",
              "[153245 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6171e90b-44ce-4388-8edb-d4c488eb00b4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>longdebt</th>\n",
              "      <th>stockholderequity</th>\n",
              "      <th>adjprice</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>4642000</td>\n",
              "      <td>45.2156075</td>\n",
              "      <td>73.75</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>4902000</td>\n",
              "      <td>30.00323786</td>\n",
              "      <td>48.9375</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>5265000</td>\n",
              "      <td>33.56684082</td>\n",
              "      <td>54.75</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q1</td>\n",
              "      <td>2841000</td>\n",
              "      <td>1449000</td>\n",
              "      <td>1113000</td>\n",
              "      <td>0</td>\n",
              "      <td>-6000</td>\n",
              "      <td>0</td>\n",
              "      <td>119000</td>\n",
              "      <td>9208000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>5541000</td>\n",
              "      <td>18.84034709</td>\n",
              "      <td>30.72999954</td>\n",
              "      <td>456769.737</td>\n",
              "      <td>3</td>\n",
              "      <td>2001</td>\n",
              "      <td>1</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q2</td>\n",
              "      <td>2382000</td>\n",
              "      <td>1406000</td>\n",
              "      <td>1038000</td>\n",
              "      <td>0</td>\n",
              "      <td>273000</td>\n",
              "      <td>0</td>\n",
              "      <td>115000</td>\n",
              "      <td>9080000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>5616000</td>\n",
              "      <td>19.92552195</td>\n",
              "      <td>32.5</td>\n",
              "      <td>457072.749</td>\n",
              "      <td>6</td>\n",
              "      <td>2001</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>...</td>\n",
              "      <td>468.385</td>\n",
              "      <td>87699.257</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.29</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>...</td>\n",
              "      <td>411.237</td>\n",
              "      <td>78686.999</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.24</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>...</td>\n",
              "      <td>353.694</td>\n",
              "      <td>70913.334</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.88</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>...</td>\n",
              "      <td>295.754</td>\n",
              "      <td>65166.97</td>\n",
              "      <td>2.05</td>\n",
              "      <td>2.05</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>...</td>\n",
              "      <td>237.414</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 22 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6171e90b-44ce-4388-8edb-d4c488eb00b4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6171e90b-44ce-4388-8edb-d4c488eb00b4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6171e90b-44ce-4388-8edb-d4c488eb00b4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ],
      "source": [
        "df = pd.merge(df1, df2, left_on='firm', right_on=\"Ticker\")\n",
        "df = df.drop(columns=['Ticker'])\n",
        "df = df.drop(df[df.firm.isnull()].index)\n",
        "df = df.drop(df[df.revenue.isnull()].index)\n",
        "df = df.drop(df[df.cogs.isnull()].index)\n",
        "df = df.drop(df[df.adjprice.isnull()].index)\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 118,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "AtXaWrn5U-bd",
        "outputId": "0fe06395-b962-4b8c-b8e2-94dbe9944dda"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae otheropexp extraincome  \\\n",
              "1          A  2000q2  2485000  1261000    1010000          0       42000   \n",
              "2          A  2000q3  2670000  1369000    1091000          0       28000   \n",
              "3          A  2000q4  3372000  1732000    1182000          0       10000   \n",
              "4          A  2001q1  2841000  1449000    1113000          0       -6000   \n",
              "5          A  2001q2  2382000  1406000    1038000          0      273000   \n",
              "...      ...     ...      ...      ...        ...        ...         ...   \n",
              "323811  ZYNE  2021q2      0.0      0.0  9838.4941        0.0  -117.52822   \n",
              "323812  ZYNE  2021q3      0.0      0.0  10210.652        0.0  -376.63675   \n",
              "323813  ZYNE  2021q4      0.0      0.0  8836.4365        0.0   16.937906   \n",
              "323814  ZYNE  2022q1      0.0      0.0   8903.915        0.0   317.25211   \n",
              "323815  ZYNE  2022q2      0.0      0.0  9168.7695        0.0  -775.92786   \n",
              "\n",
              "        finexp incometax totalassets  ...     adjprice originalprice  \\\n",
              "1            0     90000     7321000  ...   45.2156075         73.75   \n",
              "2            0     83000     7827000  ...  30.00323786       48.9375   \n",
              "3            0    163000     8425000  ...  33.56684082         54.75   \n",
              "4            0    119000     9208000  ...  18.84034709   30.72999954   \n",
              "5            0    115000     9080000  ...  19.92552195          32.5   \n",
              "...        ...       ...         ...  ...          ...           ...   \n",
              "323811  -5.943       0.0   98195.904  ...         5.29          5.29   \n",
              "323812  -5.038       0.0    89996.17  ...         4.24          4.24   \n",
              "323813  -4.433       0.0   81171.507  ...         2.88          2.88   \n",
              "323814 -96.044       0.0   74381.029  ...         2.05          2.05   \n",
              "323815 -91.691       0.0   67006.959  ...         1.14          1.14   \n",
              "\n",
              "       sharesoutstanding fiscalmonth  year cto                          Name  \\\n",
              "1             452271.967           6  2000   2     Agilent Technologies, Inc   \n",
              "2             453014.579           9  2000   3     Agilent Technologies, Inc   \n",
              "3             456366.381          12  2000   4     Agilent Technologies, Inc   \n",
              "4             456769.737           3  2001   1     Agilent Technologies, Inc   \n",
              "5             457072.749           6  2001   2     Agilent Technologies, Inc   \n",
              "...                  ...         ...   ...  ..                           ...   \n",
              "323811         41251.537         6.0  2021   2  Zynerba Pharmaceuticals, Inc   \n",
              "323812         41251.537         9.0  2021   3  Zynerba Pharmaceuticals, Inc   \n",
              "323813         41217.537        12.0  2021   4  Zynerba Pharmaceuticals, Inc   \n",
              "323814         42447.037         3.0  2022   1  Zynerba Pharmaceuticals, Inc   \n",
              "323815         43595.959         6.0  2022   2  Zynerba Pharmaceuticals, Inc   \n",
              "\n",
              "       Sector NAICS\\nlevel 1  market_value   book_value  \n",
              "1              Manufacturing  3.335506e+07  4642000.000  \n",
              "2              Manufacturing  2.216940e+07  4902000.000  \n",
              "3              Manufacturing  2.498606e+07  5265000.000  \n",
              "4              Manufacturing  1.403653e+07  5541000.000  \n",
              "5              Manufacturing  1.485486e+07  5616000.000  \n",
              "...                      ...           ...          ...  \n",
              "323811         Manufacturing  2.182206e+05    87699.257  \n",
              "323812         Manufacturing  1.749065e+05    78686.999  \n",
              "323813         Manufacturing  1.187065e+05    70913.334  \n",
              "323814         Manufacturing  8.701643e+04    65166.970  \n",
              "323815         Manufacturing  4.969939e+04    57241.873  \n",
              "\n",
              "[153245 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1810ecf8-971e-4947-80e0-b75cd7677148\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>adjprice</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>...</td>\n",
              "      <td>45.2156075</td>\n",
              "      <td>73.75</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>3.335506e+07</td>\n",
              "      <td>4642000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>...</td>\n",
              "      <td>30.00323786</td>\n",
              "      <td>48.9375</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.216940e+07</td>\n",
              "      <td>4902000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>...</td>\n",
              "      <td>33.56684082</td>\n",
              "      <td>54.75</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.498606e+07</td>\n",
              "      <td>5265000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q1</td>\n",
              "      <td>2841000</td>\n",
              "      <td>1449000</td>\n",
              "      <td>1113000</td>\n",
              "      <td>0</td>\n",
              "      <td>-6000</td>\n",
              "      <td>0</td>\n",
              "      <td>119000</td>\n",
              "      <td>9208000</td>\n",
              "      <td>...</td>\n",
              "      <td>18.84034709</td>\n",
              "      <td>30.72999954</td>\n",
              "      <td>456769.737</td>\n",
              "      <td>3</td>\n",
              "      <td>2001</td>\n",
              "      <td>1</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.403653e+07</td>\n",
              "      <td>5541000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q2</td>\n",
              "      <td>2382000</td>\n",
              "      <td>1406000</td>\n",
              "      <td>1038000</td>\n",
              "      <td>0</td>\n",
              "      <td>273000</td>\n",
              "      <td>0</td>\n",
              "      <td>115000</td>\n",
              "      <td>9080000</td>\n",
              "      <td>...</td>\n",
              "      <td>19.92552195</td>\n",
              "      <td>32.5</td>\n",
              "      <td>457072.749</td>\n",
              "      <td>6</td>\n",
              "      <td>2001</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.485486e+07</td>\n",
              "      <td>5616000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>...</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.29</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.182206e+05</td>\n",
              "      <td>87699.257</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>...</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.24</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.749065e+05</td>\n",
              "      <td>78686.999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>...</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.88</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.187065e+05</td>\n",
              "      <td>70913.334</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>...</td>\n",
              "      <td>2.05</td>\n",
              "      <td>2.05</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>8.701643e+04</td>\n",
              "      <td>65166.970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>...</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>57241.873</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 24 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1810ecf8-971e-4947-80e0-b75cd7677148')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1810ecf8-971e-4947-80e0-b75cd7677148 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1810ecf8-971e-4947-80e0-b75cd7677148');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ],
      "source": [
        "# Derive New Column from Existing Column\n",
        "# Market Value = (originalprice * sharesoutstanding)\n",
        "\n",
        "df = df.assign(market_value=lambda x: x.originalprice.astype(np.float) * x.sharesoutstanding.astype(np.float))\n",
        "\n",
        "# Book Value of the firm = (totalassets-totalliabilities)\n",
        "\n",
        "df = df.assign(book_value=lambda x: x.totalassets.astype(np.float) - x.totalliabilities.astype(np.float))\n",
        "\n",
        "# Print dfFly para observar si las nuevas columnas de BookValue y MarkertValue fueron creados de manera correcta\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 119,
      "metadata": {
        "id": "GhL2RMBULnH2"
      },
      "outputs": [],
      "source": [
        "df = [y for _, y in df.groupby('firm', as_index=False)]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 120,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-kJasYF3MA9K",
        "outputId": "93d811cb-c7ef-4f60-bd36-ad676644b221"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:7: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:9: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        }
      ],
      "source": [
        "for i in range(len(df)):\n",
        "  df[i]['lprice'] = df[i].groupby(['firm'])['adjprice'].shift(4)\n",
        "  df[i]['r'] = np.log(df[i]['adjprice'].astype(np.float)) - np.log(df[i]['lprice'].astype(np.float))\n",
        "  df[i]['r2'] = np.log(df[i]['adjprice'].astype(np.float)) - np.log(df[i].groupby(['firm'])['adjprice'].shift(4).astype(np.float))\n",
        "  df[i].loc['ADT':'ADTN',['adjprice','lprice','r','r2']].iloc[85:96,]\n",
        "  #book firm value\n",
        "  x = (df[i]['originalprice'].astype(np.float) * df[i]['sharesoutstanding'].astype(np.float) )\n",
        "  #profit margin measures\n",
        "  df[i]['operating_profit'] = (df[i]['revenue'].astype(np.float) - df[i]['cogs'].astype(np.float)  - df[i]['sgae'].astype(np.float))\n",
        "  df[i]['ebit'] = (df[i]['revenue'].astype(np.float)  - df[i]['cogs'].astype(np.float)  - df[i]['sgae'].astype(np.float)  - df[i]['otheropexp'].astype(np.float))\n",
        "  df[i]['operating_profit_margin'] = (df[i]['ebit'].astype(np.float)  / df[i]['revenue'].astype(np.float) )"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 121,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ThV2VeMVOnCB",
        "outputId": "d505e6cf-1b77-47dc-a3fd-c08837c04663"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:7: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        }
      ],
      "source": [
        "for i in range(len(df)):\n",
        "  df[i]['revenue'] = df[i]['revenue'].astype(np.float)\n",
        "  df[i]['cogs'] = df[i]['cogs'].astype(np.float)\n",
        "  df[i]['sgae'] = df[i]['sgae'].astype(np.float)\n",
        "  df[i]['otheropexp'] = df[i]['otheropexp'].astype(np.float)\n",
        "  df[i]['extraincome'] = df[i]['extraincome'].astype(np.float)\n",
        "  df[i]['finexp'] = df[i]['finexp'].astype(np.float)\n",
        "  df_Final4 = df[i].tail(4)\n",
        "\n",
        "  temp = df[i].tail(1)\n",
        "\n",
        "\n",
        "  total_assets = list(temp['totalassets'])[0]\n",
        "  total_liabilities = list(temp['totalliabilities'])[0]\n",
        "  short_debt = list(temp['shortdebt'])[0]\n",
        "  long_debt = list(temp['longdebt'])[0]\n",
        "  stockholder_equity = list(temp['stockholderequity'])[0]\n",
        "  adj_price = list(temp['adjprice'])[0]\n",
        "  original_price = list(temp['originalprice'])[0]\n",
        "  book_value = list(temp['book_value'])[0]\n",
        "  market_value = list(temp['market_value'])[0]\n",
        "  operating_profit = list(temp['operating_profit'])[0]\n",
        "  ebit = list(temp['ebit'])[0]\n",
        "  operating_profit_margin = list(temp['operating_profit_margin'])[0]\n",
        "  sharesout_standing = list(temp['sharesoutstanding'])[0]\n",
        "  naics = list(temp['Sector NAICS\\nlevel 1'])[0]\n",
        "  name = list(temp['Name'])[0]\n",
        "  newDF = df_Final4.groupby('firm', as_index = False).agg({'revenue':'sum','cogs':'sum', 'sgae':'sum', 'otheropexp':'sum', 'extraincome':'sum', 'finexp':'sum'})\n",
        "\n",
        "  newDF['totalassets'] = total_assets\n",
        "  newDF['totalliabilities'] = total_liabilities\n",
        "  newDF['shortdebt'] = short_debt\n",
        "  newDF['longdebt'] = long_debt\n",
        "  newDF['stockholderequity'] = stockholder_equity\n",
        "  newDF['adjprice'] = adj_price\n",
        "  newDF['originalprice'] = original_price\n",
        "  newDF['sharesoutstanding'] = sharesout_standing\n",
        "  newDF['book_value'] = book_value\n",
        "  newDF['market_value'] = market_value\n",
        "  newDF['operating_profit'] = operating_profit\n",
        "  newDF['operating_profit_margin'] = operating_profit_margin\n",
        "  newDF['ebit'] = ebit\n",
        "  newDF['Sector NAICS\\nlevel 1'] = naics\n",
        "  newDF['Name'] = name\n",
        "\n",
        "  df[i] = newDF\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 122,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 765
        },
        "id": "WdhrpDEzTyzb",
        "outputId": "b53b402b-af8e-4e87-a72e-2617a2d57ac2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      firm     revenue       cogs          sgae  otheropexp    extraincome  \\\n",
              "0        A   6527000.0  3004000.0  2.056000e+06         0.0   41000.000000   \n",
              "1       AA  13386000.0  9653000.0  8.930000e+05   1138000.0  271000.000000   \n",
              "2     AAIC     31855.0    15523.0  0.000000e+00         0.0  -10809.000000   \n",
              "3      AAL  40717000.0        0.0  4.160800e+07         0.0  251000.000000   \n",
              "4     AAME    195299.0        0.0  1.915230e+05         0.0       0.000000   \n",
              "...    ...         ...        ...           ...         ...            ...   \n",
              "3554  ZVIA    156702.0    93921.0  8.744600e+04     94595.0   51341.000000   \n",
              "3555   ZVO    230001.0   149303.0  1.118000e+05      5753.0   -3980.000000   \n",
              "3556   ZWS    340300.0   195100.0  1.196000e+05      3400.0   50400.000000   \n",
              "3557    ZY     14546.0    48949.0  2.327660e+05     69138.0   -2028.000000   \n",
              "3558  ZYNE         0.0        0.0  3.711977e+04         0.0    -818.374594   \n",
              "\n",
              "           finexp totalassets totalliabilities shortdebt  ...     adjprice  \\\n",
              "0       81000.000    10455000          5333000    175000  ...       118.56   \n",
              "1      141000.000    15709000          8417000      1000  ...  45.48795638   \n",
              "2           0.000     1084755           871057       NaN  ...         3.25   \n",
              "3     1828000.000    67963000         76385000   2106000  ...        12.68   \n",
              "4           0.000      379274           270173       NaN  ...         2.67   \n",
              "...           ...         ...              ...       ...  ...          ...   \n",
              "3554        0.000    112738.0          25539.0     685.0  ...         2.81   \n",
              "3555        0.000     85433.0          78828.0       0.0  ...       0.9701   \n",
              "3556    22000.000   1176300.0         946900.0    5600.0  ...    27.179735   \n",
              "3557    26572.000    470968.0         234345.0    7900.0  ...         1.23   \n",
              "3558     -197.206   67006.959         9765.086   211.965  ...         1.14   \n",
              "\n",
              "     originalprice sharesoutstanding   book_value  market_value  \\\n",
              "0           118.77        298708.056  5122000.000  3.547756e+07   \n",
              "1            45.58        184448.686  7292000.000  8.407171e+06   \n",
              "2             3.25         35016.392   213698.000  1.138033e+05   \n",
              "3            12.68        649514.848 -8422000.000  8.235848e+06   \n",
              "4             2.67         20398.497   109101.000  5.446399e+04   \n",
              "...            ...               ...          ...           ...   \n",
              "3554          2.81         67209.461    87199.000  1.888586e+05   \n",
              "3555        0.9701         34095.968     6605.000  3.307650e+04   \n",
              "3556         27.24        125967.533   229400.000  3.431356e+06   \n",
              "3557          1.23        103140.755   236623.000  1.268631e+05   \n",
              "3558          1.14         43595.959    57241.873  4.969939e+04   \n",
              "\n",
              "      operating_profit  operating_profit_margin          ebit  \\\n",
              "0         3.600000e+05                 0.224020  3.600000e+05   \n",
              "1         6.570000e+05                 0.200878  7.320000e+05   \n",
              "2         4.526000e+03                 0.415229  4.526000e+03   \n",
              "3         1.017000e+06                 0.075771  1.017000e+06   \n",
              "4        -2.115000e+03                -0.047348 -2.115000e+03   \n",
              "...                ...                      ...           ...   \n",
              "3554     -6.700000e+03                -0.323723 -1.474300e+04   \n",
              "3555     -9.723000e+03                -0.016368 -8.410000e+02   \n",
              "3556      5.380000e+04                 0.188248  5.350000e+04   \n",
              "3557     -6.573600e+04               -40.317388 -1.061960e+05   \n",
              "3558     -9.168770e+03                     -inf -9.168770e+03   \n",
              "\n",
              "                                 Sector NAICS\\nlevel 1  \\\n",
              "0                                        Manufacturing   \n",
              "1                                        Manufacturing   \n",
              "2                                Finance and Insurance   \n",
              "3                       Transportation and Warehousing   \n",
              "4                                Finance and Insurance   \n",
              "...                                                ...   \n",
              "3554                                     Manufacturing   \n",
              "3555                              Educational Services   \n",
              "3556                                     Manufacturing   \n",
              "3557  Professional, Scientific, and Technical Services   \n",
              "3558                                     Manufacturing   \n",
              "\n",
              "                                 Name  \n",
              "0           Agilent Technologies, Inc  \n",
              "1                          Alcoa Corp  \n",
              "2     Arlington Asset Investment Corp  \n",
              "3         American Airlines Group Inc  \n",
              "4              Atlantic American Corp  \n",
              "...                               ...  \n",
              "3554                        Zevia Pbc  \n",
              "3555                        Zovio Inc  \n",
              "3556  Zurn Elkay Water Solutions Corp  \n",
              "3557                     Zymergen Inc  \n",
              "3558     Zynerba Pharmaceuticals, Inc  \n",
              "\n",
              "[3559 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-afe05748-3483-41ee-b909-18bbdeac220d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>totalliabilities</th>\n",
              "      <th>shortdebt</th>\n",
              "      <th>...</th>\n",
              "      <th>adjprice</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>book_value</th>\n",
              "      <th>market_value</th>\n",
              "      <th>operating_profit</th>\n",
              "      <th>operating_profit_margin</th>\n",
              "      <th>ebit</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A</td>\n",
              "      <td>6527000.0</td>\n",
              "      <td>3004000.0</td>\n",
              "      <td>2.056000e+06</td>\n",
              "      <td>0.0</td>\n",
              "      <td>41000.000000</td>\n",
              "      <td>81000.000</td>\n",
              "      <td>10455000</td>\n",
              "      <td>5333000</td>\n",
              "      <td>175000</td>\n",
              "      <td>...</td>\n",
              "      <td>118.56</td>\n",
              "      <td>118.77</td>\n",
              "      <td>298708.056</td>\n",
              "      <td>5122000.000</td>\n",
              "      <td>3.547756e+07</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>0.224020</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AA</td>\n",
              "      <td>13386000.0</td>\n",
              "      <td>9653000.0</td>\n",
              "      <td>8.930000e+05</td>\n",
              "      <td>1138000.0</td>\n",
              "      <td>271000.000000</td>\n",
              "      <td>141000.000</td>\n",
              "      <td>15709000</td>\n",
              "      <td>8417000</td>\n",
              "      <td>1000</td>\n",
              "      <td>...</td>\n",
              "      <td>45.48795638</td>\n",
              "      <td>45.58</td>\n",
              "      <td>184448.686</td>\n",
              "      <td>7292000.000</td>\n",
              "      <td>8.407171e+06</td>\n",
              "      <td>6.570000e+05</td>\n",
              "      <td>0.200878</td>\n",
              "      <td>7.320000e+05</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>Alcoa Corp</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>31855.0</td>\n",
              "      <td>15523.0</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-10809.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1084755</td>\n",
              "      <td>871057</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>3.25</td>\n",
              "      <td>3.25</td>\n",
              "      <td>35016.392</td>\n",
              "      <td>213698.000</td>\n",
              "      <td>1.138033e+05</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>0.415229</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAL</td>\n",
              "      <td>40717000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.160800e+07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>251000.000000</td>\n",
              "      <td>1828000.000</td>\n",
              "      <td>67963000</td>\n",
              "      <td>76385000</td>\n",
              "      <td>2106000</td>\n",
              "      <td>...</td>\n",
              "      <td>12.68</td>\n",
              "      <td>12.68</td>\n",
              "      <td>649514.848</td>\n",
              "      <td>-8422000.000</td>\n",
              "      <td>8.235848e+06</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>0.075771</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>Transportation and Warehousing</td>\n",
              "      <td>American Airlines Group Inc</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAME</td>\n",
              "      <td>195299.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.915230e+05</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>379274</td>\n",
              "      <td>270173</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>2.67</td>\n",
              "      <td>2.67</td>\n",
              "      <td>20398.497</td>\n",
              "      <td>109101.000</td>\n",
              "      <td>5.446399e+04</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>-0.047348</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>Atlantic American Corp</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3554</th>\n",
              "      <td>ZVIA</td>\n",
              "      <td>156702.0</td>\n",
              "      <td>93921.0</td>\n",
              "      <td>8.744600e+04</td>\n",
              "      <td>94595.0</td>\n",
              "      <td>51341.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>112738.0</td>\n",
              "      <td>25539.0</td>\n",
              "      <td>685.0</td>\n",
              "      <td>...</td>\n",
              "      <td>2.81</td>\n",
              "      <td>2.81</td>\n",
              "      <td>67209.461</td>\n",
              "      <td>87199.000</td>\n",
              "      <td>1.888586e+05</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "      <td>-0.323723</td>\n",
              "      <td>-1.474300e+04</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>Zevia Pbc</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3555</th>\n",
              "      <td>ZVO</td>\n",
              "      <td>230001.0</td>\n",
              "      <td>149303.0</td>\n",
              "      <td>1.118000e+05</td>\n",
              "      <td>5753.0</td>\n",
              "      <td>-3980.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>85433.0</td>\n",
              "      <td>78828.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9701</td>\n",
              "      <td>0.9701</td>\n",
              "      <td>34095.968</td>\n",
              "      <td>6605.000</td>\n",
              "      <td>3.307650e+04</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "      <td>-0.016368</td>\n",
              "      <td>-8.410000e+02</td>\n",
              "      <td>Educational Services</td>\n",
              "      <td>Zovio Inc</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3556</th>\n",
              "      <td>ZWS</td>\n",
              "      <td>340300.0</td>\n",
              "      <td>195100.0</td>\n",
              "      <td>1.196000e+05</td>\n",
              "      <td>3400.0</td>\n",
              "      <td>50400.000000</td>\n",
              "      <td>22000.000</td>\n",
              "      <td>1176300.0</td>\n",
              "      <td>946900.0</td>\n",
              "      <td>5600.0</td>\n",
              "      <td>...</td>\n",
              "      <td>27.179735</td>\n",
              "      <td>27.24</td>\n",
              "      <td>125967.533</td>\n",
              "      <td>229400.000</td>\n",
              "      <td>3.431356e+06</td>\n",
              "      <td>5.380000e+04</td>\n",
              "      <td>0.188248</td>\n",
              "      <td>5.350000e+04</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>Zurn Elkay Water Solutions Corp</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3557</th>\n",
              "      <td>ZY</td>\n",
              "      <td>14546.0</td>\n",
              "      <td>48949.0</td>\n",
              "      <td>2.327660e+05</td>\n",
              "      <td>69138.0</td>\n",
              "      <td>-2028.000000</td>\n",
              "      <td>26572.000</td>\n",
              "      <td>470968.0</td>\n",
              "      <td>234345.0</td>\n",
              "      <td>7900.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.23</td>\n",
              "      <td>1.23</td>\n",
              "      <td>103140.755</td>\n",
              "      <td>236623.000</td>\n",
              "      <td>1.268631e+05</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "      <td>-40.317388</td>\n",
              "      <td>-1.061960e+05</td>\n",
              "      <td>Professional, Scientific, and Technical Services</td>\n",
              "      <td>Zymergen Inc</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3558</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.711977e+04</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-818.374594</td>\n",
              "      <td>-197.206</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>9765.086</td>\n",
              "      <td>211.965</td>\n",
              "      <td>...</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>-inf</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 22 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-afe05748-3483-41ee-b909-18bbdeac220d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-afe05748-3483-41ee-b909-18bbdeac220d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-afe05748-3483-41ee-b909-18bbdeac220d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ],
      "source": [
        "mergedDF = pd.DataFrame()\n",
        "for i in df:\n",
        "  mergedDF = mergedDF.append(i, ignore_index = True)\n",
        "mergedDF"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zjg83FF3ZZdm"
      },
      "source": [
        "# Specific questions:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "arBpZCh4cTjf"
      },
      "source": [
        "## 2.2.1 About descriptive statistics:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vW91-TvxluXz"
      },
      "source": [
        "### **2.2**.1.1 Considering the most recent financial quarter"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Cev7GAREEZpJ"
      },
      "source": [
        "#### Show how many firms by industry there are in the sample"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 123,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CktRakxSlsnG",
        "outputId": "46b61d18-02e6-4b40-c83b-61b172344e2e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Sector NAICS\\nlevel 1\n",
              "-                                                                              1\n",
              "Accommodation and Food Services                                               69\n",
              "Administrative and Support and Waste Management and Remediation Services     132\n",
              "Agriculture, Forestry, Fishing and Hunting                                    16\n",
              "Arts, Entertainment, and Recreation                                           21\n",
              "Construction                                                                  45\n",
              "Educational Services                                                          14\n",
              "Finance and Insurance                                                        697\n",
              "Health Care and Social Assistance                                             64\n",
              "Information                                                                  260\n",
              "Manufacturing                                                               1533\n",
              "Mining, Quarrying, and Oil and Gas Extraction                                103\n",
              "Other Services (except Public Administration)                                 16\n",
              "Professional, Scientific, and Technical Services                             144\n",
              "Real Estate and Rental and Leasing                                            67\n",
              "Retail Trade                                                                 152\n",
              "Transportation and Warehousing                                                69\n",
              "Utilities                                                                     77\n",
              "Wholesale Trade                                                               79\n",
              "Name: firm, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ],
      "source": [
        "#d f.nunique()\n",
        "mergedDF.groupby('Sector NAICS\\nlevel 1')[\"firm\"].nunique()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uvlfED-QGtjo"
      },
      "source": [
        "#### For each industry (and for all industries), What can you say about the typical firm size in terms of market value and book value?, How much these variables change within each industry?, How firm size (in market value) is distributed?\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 124,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xT03grkRGvck",
        "outputId": "8ff40704-3d7b-4d76-e634-57383a81d8e2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['firm', 'revenue', 'cogs', 'sgae', 'otheropexp', 'extraincome',\n",
              "       'finexp', 'totalassets', 'totalliabilities', 'shortdebt', 'longdebt',\n",
              "       'stockholderequity', 'adjprice', 'originalprice', 'sharesoutstanding',\n",
              "       'book_value', 'market_value', 'operating_profit',\n",
              "       'operating_profit_margin', 'ebit', 'Sector NAICS\\nlevel 1', 'Name'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 124
        }
      ],
      "source": [
        "# Revision de nombre de las columnas para los siguientes comandos\n",
        "mergedDF.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 125,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "fgQL3rBVaQTS",
        "outputId": "7ec9b532-880d-482f-cf9f-bc33099a3970"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count          mean  std           min           25%           50%  \\\n",
              "firm                                                                       \n",
              "A       1.0  3.547756e+07  NaN  3.547756e+07  3.547756e+07  3.547756e+07   \n",
              "AA      1.0  8.407171e+06  NaN  8.407171e+06  8.407171e+06  8.407171e+06   \n",
              "AAIC    1.0  1.138033e+05  NaN  1.138033e+05  1.138033e+05  1.138033e+05   \n",
              "AAL     1.0  8.235848e+06  NaN  8.235848e+06  8.235848e+06  8.235848e+06   \n",
              "AAME    1.0  5.446399e+04  NaN  5.446399e+04  5.446399e+04  5.446399e+04   \n",
              "...     ...           ...  ...           ...           ...           ...   \n",
              "ZVIA    1.0  1.888586e+05  NaN  1.888586e+05  1.888586e+05  1.888586e+05   \n",
              "ZVO     1.0  3.307650e+04  NaN  3.307650e+04  3.307650e+04  3.307650e+04   \n",
              "ZWS     1.0  3.431356e+06  NaN  3.431356e+06  3.431356e+06  3.431356e+06   \n",
              "ZY      1.0  1.268631e+05  NaN  1.268631e+05  1.268631e+05  1.268631e+05   \n",
              "ZYNE    1.0  4.969939e+04  NaN  4.969939e+04  4.969939e+04  4.969939e+04   \n",
              "\n",
              "               75%           max  \n",
              "firm                              \n",
              "A     3.547756e+07  3.547756e+07  \n",
              "AA    8.407171e+06  8.407171e+06  \n",
              "AAIC  1.138033e+05  1.138033e+05  \n",
              "AAL   8.235848e+06  8.235848e+06  \n",
              "AAME  5.446399e+04  5.446399e+04  \n",
              "...            ...           ...  \n",
              "ZVIA  1.888586e+05  1.888586e+05  \n",
              "ZVO   3.307650e+04  3.307650e+04  \n",
              "ZWS   3.431356e+06  3.431356e+06  \n",
              "ZY    1.268631e+05  1.268631e+05  \n",
              "ZYNE  4.969939e+04  4.969939e+04  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f6df7537-7a87-46c6-9608-3e338eb0de1c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>1.0</td>\n",
              "      <td>3.547756e+07</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.547756e+07</td>\n",
              "      <td>3.547756e+07</td>\n",
              "      <td>3.547756e+07</td>\n",
              "      <td>3.547756e+07</td>\n",
              "      <td>3.547756e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>8.407171e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.407171e+06</td>\n",
              "      <td>8.407171e+06</td>\n",
              "      <td>8.407171e+06</td>\n",
              "      <td>8.407171e+06</td>\n",
              "      <td>8.407171e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.138033e+05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.138033e+05</td>\n",
              "      <td>1.138033e+05</td>\n",
              "      <td>1.138033e+05</td>\n",
              "      <td>1.138033e+05</td>\n",
              "      <td>1.138033e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>1.0</td>\n",
              "      <td>8.235848e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>8.235848e+06</td>\n",
              "      <td>8.235848e+06</td>\n",
              "      <td>8.235848e+06</td>\n",
              "      <td>8.235848e+06</td>\n",
              "      <td>8.235848e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>1.0</td>\n",
              "      <td>5.446399e+04</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.446399e+04</td>\n",
              "      <td>5.446399e+04</td>\n",
              "      <td>5.446399e+04</td>\n",
              "      <td>5.446399e+04</td>\n",
              "      <td>5.446399e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.888586e+05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.888586e+05</td>\n",
              "      <td>1.888586e+05</td>\n",
              "      <td>1.888586e+05</td>\n",
              "      <td>1.888586e+05</td>\n",
              "      <td>1.888586e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>1.0</td>\n",
              "      <td>3.307650e+04</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.307650e+04</td>\n",
              "      <td>3.307650e+04</td>\n",
              "      <td>3.307650e+04</td>\n",
              "      <td>3.307650e+04</td>\n",
              "      <td>3.307650e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>1.0</td>\n",
              "      <td>3.431356e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.431356e+06</td>\n",
              "      <td>3.431356e+06</td>\n",
              "      <td>3.431356e+06</td>\n",
              "      <td>3.431356e+06</td>\n",
              "      <td>3.431356e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.268631e+05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.268631e+05</td>\n",
              "      <td>1.268631e+05</td>\n",
              "      <td>1.268631e+05</td>\n",
              "      <td>1.268631e+05</td>\n",
              "      <td>1.268631e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>1.0</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>4.969939e+04</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6df7537-7a87-46c6-9608-3e338eb0de1c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f6df7537-7a87-46c6-9608-3e338eb0de1c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f6df7537-7a87-46c6-9608-3e338eb0de1c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ],
      "source": [
        "# Datos del Market Value de Cada Firma\n",
        "mergedDF.groupby('firm')['market_value'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 126,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "QVk9njMpG6JW",
        "outputId": "594f9e88-8e7a-4512-fa58-9a2e49fd8454"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                     count          mean  \\\n",
              "Sector NAICS\\nlevel 1                                                      \n",
              "-                                                      1.0  4.865183e+06   \n",
              "Accommodation and Food Services                       69.0  8.693665e+06   \n",
              "Administrative and Support and Waste Management...   132.0  1.378746e+07   \n",
              "Agriculture, Forestry, Fishing and Hunting            16.0  8.049362e+06   \n",
              "Arts, Entertainment, and Recreation                   21.0  1.343285e+07   \n",
              "Construction                                          45.0  3.859302e+06   \n",
              "Educational Services                                  14.0  1.302581e+06   \n",
              "Finance and Insurance                                697.0  8.332506e+06   \n",
              "Health Care and Social Assistance                     64.0  3.496784e+06   \n",
              "Information                                          260.0  1.932010e+07   \n",
              "Manufacturing                                       1533.0  1.042979e+07   \n",
              "Mining, Quarrying, and Oil and Gas Extraction        103.0  6.789641e+06   \n",
              "Other Services (except Public Administration)         16.0  2.145581e+06   \n",
              "Professional, Scientific, and Technical Services     144.0  1.734943e+07   \n",
              "Real Estate and Rental and Leasing                    67.0  3.680102e+06   \n",
              "Retail Trade                                         152.0  2.007495e+07   \n",
              "Transportation and Warehousing                        69.0  1.177901e+07   \n",
              "Utilities                                             77.0  1.573449e+07   \n",
              "Wholesale Trade                                       79.0  4.847166e+06   \n",
              "\n",
              "                                                             std  \\\n",
              "Sector NAICS\\nlevel 1                                              \n",
              "-                                                            NaN   \n",
              "Accommodation and Food Services                     2.506871e+07   \n",
              "Administrative and Support and Waste Management...  4.460524e+07   \n",
              "Agriculture, Forestry, Fishing and Hunting          1.457046e+07   \n",
              "Arts, Entertainment, and Recreation                 3.687909e+07   \n",
              "Construction                                        5.645182e+06   \n",
              "Educational Services                                1.039264e+06   \n",
              "Finance and Insurance                               2.906470e+07   \n",
              "Health Care and Social Assistance                   6.971670e+06   \n",
              "Information                                         1.223585e+08   \n",
              "Manufacturing                                       6.759643e+07   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       1.362057e+07   \n",
              "Other Services (except Public Administration)       2.934968e+06   \n",
              "Professional, Scientific, and Technical Services    1.245419e+08   \n",
              "Real Estate and Rental and Leasing                  1.027568e+07   \n",
              "Retail Trade                                        9.621915e+07   \n",
              "Transportation and Warehousing                      2.717960e+07   \n",
              "Utilities                                           2.311145e+07   \n",
              "Wholesale Trade                                     8.621418e+06   \n",
              "\n",
              "                                                             min  \\\n",
              "Sector NAICS\\nlevel 1                                              \n",
              "-                                                   4.865183e+06   \n",
              "Accommodation and Food Services                     1.104731e+04   \n",
              "Administrative and Support and Waste Management...  6.078575e+03   \n",
              "Agriculture, Forestry, Fishing and Hunting          2.218892e+04   \n",
              "Arts, Entertainment, and Recreation                 7.425361e+03   \n",
              "Construction                                        2.026958e+04   \n",
              "Educational Services                                3.307650e+04   \n",
              "Finance and Insurance                               9.530881e+03   \n",
              "Health Care and Social Assistance                   1.015306e+04   \n",
              "Information                                         1.094166e+04   \n",
              "Manufacturing                                       3.539763e+03   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       3.490000e+01   \n",
              "Other Services (except Public Administration)       2.875930e+04   \n",
              "Professional, Scientific, and Technical Services    5.340842e+03   \n",
              "Real Estate and Rental and Leasing                  1.330728e+04   \n",
              "Retail Trade                                        6.178873e+03   \n",
              "Transportation and Warehousing                      2.589804e+04   \n",
              "Utilities                                           3.152434e+04   \n",
              "Wholesale Trade                                     8.372651e+03   \n",
              "\n",
              "                                                             25%  \\\n",
              "Sector NAICS\\nlevel 1                                              \n",
              "-                                                   4.865183e+06   \n",
              "Accommodation and Food Services                     2.792043e+05   \n",
              "Administrative and Support and Waste Management...  5.259900e+05   \n",
              "Agriculture, Forestry, Fishing and Hunting          2.645742e+05   \n",
              "Arts, Entertainment, and Recreation                 1.146178e+06   \n",
              "Construction                                        6.271708e+05   \n",
              "Educational Services                                2.528720e+05   \n",
              "Finance and Insurance                               3.555148e+05   \n",
              "Health Care and Social Assistance                   1.530626e+05   \n",
              "Information                                         7.279416e+05   \n",
              "Manufacturing                                       9.629442e+04   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       1.542948e+05   \n",
              "Other Services (except Public Administration)       1.955103e+05   \n",
              "Professional, Scientific, and Technical Services    1.700553e+05   \n",
              "Real Estate and Rental and Leasing                  2.244812e+05   \n",
              "Retail Trade                                        3.175390e+05   \n",
              "Transportation and Warehousing                      7.344904e+05   \n",
              "Utilities                                           2.794666e+06   \n",
              "Wholesale Trade                                     2.329474e+05   \n",
              "\n",
              "                                                             50%  \\\n",
              "Sector NAICS\\nlevel 1                                              \n",
              "-                                                   4.865183e+06   \n",
              "Accommodation and Food Services                     1.474242e+06   \n",
              "Administrative and Support and Waste Management...  1.961411e+06   \n",
              "Agriculture, Forestry, Fishing and Hunting          1.264045e+06   \n",
              "Arts, Entertainment, and Recreation                 2.849838e+06   \n",
              "Construction                                        1.745045e+06   \n",
              "Educational Services                                1.524843e+06   \n",
              "Finance and Insurance                               1.253038e+06   \n",
              "Health Care and Social Assistance                   1.378546e+06   \n",
              "Information                                         2.546684e+06   \n",
              "Manufacturing                                       5.933183e+05   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       1.042405e+06   \n",
              "Other Services (except Public Administration)       8.540956e+05   \n",
              "Professional, Scientific, and Technical Services    9.532023e+05   \n",
              "Real Estate and Rental and Leasing                  8.831111e+05   \n",
              "Retail Trade                                        1.444971e+06   \n",
              "Transportation and Warehousing                      2.458788e+06   \n",
              "Utilities                                           6.040649e+06   \n",
              "Wholesale Trade                                     1.424602e+06   \n",
              "\n",
              "                                                             75%           max  \n",
              "Sector NAICS\\nlevel 1                                                           \n",
              "-                                                   4.865183e+06  4.865183e+06  \n",
              "Accommodation and Food Services                     5.181216e+06  1.816339e+08  \n",
              "Administrative and Support and Waste Management...  6.399546e+06  3.743426e+08  \n",
              "Agriculture, Forestry, Fishing and Hunting          5.211223e+06  4.505560e+07  \n",
              "Arts, Entertainment, and Recreation                 8.776708e+06  1.719481e+08  \n",
              "Construction                                        3.456494e+06  2.330088e+07  \n",
              "Educational Services                                1.869224e+06  3.044160e+06  \n",
              "Finance and Insurance                               4.744693e+06  4.818731e+08  \n",
              "Health Care and Social Assistance                   4.291806e+06  4.965911e+07  \n",
              "Information                                         7.757159e+06  1.920840e+09  \n",
              "Manufacturing                                       3.218231e+06  2.212838e+09  \n",
              "Mining, Quarrying, and Oil and Gas Extraction       4.686079e+06  6.468620e+07  \n",
              "Other Services (except Public Administration)       3.250765e+06  1.097183e+07  \n",
              "Professional, Scientific, and Technical Services    5.073014e+06  1.435042e+09  \n",
              "Real Estate and Rental and Leasing                  2.474306e+06  7.776567e+07  \n",
              "Retail Trade                                        6.191733e+06  1.080624e+09  \n",
              "Transportation and Warehousing                      8.603430e+06  1.594973e+08  \n",
              "Utilities                                           2.290808e+07  1.521918e+08  \n",
              "Wholesale Trade                                     5.386258e+06  4.741962e+07  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c85ffa81-1873-4c12-9f43-6132a765db9e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>-</th>\n",
              "      <td>1.0</td>\n",
              "      <td>4.865183e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.865183e+06</td>\n",
              "      <td>4.865183e+06</td>\n",
              "      <td>4.865183e+06</td>\n",
              "      <td>4.865183e+06</td>\n",
              "      <td>4.865183e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Accommodation and Food Services</th>\n",
              "      <td>69.0</td>\n",
              "      <td>8.693665e+06</td>\n",
              "      <td>2.506871e+07</td>\n",
              "      <td>1.104731e+04</td>\n",
              "      <td>2.792043e+05</td>\n",
              "      <td>1.474242e+06</td>\n",
              "      <td>5.181216e+06</td>\n",
              "      <td>1.816339e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Administrative and Support and Waste Management and Remediation Services</th>\n",
              "      <td>132.0</td>\n",
              "      <td>1.378746e+07</td>\n",
              "      <td>4.460524e+07</td>\n",
              "      <td>6.078575e+03</td>\n",
              "      <td>5.259900e+05</td>\n",
              "      <td>1.961411e+06</td>\n",
              "      <td>6.399546e+06</td>\n",
              "      <td>3.743426e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agriculture, Forestry, Fishing and Hunting</th>\n",
              "      <td>16.0</td>\n",
              "      <td>8.049362e+06</td>\n",
              "      <td>1.457046e+07</td>\n",
              "      <td>2.218892e+04</td>\n",
              "      <td>2.645742e+05</td>\n",
              "      <td>1.264045e+06</td>\n",
              "      <td>5.211223e+06</td>\n",
              "      <td>4.505560e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Arts, Entertainment, and Recreation</th>\n",
              "      <td>21.0</td>\n",
              "      <td>1.343285e+07</td>\n",
              "      <td>3.687909e+07</td>\n",
              "      <td>7.425361e+03</td>\n",
              "      <td>1.146178e+06</td>\n",
              "      <td>2.849838e+06</td>\n",
              "      <td>8.776708e+06</td>\n",
              "      <td>1.719481e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Construction</th>\n",
              "      <td>45.0</td>\n",
              "      <td>3.859302e+06</td>\n",
              "      <td>5.645182e+06</td>\n",
              "      <td>2.026958e+04</td>\n",
              "      <td>6.271708e+05</td>\n",
              "      <td>1.745045e+06</td>\n",
              "      <td>3.456494e+06</td>\n",
              "      <td>2.330088e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Educational Services</th>\n",
              "      <td>14.0</td>\n",
              "      <td>1.302581e+06</td>\n",
              "      <td>1.039264e+06</td>\n",
              "      <td>3.307650e+04</td>\n",
              "      <td>2.528720e+05</td>\n",
              "      <td>1.524843e+06</td>\n",
              "      <td>1.869224e+06</td>\n",
              "      <td>3.044160e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>697.0</td>\n",
              "      <td>8.332506e+06</td>\n",
              "      <td>2.906470e+07</td>\n",
              "      <td>9.530881e+03</td>\n",
              "      <td>3.555148e+05</td>\n",
              "      <td>1.253038e+06</td>\n",
              "      <td>4.744693e+06</td>\n",
              "      <td>4.818731e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Health Care and Social Assistance</th>\n",
              "      <td>64.0</td>\n",
              "      <td>3.496784e+06</td>\n",
              "      <td>6.971670e+06</td>\n",
              "      <td>1.015306e+04</td>\n",
              "      <td>1.530626e+05</td>\n",
              "      <td>1.378546e+06</td>\n",
              "      <td>4.291806e+06</td>\n",
              "      <td>4.965911e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Information</th>\n",
              "      <td>260.0</td>\n",
              "      <td>1.932010e+07</td>\n",
              "      <td>1.223585e+08</td>\n",
              "      <td>1.094166e+04</td>\n",
              "      <td>7.279416e+05</td>\n",
              "      <td>2.546684e+06</td>\n",
              "      <td>7.757159e+06</td>\n",
              "      <td>1.920840e+09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Manufacturing</th>\n",
              "      <td>1533.0</td>\n",
              "      <td>1.042979e+07</td>\n",
              "      <td>6.759643e+07</td>\n",
              "      <td>3.539763e+03</td>\n",
              "      <td>9.629442e+04</td>\n",
              "      <td>5.933183e+05</td>\n",
              "      <td>3.218231e+06</td>\n",
              "      <td>2.212838e+09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mining, Quarrying, and Oil and Gas Extraction</th>\n",
              "      <td>103.0</td>\n",
              "      <td>6.789641e+06</td>\n",
              "      <td>1.362057e+07</td>\n",
              "      <td>3.490000e+01</td>\n",
              "      <td>1.542948e+05</td>\n",
              "      <td>1.042405e+06</td>\n",
              "      <td>4.686079e+06</td>\n",
              "      <td>6.468620e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Other Services (except Public Administration)</th>\n",
              "      <td>16.0</td>\n",
              "      <td>2.145581e+06</td>\n",
              "      <td>2.934968e+06</td>\n",
              "      <td>2.875930e+04</td>\n",
              "      <td>1.955103e+05</td>\n",
              "      <td>8.540956e+05</td>\n",
              "      <td>3.250765e+06</td>\n",
              "      <td>1.097183e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Professional, Scientific, and Technical Services</th>\n",
              "      <td>144.0</td>\n",
              "      <td>1.734943e+07</td>\n",
              "      <td>1.245419e+08</td>\n",
              "      <td>5.340842e+03</td>\n",
              "      <td>1.700553e+05</td>\n",
              "      <td>9.532023e+05</td>\n",
              "      <td>5.073014e+06</td>\n",
              "      <td>1.435042e+09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Real Estate and Rental and Leasing</th>\n",
              "      <td>67.0</td>\n",
              "      <td>3.680102e+06</td>\n",
              "      <td>1.027568e+07</td>\n",
              "      <td>1.330728e+04</td>\n",
              "      <td>2.244812e+05</td>\n",
              "      <td>8.831111e+05</td>\n",
              "      <td>2.474306e+06</td>\n",
              "      <td>7.776567e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Retail Trade</th>\n",
              "      <td>152.0</td>\n",
              "      <td>2.007495e+07</td>\n",
              "      <td>9.621915e+07</td>\n",
              "      <td>6.178873e+03</td>\n",
              "      <td>3.175390e+05</td>\n",
              "      <td>1.444971e+06</td>\n",
              "      <td>6.191733e+06</td>\n",
              "      <td>1.080624e+09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Transportation and Warehousing</th>\n",
              "      <td>69.0</td>\n",
              "      <td>1.177901e+07</td>\n",
              "      <td>2.717960e+07</td>\n",
              "      <td>2.589804e+04</td>\n",
              "      <td>7.344904e+05</td>\n",
              "      <td>2.458788e+06</td>\n",
              "      <td>8.603430e+06</td>\n",
              "      <td>1.594973e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Utilities</th>\n",
              "      <td>77.0</td>\n",
              "      <td>1.573449e+07</td>\n",
              "      <td>2.311145e+07</td>\n",
              "      <td>3.152434e+04</td>\n",
              "      <td>2.794666e+06</td>\n",
              "      <td>6.040649e+06</td>\n",
              "      <td>2.290808e+07</td>\n",
              "      <td>1.521918e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Wholesale Trade</th>\n",
              "      <td>79.0</td>\n",
              "      <td>4.847166e+06</td>\n",
              "      <td>8.621418e+06</td>\n",
              "      <td>8.372651e+03</td>\n",
              "      <td>2.329474e+05</td>\n",
              "      <td>1.424602e+06</td>\n",
              "      <td>5.386258e+06</td>\n",
              "      <td>4.741962e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c85ffa81-1873-4c12-9f43-6132a765db9e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c85ffa81-1873-4c12-9f43-6132a765db9e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c85ffa81-1873-4c12-9f43-6132a765db9e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 126
        }
      ],
      "source": [
        "# Datos del Market Value de Cada Sector\n",
        "mergedDF.groupby('Sector NAICS\\nlevel 1')['market_value'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 127,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 670
        },
        "id": "uRuhSvooHFaI",
        "outputId": "02fd1405-c6a0-4047-b920-eaecd580ac7d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
              "        17, 18]), <a list of 19 Text major ticklabel objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 127
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Market Value\n",
        "#barplot\n",
        "sns.boxenplot(x='Sector NAICS\\nlevel 1', y='market_value', data=mergedDF)\n",
        "plt.xticks(rotation = 45, ha = \"right\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 128,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W4UaGciyHMiJ",
        "outputId": "f4e8cac2-c4b6-4d0b-d5d3-c57058f8f88d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1105860.1742999998"
            ]
          },
          "metadata": {},
          "execution_count": 128
        }
      ],
      "source": [
        "#Market Value median\n",
        "\n",
        "mergedDF['market_value'].median()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 129,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bWj1pS-vhYkO",
        "outputId": "18608a36-337b-476e-bf4e-4c817e5a4e28"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    3.559000e+03\n",
              "mean     1.096046e+07\n",
              "std      6.622548e+07\n",
              "min      3.490000e+01\n",
              "25%      1.932212e+05\n",
              "50%      1.105860e+06\n",
              "75%      4.615835e+06\n",
              "max      2.212838e+09\n",
              "Name: market_value, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 129
        }
      ],
      "source": [
        "mergedDF['market_value'].describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ej6Mez3Sk_hY"
      },
      "source": [
        "##### Respuesta (Valor de mercado)\n",
        "\n",
        "Como podemos ver en la grafica de box plot en la mayorias de las industrias las firmas suelen tener un tamaño basado en valor de mercado muy similares entre firmas de la misma industria, por ejemplo en la construcción, en donde el rango de tamaño de las firmas se encuentra muy condensado.\n",
        "\n",
        "En las industrias antes mencionadas podemos pensar que corresponden a los dos primeros cuartiles en general, como a su vez podemos considerar que las industrias de manofactura, finasas y el comercio minorista son los principales responsables de firmas dentro del tercer cuartil en genral.\n",
        "\n",
        "Y si bien en un primer inicio podriamos considerar que los outlayers (firmas cuyo tamaño es anormalmente mas grandes que las mayoria de las firmas en las mismas industrias) corresponderian principalmente a las industrias con valor del tercer cuartil mas grande, en la realidad no es asi, ya que como podemos observar en la industrias de servicios tecnicos y de informacion hay firmas que son de las mas grandes en general."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 130,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "1qHbHYiZaiN_",
        "outputId": "c128b754-738e-4189-f196-7e60ab81051a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count         mean  std          min          25%          50%  \\\n",
              "firm                                                                   \n",
              "A       1.0  5122000.000  NaN  5122000.000  5122000.000  5122000.000   \n",
              "AA      1.0  7292000.000  NaN  7292000.000  7292000.000  7292000.000   \n",
              "AAIC    1.0   213698.000  NaN   213698.000   213698.000   213698.000   \n",
              "AAL     1.0 -8422000.000  NaN -8422000.000 -8422000.000 -8422000.000   \n",
              "AAME    1.0   109101.000  NaN   109101.000   109101.000   109101.000   \n",
              "...     ...          ...  ...          ...          ...          ...   \n",
              "ZVIA    1.0    87199.000  NaN    87199.000    87199.000    87199.000   \n",
              "ZVO     1.0     6605.000  NaN     6605.000     6605.000     6605.000   \n",
              "ZWS     1.0   229400.000  NaN   229400.000   229400.000   229400.000   \n",
              "ZY      1.0   236623.000  NaN   236623.000   236623.000   236623.000   \n",
              "ZYNE    1.0    57241.873  NaN    57241.873    57241.873    57241.873   \n",
              "\n",
              "              75%          max  \n",
              "firm                            \n",
              "A     5122000.000  5122000.000  \n",
              "AA    7292000.000  7292000.000  \n",
              "AAIC   213698.000   213698.000  \n",
              "AAL  -8422000.000 -8422000.000  \n",
              "AAME   109101.000   109101.000  \n",
              "...           ...          ...  \n",
              "ZVIA    87199.000    87199.000  \n",
              "ZVO      6605.000     6605.000  \n",
              "ZWS    229400.000   229400.000  \n",
              "ZY     236623.000   236623.000  \n",
              "ZYNE    57241.873    57241.873  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f4648ffe-a068-4cad-80e1-3477c0115bc8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>1.0</td>\n",
              "      <td>5122000.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5122000.000</td>\n",
              "      <td>5122000.000</td>\n",
              "      <td>5122000.000</td>\n",
              "      <td>5122000.000</td>\n",
              "      <td>5122000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>7292000.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7292000.000</td>\n",
              "      <td>7292000.000</td>\n",
              "      <td>7292000.000</td>\n",
              "      <td>7292000.000</td>\n",
              "      <td>7292000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>1.0</td>\n",
              "      <td>213698.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>213698.000</td>\n",
              "      <td>213698.000</td>\n",
              "      <td>213698.000</td>\n",
              "      <td>213698.000</td>\n",
              "      <td>213698.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-8422000.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-8422000.000</td>\n",
              "      <td>-8422000.000</td>\n",
              "      <td>-8422000.000</td>\n",
              "      <td>-8422000.000</td>\n",
              "      <td>-8422000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>1.0</td>\n",
              "      <td>109101.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>109101.000</td>\n",
              "      <td>109101.000</td>\n",
              "      <td>109101.000</td>\n",
              "      <td>109101.000</td>\n",
              "      <td>109101.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>87199.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>87199.000</td>\n",
              "      <td>87199.000</td>\n",
              "      <td>87199.000</td>\n",
              "      <td>87199.000</td>\n",
              "      <td>87199.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>1.0</td>\n",
              "      <td>6605.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6605.000</td>\n",
              "      <td>6605.000</td>\n",
              "      <td>6605.000</td>\n",
              "      <td>6605.000</td>\n",
              "      <td>6605.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>1.0</td>\n",
              "      <td>229400.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>229400.000</td>\n",
              "      <td>229400.000</td>\n",
              "      <td>229400.000</td>\n",
              "      <td>229400.000</td>\n",
              "      <td>229400.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>1.0</td>\n",
              "      <td>236623.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>236623.000</td>\n",
              "      <td>236623.000</td>\n",
              "      <td>236623.000</td>\n",
              "      <td>236623.000</td>\n",
              "      <td>236623.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>1.0</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>NaN</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>57241.873</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4648ffe-a068-4cad-80e1-3477c0115bc8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f4648ffe-a068-4cad-80e1-3477c0115bc8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f4648ffe-a068-4cad-80e1-3477c0115bc8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ],
      "source": [
        "# Datos del Market Value de Cada Firma\n",
        "mergedDF.groupby('firm')['book_value'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 131,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Okxq35UAHQpP",
        "outputId": "0822e462-ded2-4dd7-e593-8e3c088b34fc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                     count          mean  \\\n",
              "Sector NAICS\\nlevel 1                                                      \n",
              "-                                                      1.0  5.704446e+06   \n",
              "Accommodation and Food Services                       69.0  5.019647e+05   \n",
              "Administrative and Support and Waste Management...   132.0  2.677850e+06   \n",
              "Agriculture, Forestry, Fishing and Hunting            16.0  3.406701e+06   \n",
              "Arts, Entertainment, and Recreation                   21.0  5.061617e+06   \n",
              "Construction                                          45.0  2.483906e+06   \n",
              "Educational Services                                  14.0  8.931767e+05   \n",
              "Finance and Insurance                                697.0  5.269128e+06   \n",
              "Health Care and Social Assistance                     64.0  1.032707e+06   \n",
              "Information                                          260.0  4.026827e+06   \n",
              "Manufacturing                                       1533.0  2.307380e+06   \n",
              "Mining, Quarrying, and Oil and Gas Extraction        103.0  3.156415e+06   \n",
              "Other Services (except Public Administration)         16.0  5.288942e+05   \n",
              "Professional, Scientific, and Technical Services     144.0  3.506564e+06   \n",
              "Real Estate and Rental and Leasing                    67.0  1.761279e+06   \n",
              "Retail Trade                                         152.0  3.292206e+06   \n",
              "Transportation and Warehousing                        69.0  3.459228e+06   \n",
              "Utilities                                             77.0  7.480733e+06   \n",
              "Wholesale Trade                                       79.0  1.480367e+06   \n",
              "\n",
              "                                                             std         min  \\\n",
              "Sector NAICS\\nlevel 1                                                          \n",
              "-                                                            NaN   5704446.0   \n",
              "Accommodation and Food Services                     2.440004e+06  -8658900.0   \n",
              "Administrative and Support and Waste Management...  7.116921e+06  -1026446.0   \n",
              "Agriculture, Forestry, Fishing and Hunting          6.635579e+06     14751.0   \n",
              "Arts, Entertainment, and Recreation                 2.096327e+07  -1081020.0   \n",
              "Construction                                        4.236454e+06     83162.0   \n",
              "Educational Services                                1.110081e+06      6605.0   \n",
              "Finance and Insurance                               2.022819e+07  -5438611.0   \n",
              "Health Care and Social Assistance                   1.861076e+06  -1656000.0   \n",
              "Information                                         1.675064e+07  -5768000.0   \n",
              "Manufacturing                                       9.572149e+06 -14791000.0   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       5.780085e+06   -124369.0   \n",
              "Other Services (except Public Administration)       7.042536e+05   -456108.0   \n",
              "Professional, Scientific, and Technical Services    2.361947e+07  -3342250.0   \n",
              "Real Estate and Rental and Leasing                  3.043750e+06   -649000.0   \n",
              "Retail Trade                                        1.426710e+07  -6877000.0   \n",
              "Transportation and Warehousing                      6.033744e+06  -8422000.0   \n",
              "Utilities                                           1.029320e+07  -1195000.0   \n",
              "Wholesale Trade                                     2.841232e+06  -4180309.0   \n",
              "\n",
              "                                                             25%        50%  \\\n",
              "Sector NAICS\\nlevel 1                                                         \n",
              "-                                                   5.704446e+06  5704446.0   \n",
              "Accommodation and Food Services                     1.072699e+04   231685.0   \n",
              "Administrative and Support and Waste Management...  8.216000e+04   525086.0   \n",
              "Agriculture, Forestry, Fishing and Hunting          2.128192e+05  1068506.5   \n",
              "Arts, Entertainment, and Recreation                -1.053470e+05    76168.0   \n",
              "Construction                                        4.073750e+05   963495.0   \n",
              "Educational Services                                2.377335e+05   649699.0   \n",
              "Finance and Insurance                               2.828350e+05  1010618.0   \n",
              "Health Care and Social Assistance                   7.764775e+04   444065.5   \n",
              "Information                                         1.353823e+05   482824.5   \n",
              "Manufacturing                                       4.616543e+04   229985.0   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       1.355575e+05   679456.0   \n",
              "Other Services (except Public Administration)       6.714814e+04   172889.0   \n",
              "Professional, Scientific, and Technical Services    8.598275e+04   281220.0   \n",
              "Real Estate and Rental and Leasing                  1.755655e+05   578033.0   \n",
              "Retail Trade                                        1.520195e+05   544091.0   \n",
              "Transportation and Warehousing                      4.260000e+05  1232371.0   \n",
              "Utilities                                           1.056057e+06  2845900.0   \n",
              "Wholesale Trade                                     1.661030e+05   683900.0   \n",
              "\n",
              "                                                            75%          max  \n",
              "Sector NAICS\\nlevel 1                                                         \n",
              "-                                                    5704446.00    5704446.0  \n",
              "Accommodation and Food Services                       954019.00    7289000.0  \n",
              "Administrative and Support and Waste Management...   1871825.00   46515000.0  \n",
              "Agriculture, Forestry, Fishing and Hunting           3222425.00   26071000.0  \n",
              "Arts, Entertainment, and Recreation                  1678528.00   96433000.0  \n",
              "Construction                                         2488619.00   21789774.0  \n",
              "Educational Services                                  966118.00    4322243.0  \n",
              "Finance and Insurance                                3259895.00  286143000.0  \n",
              "Health Care and Social Assistance                    1161768.25   10400700.0  \n",
              "Information                                          1306655.25  166542000.0  \n",
              "Manufacturing                                         903600.00  184508000.0  \n",
              "Mining, Quarrying, and Oil and Gas Extraction        2737359.50   27830000.0  \n",
              "Other Services (except Public Administration)         752973.50    1904011.0  \n",
              "Professional, Scientific, and Technical Services     1099311.00  255419000.0  \n",
              "Real Estate and Rental and Leasing                   2083457.00   19075974.0  \n",
              "Retail Trade                                         1629002.75  131402000.0  \n",
              "Transportation and Warehousing                       3446000.00   31625000.0  \n",
              "Utilities                                           10009000.00   51584000.0  \n",
              "Wholesale Trade                                      1774492.50   20582000.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-be6b34e9-a15e-4be9-9773-10e43c711c87\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>-</th>\n",
              "      <td>1.0</td>\n",
              "      <td>5.704446e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5704446.0</td>\n",
              "      <td>5.704446e+06</td>\n",
              "      <td>5704446.0</td>\n",
              "      <td>5704446.00</td>\n",
              "      <td>5704446.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Accommodation and Food Services</th>\n",
              "      <td>69.0</td>\n",
              "      <td>5.019647e+05</td>\n",
              "      <td>2.440004e+06</td>\n",
              "      <td>-8658900.0</td>\n",
              "      <td>1.072699e+04</td>\n",
              "      <td>231685.0</td>\n",
              "      <td>954019.00</td>\n",
              "      <td>7289000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Administrative and Support and Waste Management and Remediation Services</th>\n",
              "      <td>132.0</td>\n",
              "      <td>2.677850e+06</td>\n",
              "      <td>7.116921e+06</td>\n",
              "      <td>-1026446.0</td>\n",
              "      <td>8.216000e+04</td>\n",
              "      <td>525086.0</td>\n",
              "      <td>1871825.00</td>\n",
              "      <td>46515000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agriculture, Forestry, Fishing and Hunting</th>\n",
              "      <td>16.0</td>\n",
              "      <td>3.406701e+06</td>\n",
              "      <td>6.635579e+06</td>\n",
              "      <td>14751.0</td>\n",
              "      <td>2.128192e+05</td>\n",
              "      <td>1068506.5</td>\n",
              "      <td>3222425.00</td>\n",
              "      <td>26071000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Arts, Entertainment, and Recreation</th>\n",
              "      <td>21.0</td>\n",
              "      <td>5.061617e+06</td>\n",
              "      <td>2.096327e+07</td>\n",
              "      <td>-1081020.0</td>\n",
              "      <td>-1.053470e+05</td>\n",
              "      <td>76168.0</td>\n",
              "      <td>1678528.00</td>\n",
              "      <td>96433000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Construction</th>\n",
              "      <td>45.0</td>\n",
              "      <td>2.483906e+06</td>\n",
              "      <td>4.236454e+06</td>\n",
              "      <td>83162.0</td>\n",
              "      <td>4.073750e+05</td>\n",
              "      <td>963495.0</td>\n",
              "      <td>2488619.00</td>\n",
              "      <td>21789774.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Educational Services</th>\n",
              "      <td>14.0</td>\n",
              "      <td>8.931767e+05</td>\n",
              "      <td>1.110081e+06</td>\n",
              "      <td>6605.0</td>\n",
              "      <td>2.377335e+05</td>\n",
              "      <td>649699.0</td>\n",
              "      <td>966118.00</td>\n",
              "      <td>4322243.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>697.0</td>\n",
              "      <td>5.269128e+06</td>\n",
              "      <td>2.022819e+07</td>\n",
              "      <td>-5438611.0</td>\n",
              "      <td>2.828350e+05</td>\n",
              "      <td>1010618.0</td>\n",
              "      <td>3259895.00</td>\n",
              "      <td>286143000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Health Care and Social Assistance</th>\n",
              "      <td>64.0</td>\n",
              "      <td>1.032707e+06</td>\n",
              "      <td>1.861076e+06</td>\n",
              "      <td>-1656000.0</td>\n",
              "      <td>7.764775e+04</td>\n",
              "      <td>444065.5</td>\n",
              "      <td>1161768.25</td>\n",
              "      <td>10400700.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Information</th>\n",
              "      <td>260.0</td>\n",
              "      <td>4.026827e+06</td>\n",
              "      <td>1.675064e+07</td>\n",
              "      <td>-5768000.0</td>\n",
              "      <td>1.353823e+05</td>\n",
              "      <td>482824.5</td>\n",
              "      <td>1306655.25</td>\n",
              "      <td>166542000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Manufacturing</th>\n",
              "      <td>1533.0</td>\n",
              "      <td>2.307380e+06</td>\n",
              "      <td>9.572149e+06</td>\n",
              "      <td>-14791000.0</td>\n",
              "      <td>4.616543e+04</td>\n",
              "      <td>229985.0</td>\n",
              "      <td>903600.00</td>\n",
              "      <td>184508000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mining, Quarrying, and Oil and Gas Extraction</th>\n",
              "      <td>103.0</td>\n",
              "      <td>3.156415e+06</td>\n",
              "      <td>5.780085e+06</td>\n",
              "      <td>-124369.0</td>\n",
              "      <td>1.355575e+05</td>\n",
              "      <td>679456.0</td>\n",
              "      <td>2737359.50</td>\n",
              "      <td>27830000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Other Services (except Public Administration)</th>\n",
              "      <td>16.0</td>\n",
              "      <td>5.288942e+05</td>\n",
              "      <td>7.042536e+05</td>\n",
              "      <td>-456108.0</td>\n",
              "      <td>6.714814e+04</td>\n",
              "      <td>172889.0</td>\n",
              "      <td>752973.50</td>\n",
              "      <td>1904011.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Professional, Scientific, and Technical Services</th>\n",
              "      <td>144.0</td>\n",
              "      <td>3.506564e+06</td>\n",
              "      <td>2.361947e+07</td>\n",
              "      <td>-3342250.0</td>\n",
              "      <td>8.598275e+04</td>\n",
              "      <td>281220.0</td>\n",
              "      <td>1099311.00</td>\n",
              "      <td>255419000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Real Estate and Rental and Leasing</th>\n",
              "      <td>67.0</td>\n",
              "      <td>1.761279e+06</td>\n",
              "      <td>3.043750e+06</td>\n",
              "      <td>-649000.0</td>\n",
              "      <td>1.755655e+05</td>\n",
              "      <td>578033.0</td>\n",
              "      <td>2083457.00</td>\n",
              "      <td>19075974.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Retail Trade</th>\n",
              "      <td>152.0</td>\n",
              "      <td>3.292206e+06</td>\n",
              "      <td>1.426710e+07</td>\n",
              "      <td>-6877000.0</td>\n",
              "      <td>1.520195e+05</td>\n",
              "      <td>544091.0</td>\n",
              "      <td>1629002.75</td>\n",
              "      <td>131402000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Transportation and Warehousing</th>\n",
              "      <td>69.0</td>\n",
              "      <td>3.459228e+06</td>\n",
              "      <td>6.033744e+06</td>\n",
              "      <td>-8422000.0</td>\n",
              "      <td>4.260000e+05</td>\n",
              "      <td>1232371.0</td>\n",
              "      <td>3446000.00</td>\n",
              "      <td>31625000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Utilities</th>\n",
              "      <td>77.0</td>\n",
              "      <td>7.480733e+06</td>\n",
              "      <td>1.029320e+07</td>\n",
              "      <td>-1195000.0</td>\n",
              "      <td>1.056057e+06</td>\n",
              "      <td>2845900.0</td>\n",
              "      <td>10009000.00</td>\n",
              "      <td>51584000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Wholesale Trade</th>\n",
              "      <td>79.0</td>\n",
              "      <td>1.480367e+06</td>\n",
              "      <td>2.841232e+06</td>\n",
              "      <td>-4180309.0</td>\n",
              "      <td>1.661030e+05</td>\n",
              "      <td>683900.0</td>\n",
              "      <td>1774492.50</td>\n",
              "      <td>20582000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be6b34e9-a15e-4be9-9773-10e43c711c87')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-be6b34e9-a15e-4be9-9773-10e43c711c87 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-be6b34e9-a15e-4be9-9773-10e43c711c87');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ],
      "source": [
        "# Datos del Book Value de Cada Sector\n",
        "mergedDF.groupby('Sector NAICS\\nlevel 1')['book_value'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 132,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 670
        },
        "id": "Kd2M6dGaHUnk",
        "outputId": "c777049f-d7f1-47f5-fc3a-56775b4ee7dc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
              "        17, 18]), <a list of 19 Text major ticklabel objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 132
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Book Value\n",
        "\n",
        "sns.boxenplot(x='Sector NAICS\\nlevel 1', y='book_value', data=mergedDF)\n",
        "plt.xticks(rotation = 45, ha = \"right\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 133,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "84GZAnLAHUse",
        "outputId": "ee61a3c7-ba4f-4769-b9e8-4a3371f3e467"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "431283.0"
            ]
          },
          "metadata": {},
          "execution_count": 133
        }
      ],
      "source": [
        "#Market Book Value\n",
        "\n",
        "mergedDF['book_value'].median()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 134,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wjkwiScChghw",
        "outputId": "9afe25c7-ee24-4e07-efe1-8c67a4fe2289"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    3.559000e+03\n",
              "mean     3.200436e+06\n",
              "std      1.349909e+07\n",
              "min     -1.479100e+07\n",
              "25%      9.744857e+04\n",
              "50%      4.312830e+05\n",
              "75%      1.728704e+06\n",
              "max      2.861430e+08\n",
              "Name: book_value, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 134
        }
      ],
      "source": [
        "mergedDF['book_value'].describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "loZkPAHSyQve"
      },
      "source": [
        "##### Respuesta (Valor de libro)\n",
        "\n",
        "A diferencia del valor de mercado, podemos observar que el tamaño de las firmas en base a valor de libro suelen tener rangos mas diversos entre industrias, y que hay industrias que son mas grandes en base a valor de libro en comparacion a valor de mercado, siendo el principal exponente de este caso la industria de la informacion.\n",
        "\n",
        "Algo que podemos observar es que igual que el tamaño en base a valor de libro hay outlayers en diversas industrian , incluso en aquellas que las que el tamaño de sus firmas suele estar en un rango bajo.\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XyVOave4HiiZ"
      },
      "source": [
        "#### For each industry (and for all industries), what can you say about profit margin of firms? \n",
        "\n",
        "**show**\n",
        "\n",
        "*   **a) descriptive statistics of profit margin and**\n",
        "*   **b) plot(s) to illustrate how profit margin changes across industries.**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 135,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gpVmDQ7NHlCO",
        "outputId": "2ce06636-a620-4b3e-d63c-731c3b76ea7b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['firm', 'revenue', 'cogs', 'sgae', 'otheropexp', 'extraincome',\n",
              "       'finexp', 'totalassets', 'totalliabilities', 'shortdebt', 'longdebt',\n",
              "       'stockholderequity', 'adjprice', 'originalprice', 'sharesoutstanding',\n",
              "       'book_value', 'market_value', 'operating_profit',\n",
              "       'operating_profit_margin', 'ebit', 'Sector NAICS\\nlevel 1', 'Name'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 135
        }
      ],
      "source": [
        "mergedDF.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 136,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "KugsOEyfMYfq",
        "outputId": "09f213e8-f776-4340-e7da-362d2955bcc5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      firm     revenue       cogs          sgae          ebit\n",
              "0        A   6527000.0  3004000.0  2.056000e+06  3.600000e+05\n",
              "1       AA  13386000.0  9653000.0  8.930000e+05  7.320000e+05\n",
              "2     AAIC     31855.0    15523.0  0.000000e+00  4.526000e+03\n",
              "3      AAL  40717000.0        0.0  4.160800e+07  1.017000e+06\n",
              "4     AAME    195299.0        0.0  1.915230e+05 -2.115000e+03\n",
              "...    ...         ...        ...           ...           ...\n",
              "3554  ZVIA    156702.0    93921.0  8.744600e+04 -1.474300e+04\n",
              "3555   ZVO    230001.0   149303.0  1.118000e+05 -8.410000e+02\n",
              "3556   ZWS    340300.0   195100.0  1.196000e+05  5.350000e+04\n",
              "3557    ZY     14546.0    48949.0  2.327660e+05 -1.061960e+05\n",
              "3558  ZYNE         0.0        0.0  3.711977e+04 -9.168770e+03\n",
              "\n",
              "[3559 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7ed1313d-6d4b-4d88-a398-0d9804cb27fe\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>ebit</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A</td>\n",
              "      <td>6527000.0</td>\n",
              "      <td>3004000.0</td>\n",
              "      <td>2.056000e+06</td>\n",
              "      <td>3.600000e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AA</td>\n",
              "      <td>13386000.0</td>\n",
              "      <td>9653000.0</td>\n",
              "      <td>8.930000e+05</td>\n",
              "      <td>7.320000e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>31855.0</td>\n",
              "      <td>15523.0</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>4.526000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAL</td>\n",
              "      <td>40717000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.160800e+07</td>\n",
              "      <td>1.017000e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAME</td>\n",
              "      <td>195299.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.915230e+05</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3554</th>\n",
              "      <td>ZVIA</td>\n",
              "      <td>156702.0</td>\n",
              "      <td>93921.0</td>\n",
              "      <td>8.744600e+04</td>\n",
              "      <td>-1.474300e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3555</th>\n",
              "      <td>ZVO</td>\n",
              "      <td>230001.0</td>\n",
              "      <td>149303.0</td>\n",
              "      <td>1.118000e+05</td>\n",
              "      <td>-8.410000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3556</th>\n",
              "      <td>ZWS</td>\n",
              "      <td>340300.0</td>\n",
              "      <td>195100.0</td>\n",
              "      <td>1.196000e+05</td>\n",
              "      <td>5.350000e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3557</th>\n",
              "      <td>ZY</td>\n",
              "      <td>14546.0</td>\n",
              "      <td>48949.0</td>\n",
              "      <td>2.327660e+05</td>\n",
              "      <td>-1.061960e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3558</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.711977e+04</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 5 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ed1313d-6d4b-4d88-a398-0d9804cb27fe')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7ed1313d-6d4b-4d88-a398-0d9804cb27fe button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7ed1313d-6d4b-4d88-a398-0d9804cb27fe');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ],
      "source": [
        "MesuresDF = mergedDF[['firm', 'revenue', 'cogs', 'sgae', 'ebit']]\n",
        "MesuresDF"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 137,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "y11PYpvXNaj-",
        "outputId": "8c495f9e-dd38-4e88-d830-1c35871304f8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      firm  operating_profit  operating_profit_margin\n",
              "0        A      3.600000e+05                 0.224020\n",
              "1       AA      6.570000e+05                 0.200878\n",
              "2     AAIC      4.526000e+03                 0.415229\n",
              "3      AAL      1.017000e+06                 0.075771\n",
              "4     AAME     -2.115000e+03                -0.047348\n",
              "...    ...               ...                      ...\n",
              "3554  ZVIA     -6.700000e+03                -0.323723\n",
              "3555   ZVO     -9.723000e+03                -0.016368\n",
              "3556   ZWS      5.380000e+04                 0.188248\n",
              "3557    ZY     -6.573600e+04               -40.317388\n",
              "3558  ZYNE     -9.168770e+03                     -inf\n",
              "\n",
              "[3559 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b4d56090-fffa-431c-b2f2-02da13b47207\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>operating_profit</th>\n",
              "      <th>operating_profit_margin</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>0.224020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AA</td>\n",
              "      <td>6.570000e+05</td>\n",
              "      <td>0.200878</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>0.415229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AAL</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>0.075771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AAME</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>-0.047348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3554</th>\n",
              "      <td>ZVIA</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "      <td>-0.323723</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3555</th>\n",
              "      <td>ZVO</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "      <td>-0.016368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3556</th>\n",
              "      <td>ZWS</td>\n",
              "      <td>5.380000e+04</td>\n",
              "      <td>0.188248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3557</th>\n",
              "      <td>ZY</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "      <td>-40.317388</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3558</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>-inf</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4d56090-fffa-431c-b2f2-02da13b47207')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b4d56090-fffa-431c-b2f2-02da13b47207 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b4d56090-fffa-431c-b2f2-02da13b47207');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ],
      "source": [
        "ProfitdDF = mergedDF[['firm', 'operating_profit', 'operating_profit_margin']]\n",
        "ProfitdDF"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 138,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "7dUMXNO5MSB-",
        "outputId": "3fc99ced-600d-448d-b0fc-c880880aaa9d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count          mean  std           min           25%           50%  \\\n",
              "firm                                                                       \n",
              "A       1.0  3.600000e+05  NaN  3.600000e+05  3.600000e+05  3.600000e+05   \n",
              "AA      1.0  6.570000e+05  NaN  6.570000e+05  6.570000e+05  6.570000e+05   \n",
              "AAIC    1.0  4.526000e+03  NaN  4.526000e+03  4.526000e+03  4.526000e+03   \n",
              "AAL     1.0  1.017000e+06  NaN  1.017000e+06  1.017000e+06  1.017000e+06   \n",
              "AAME    1.0 -2.115000e+03  NaN -2.115000e+03 -2.115000e+03 -2.115000e+03   \n",
              "...     ...           ...  ...           ...           ...           ...   \n",
              "ZVIA    1.0 -6.700000e+03  NaN -6.700000e+03 -6.700000e+03 -6.700000e+03   \n",
              "ZVO     1.0 -9.723000e+03  NaN -9.723000e+03 -9.723000e+03 -9.723000e+03   \n",
              "ZWS     1.0  5.380000e+04  NaN  5.380000e+04  5.380000e+04  5.380000e+04   \n",
              "ZY      1.0 -6.573600e+04  NaN -6.573600e+04 -6.573600e+04 -6.573600e+04   \n",
              "ZYNE    1.0 -9.168770e+03  NaN -9.168770e+03 -9.168770e+03 -9.168770e+03   \n",
              "\n",
              "               75%           max  \n",
              "firm                              \n",
              "A     3.600000e+05  3.600000e+05  \n",
              "AA    6.570000e+05  6.570000e+05  \n",
              "AAIC  4.526000e+03  4.526000e+03  \n",
              "AAL   1.017000e+06  1.017000e+06  \n",
              "AAME -2.115000e+03 -2.115000e+03  \n",
              "...            ...           ...  \n",
              "ZVIA -6.700000e+03 -6.700000e+03  \n",
              "ZVO  -9.723000e+03 -9.723000e+03  \n",
              "ZWS   5.380000e+04  5.380000e+04  \n",
              "ZY   -6.573600e+04 -6.573600e+04  \n",
              "ZYNE -9.168770e+03 -9.168770e+03  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-937f8070-1297-4baa-8cfe-eb665485e781\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>1.0</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>3.600000e+05</td>\n",
              "      <td>3.600000e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>6.570000e+05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.570000e+05</td>\n",
              "      <td>6.570000e+05</td>\n",
              "      <td>6.570000e+05</td>\n",
              "      <td>6.570000e+05</td>\n",
              "      <td>6.570000e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>1.0</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>4.526000e+03</td>\n",
              "      <td>4.526000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>1.0</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>1.017000e+06</td>\n",
              "      <td>1.017000e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "      <td>-2.115000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "      <td>-6.700000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "      <td>-9.723000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>1.0</td>\n",
              "      <td>5.380000e+04</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.380000e+04</td>\n",
              "      <td>5.380000e+04</td>\n",
              "      <td>5.380000e+04</td>\n",
              "      <td>5.380000e+04</td>\n",
              "      <td>5.380000e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "      <td>-6.573600e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "      <td>-9.168770e+03</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-937f8070-1297-4baa-8cfe-eb665485e781')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-937f8070-1297-4baa-8cfe-eb665485e781 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-937f8070-1297-4baa-8cfe-eb665485e781');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 138
        }
      ],
      "source": [
        "mergedDF.groupby('firm')['operating_profit'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 139,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "RNsaByPpPybu",
        "outputId": "fa8ab951-6975-4b41-a29f-c112013ce998"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                     count           mean  \\\n",
              "Sector NAICS\\nlevel 1                                                       \n",
              "-                                                      1.0  126710.000000   \n",
              "Accommodation and Food Services                       69.0  235626.853177   \n",
              "Administrative and Support and Waste Management...   132.0  163048.920693   \n",
              "Agriculture, Forestry, Fishing and Hunting            16.0  218999.116694   \n",
              "Arts, Entertainment, and Recreation                   21.0  206017.041144   \n",
              "Construction                                          45.0  223408.468889   \n",
              "Educational Services                                  14.0   14396.571429   \n",
              "Finance and Insurance                                697.0  262307.167099   \n",
              "Health Care and Social Assistance                     64.0   72550.071519   \n",
              "Information                                          260.0  224617.194588   \n",
              "Manufacturing                                       1533.0  194441.805274   \n",
              "Mining, Quarrying, and Oil and Gas Extraction        103.0  490288.591553   \n",
              "Other Services (except Public Administration)         16.0   50476.565720   \n",
              "Professional, Scientific, and Technical Services     144.0  229741.265535   \n",
              "Real Estate and Rental and Leasing                    67.0  127089.657390   \n",
              "Retail Trade                                         152.0  288420.386519   \n",
              "Transportation and Warehousing                        69.0  310347.416535   \n",
              "Utilities                                             77.0  277931.599629   \n",
              "Wholesale Trade                                       79.0  181704.561509   \n",
              "\n",
              "                                                             std        min  \\\n",
              "Sector NAICS\\nlevel 1                                                         \n",
              "-                                                            NaN   126710.0   \n",
              "Accommodation and Food Services                     6.324575e+05  -142000.0   \n",
              "Administrative and Support and Waste Management...  4.942315e+05  -713000.0   \n",
              "Agriculture, Forestry, Fishing and Hunting          4.485638e+05   -18135.0   \n",
              "Arts, Entertainment, and Recreation                 5.320416e+05  -368756.0   \n",
              "Construction                                        4.700429e+05   -90554.0   \n",
              "Educational Services                                5.877502e+04  -141260.0   \n",
              "Finance and Insurance                               1.119289e+06 -1315000.0   \n",
              "Health Care and Social Assistance                   3.089014e+05  -204471.0   \n",
              "Information                                         1.512673e+06 -2602000.0   \n",
              "Manufacturing                                       1.235768e+06 -1708000.0   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       9.606313e+05   -18976.0   \n",
              "Other Services (except Public Administration)       9.272475e+04   -35685.0   \n",
              "Professional, Scientific, and Technical Services    1.761500e+06  -400940.0   \n",
              "Real Estate and Rental and Leasing                  2.912070e+05  -153627.0   \n",
              "Retail Trade                                        8.588959e+05  -447000.0   \n",
              "Transportation and Warehousing                      6.802866e+05 -1472000.0   \n",
              "Utilities                                           4.124808e+05 -1248000.0   \n",
              "Wholesale Trade                                     2.803036e+05   -33164.0   \n",
              "\n",
              "                                                              25%  \\\n",
              "Sector NAICS\\nlevel 1                                               \n",
              "-                                                   126710.000000   \n",
              "Accommodation and Food Services                       5421.000000   \n",
              "Administrative and Support and Waste Management...      95.500000   \n",
              "Agriculture, Forestry, Fishing and Hunting           -1480.750000   \n",
              "Arts, Entertainment, and Recreation                   4515.000000   \n",
              "Construction                                         18727.000000   \n",
              "Educational Services                                   371.000000   \n",
              "Finance and Insurance                                11680.000000   \n",
              "Health Care and Social Assistance                   -10986.250000   \n",
              "Information                                         -23712.000000   \n",
              "Manufacturing                                       -13717.000000   \n",
              "Mining, Quarrying, and Oil and Gas Extraction         1810.000000   \n",
              "Other Services (except Public Administration)          371.038640   \n",
              "Professional, Scientific, and Technical Services     -7359.000000   \n",
              "Real Estate and Rental and Leasing                     -21.824454   \n",
              "Retail Trade                                          2598.747475   \n",
              "Transportation and Warehousing                       26130.000000   \n",
              "Utilities                                            28743.000000   \n",
              "Wholesale Trade                                       5334.500000   \n",
              "\n",
              "                                                              50%        75%  \\\n",
              "Sector NAICS\\nlevel 1                                                          \n",
              "-                                                   126710.000000  126710.00   \n",
              "Accommodation and Food Services                      38904.000000  157349.00   \n",
              "Administrative and Support and Waste Management...   28169.000000  142138.50   \n",
              "Agriculture, Forestry, Fishing and Hunting           19268.000000  160333.75   \n",
              "Arts, Entertainment, and Recreation                  54549.000000  178094.00   \n",
              "Construction                                         70000.000000  207221.00   \n",
              "Educational Services                                 16561.500000   38039.50   \n",
              "Finance and Insurance                                41290.000000  137300.00   \n",
              "Health Care and Social Assistance                      300.000000   62180.75   \n",
              "Information                                          -1205.159495   32341.00   \n",
              "Manufacturing                                         -903.000000   52889.00   \n",
              "Mining, Quarrying, and Oil and Gas Extraction        54152.947000  553897.50   \n",
              "Other Services (except Public Administration)        17266.500000   37326.75   \n",
              "Professional, Scientific, and Technical Services      2821.500000   32371.75   \n",
              "Real Estate and Rental and Leasing                   22800.000000   54432.00   \n",
              "Retail Trade                                         35889.500000  219738.25   \n",
              "Transportation and Warehousing                      105055.000000  374183.00   \n",
              "Utilities                                           137736.000000  407000.00   \n",
              "Wholesale Trade                                      52800.000000  250900.00   \n",
              "\n",
              "                                                           max  \n",
              "Sector NAICS\\nlevel 1                                           \n",
              "-                                                     126710.0  \n",
              "Accommodation and Food Services                      4004100.0  \n",
              "Administrative and Support and Waste Management...   4148000.0  \n",
              "Agriculture, Forestry, Fishing and Hunting           1616000.0  \n",
              "Arts, Entertainment, and Recreation                  2390000.0  \n",
              "Construction                                         2168200.0  \n",
              "Educational Services                                  126641.0  \n",
              "Finance and Insurance                               15128000.0  \n",
              "Health Care and Social Assistance                    2264000.0  \n",
              "Information                                         20534000.0  \n",
              "Manufacturing                                       27985000.0  \n",
              "Mining, Quarrying, and Oil and Gas Extraction        6559000.0  \n",
              "Other Services (except Public Administration)         311604.0  \n",
              "Professional, Scientific, and Technical Services    19453000.0  \n",
              "Real Estate and Rental and Leasing                   1578283.0  \n",
              "Retail Trade                                         5929000.0  \n",
              "Transportation and Warehousing                       3535000.0  \n",
              "Utilities                                            1477000.0  \n",
              "Wholesale Trade                                      1489700.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b8ba1f70-def4-40e0-b700-feca132cd07a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>-</th>\n",
              "      <td>1.0</td>\n",
              "      <td>126710.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>126710.0</td>\n",
              "      <td>126710.000000</td>\n",
              "      <td>126710.000000</td>\n",
              "      <td>126710.00</td>\n",
              "      <td>126710.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Accommodation and Food Services</th>\n",
              "      <td>69.0</td>\n",
              "      <td>235626.853177</td>\n",
              "      <td>6.324575e+05</td>\n",
              "      <td>-142000.0</td>\n",
              "      <td>5421.000000</td>\n",
              "      <td>38904.000000</td>\n",
              "      <td>157349.00</td>\n",
              "      <td>4004100.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Administrative and Support and Waste Management and Remediation Services</th>\n",
              "      <td>132.0</td>\n",
              "      <td>163048.920693</td>\n",
              "      <td>4.942315e+05</td>\n",
              "      <td>-713000.0</td>\n",
              "      <td>95.500000</td>\n",
              "      <td>28169.000000</td>\n",
              "      <td>142138.50</td>\n",
              "      <td>4148000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agriculture, Forestry, Fishing and Hunting</th>\n",
              "      <td>16.0</td>\n",
              "      <td>218999.116694</td>\n",
              "      <td>4.485638e+05</td>\n",
              "      <td>-18135.0</td>\n",
              "      <td>-1480.750000</td>\n",
              "      <td>19268.000000</td>\n",
              "      <td>160333.75</td>\n",
              "      <td>1616000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Arts, Entertainment, and Recreation</th>\n",
              "      <td>21.0</td>\n",
              "      <td>206017.041144</td>\n",
              "      <td>5.320416e+05</td>\n",
              "      <td>-368756.0</td>\n",
              "      <td>4515.000000</td>\n",
              "      <td>54549.000000</td>\n",
              "      <td>178094.00</td>\n",
              "      <td>2390000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Construction</th>\n",
              "      <td>45.0</td>\n",
              "      <td>223408.468889</td>\n",
              "      <td>4.700429e+05</td>\n",
              "      <td>-90554.0</td>\n",
              "      <td>18727.000000</td>\n",
              "      <td>70000.000000</td>\n",
              "      <td>207221.00</td>\n",
              "      <td>2168200.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Educational Services</th>\n",
              "      <td>14.0</td>\n",
              "      <td>14396.571429</td>\n",
              "      <td>5.877502e+04</td>\n",
              "      <td>-141260.0</td>\n",
              "      <td>371.000000</td>\n",
              "      <td>16561.500000</td>\n",
              "      <td>38039.50</td>\n",
              "      <td>126641.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>697.0</td>\n",
              "      <td>262307.167099</td>\n",
              "      <td>1.119289e+06</td>\n",
              "      <td>-1315000.0</td>\n",
              "      <td>11680.000000</td>\n",
              "      <td>41290.000000</td>\n",
              "      <td>137300.00</td>\n",
              "      <td>15128000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Health Care and Social Assistance</th>\n",
              "      <td>64.0</td>\n",
              "      <td>72550.071519</td>\n",
              "      <td>3.089014e+05</td>\n",
              "      <td>-204471.0</td>\n",
              "      <td>-10986.250000</td>\n",
              "      <td>300.000000</td>\n",
              "      <td>62180.75</td>\n",
              "      <td>2264000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Information</th>\n",
              "      <td>260.0</td>\n",
              "      <td>224617.194588</td>\n",
              "      <td>1.512673e+06</td>\n",
              "      <td>-2602000.0</td>\n",
              "      <td>-23712.000000</td>\n",
              "      <td>-1205.159495</td>\n",
              "      <td>32341.00</td>\n",
              "      <td>20534000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Manufacturing</th>\n",
              "      <td>1533.0</td>\n",
              "      <td>194441.805274</td>\n",
              "      <td>1.235768e+06</td>\n",
              "      <td>-1708000.0</td>\n",
              "      <td>-13717.000000</td>\n",
              "      <td>-903.000000</td>\n",
              "      <td>52889.00</td>\n",
              "      <td>27985000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mining, Quarrying, and Oil and Gas Extraction</th>\n",
              "      <td>103.0</td>\n",
              "      <td>490288.591553</td>\n",
              "      <td>9.606313e+05</td>\n",
              "      <td>-18976.0</td>\n",
              "      <td>1810.000000</td>\n",
              "      <td>54152.947000</td>\n",
              "      <td>553897.50</td>\n",
              "      <td>6559000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Other Services (except Public Administration)</th>\n",
              "      <td>16.0</td>\n",
              "      <td>50476.565720</td>\n",
              "      <td>9.272475e+04</td>\n",
              "      <td>-35685.0</td>\n",
              "      <td>371.038640</td>\n",
              "      <td>17266.500000</td>\n",
              "      <td>37326.75</td>\n",
              "      <td>311604.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Professional, Scientific, and Technical Services</th>\n",
              "      <td>144.0</td>\n",
              "      <td>229741.265535</td>\n",
              "      <td>1.761500e+06</td>\n",
              "      <td>-400940.0</td>\n",
              "      <td>-7359.000000</td>\n",
              "      <td>2821.500000</td>\n",
              "      <td>32371.75</td>\n",
              "      <td>19453000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Real Estate and Rental and Leasing</th>\n",
              "      <td>67.0</td>\n",
              "      <td>127089.657390</td>\n",
              "      <td>2.912070e+05</td>\n",
              "      <td>-153627.0</td>\n",
              "      <td>-21.824454</td>\n",
              "      <td>22800.000000</td>\n",
              "      <td>54432.00</td>\n",
              "      <td>1578283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Retail Trade</th>\n",
              "      <td>152.0</td>\n",
              "      <td>288420.386519</td>\n",
              "      <td>8.588959e+05</td>\n",
              "      <td>-447000.0</td>\n",
              "      <td>2598.747475</td>\n",
              "      <td>35889.500000</td>\n",
              "      <td>219738.25</td>\n",
              "      <td>5929000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Transportation and Warehousing</th>\n",
              "      <td>69.0</td>\n",
              "      <td>310347.416535</td>\n",
              "      <td>6.802866e+05</td>\n",
              "      <td>-1472000.0</td>\n",
              "      <td>26130.000000</td>\n",
              "      <td>105055.000000</td>\n",
              "      <td>374183.00</td>\n",
              "      <td>3535000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Utilities</th>\n",
              "      <td>77.0</td>\n",
              "      <td>277931.599629</td>\n",
              "      <td>4.124808e+05</td>\n",
              "      <td>-1248000.0</td>\n",
              "      <td>28743.000000</td>\n",
              "      <td>137736.000000</td>\n",
              "      <td>407000.00</td>\n",
              "      <td>1477000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Wholesale Trade</th>\n",
              "      <td>79.0</td>\n",
              "      <td>181704.561509</td>\n",
              "      <td>2.803036e+05</td>\n",
              "      <td>-33164.0</td>\n",
              "      <td>5334.500000</td>\n",
              "      <td>52800.000000</td>\n",
              "      <td>250900.00</td>\n",
              "      <td>1489700.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8ba1f70-def4-40e0-b700-feca132cd07a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b8ba1f70-def4-40e0-b700-feca132cd07a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b8ba1f70-def4-40e0-b700-feca132cd07a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ],
      "source": [
        "mergedDF.groupby('Sector NAICS\\nlevel 1')['operating_profit'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 140,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 588
        },
        "id": "BRDAifrXPRxn",
        "outputId": "3c4ed27a-5583-4034-882c-551c1313b233"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py:4009: RuntimeWarning:\n",
            "\n",
            "invalid value encountered in subtract\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count       mean  std        min        25%        50%        75%  \\\n",
              "firm                                                                      \n",
              "A       1.0   0.224020  NaN   0.224020   0.224020   0.224020   0.224020   \n",
              "AA      1.0   0.200878  NaN   0.200878   0.200878   0.200878   0.200878   \n",
              "AAIC    1.0   0.415229  NaN   0.415229   0.415229   0.415229   0.415229   \n",
              "AAL     1.0   0.075771  NaN   0.075771   0.075771   0.075771   0.075771   \n",
              "AAME    1.0  -0.047348  NaN  -0.047348  -0.047348  -0.047348  -0.047348   \n",
              "...     ...        ...  ...        ...        ...        ...        ...   \n",
              "ZVIA    1.0  -0.323723  NaN  -0.323723  -0.323723  -0.323723  -0.323723   \n",
              "ZVO     1.0  -0.016368  NaN  -0.016368  -0.016368  -0.016368  -0.016368   \n",
              "ZWS     1.0   0.188248  NaN   0.188248   0.188248   0.188248   0.188248   \n",
              "ZY      1.0 -40.317388  NaN -40.317388 -40.317388 -40.317388 -40.317388   \n",
              "ZYNE    1.0       -inf  NaN       -inf        NaN        NaN        NaN   \n",
              "\n",
              "            max  \n",
              "firm             \n",
              "A      0.224020  \n",
              "AA     0.200878  \n",
              "AAIC   0.415229  \n",
              "AAL    0.075771  \n",
              "AAME  -0.047348  \n",
              "...         ...  \n",
              "ZVIA  -0.323723  \n",
              "ZVO   -0.016368  \n",
              "ZWS    0.188248  \n",
              "ZY   -40.317388  \n",
              "ZYNE       -inf  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3143af28-7293-44c7-8ab4-3b7e97c25379\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.224020</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.224020</td>\n",
              "      <td>0.224020</td>\n",
              "      <td>0.224020</td>\n",
              "      <td>0.224020</td>\n",
              "      <td>0.224020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.200878</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.200878</td>\n",
              "      <td>0.200878</td>\n",
              "      <td>0.200878</td>\n",
              "      <td>0.200878</td>\n",
              "      <td>0.200878</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.415229</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.415229</td>\n",
              "      <td>0.415229</td>\n",
              "      <td>0.415229</td>\n",
              "      <td>0.415229</td>\n",
              "      <td>0.415229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.075771</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.075771</td>\n",
              "      <td>0.075771</td>\n",
              "      <td>0.075771</td>\n",
              "      <td>0.075771</td>\n",
              "      <td>0.075771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.047348</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.047348</td>\n",
              "      <td>-0.047348</td>\n",
              "      <td>-0.047348</td>\n",
              "      <td>-0.047348</td>\n",
              "      <td>-0.047348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.323723</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.323723</td>\n",
              "      <td>-0.323723</td>\n",
              "      <td>-0.323723</td>\n",
              "      <td>-0.323723</td>\n",
              "      <td>-0.323723</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.016368</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.016368</td>\n",
              "      <td>-0.016368</td>\n",
              "      <td>-0.016368</td>\n",
              "      <td>-0.016368</td>\n",
              "      <td>-0.016368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.188248</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.188248</td>\n",
              "      <td>0.188248</td>\n",
              "      <td>0.188248</td>\n",
              "      <td>0.188248</td>\n",
              "      <td>0.188248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-40.317388</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-40.317388</td>\n",
              "      <td>-40.317388</td>\n",
              "      <td>-40.317388</td>\n",
              "      <td>-40.317388</td>\n",
              "      <td>-40.317388</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>1.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3143af28-7293-44c7-8ab4-3b7e97c25379')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3143af28-7293-44c7-8ab4-3b7e97c25379 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3143af28-7293-44c7-8ab4-3b7e97c25379');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ],
      "source": [
        "mergedDF.groupby('firm')['operating_profit_margin'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 141,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "-bRokklSP_7H",
        "outputId": "204b22de-8ce7-4bc4-eaa0-121fc7772f90"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                     count      mean  \\\n",
              "Sector NAICS\\nlevel 1                                                  \n",
              "-                                                      1.0  0.463653   \n",
              "Accommodation and Food Services                       69.0  0.100534   \n",
              "Administrative and Support and Waste Management...   132.0 -2.271517   \n",
              "Agriculture, Forestry, Fishing and Hunting            16.0 -0.032423   \n",
              "Arts, Entertainment, and Recreation                   21.0 -0.002046   \n",
              "Construction                                          45.0  0.099567   \n",
              "Educational Services                                  14.0 -0.001653   \n",
              "Finance and Insurance                                696.0      -inf   \n",
              "Health Care and Social Assistance                     64.0      -inf   \n",
              "Information                                          260.0      -inf   \n",
              "Manufacturing                                       1533.0       NaN   \n",
              "Mining, Quarrying, and Oil and Gas Extraction        103.0      -inf   \n",
              "Other Services (except Public Administration)         16.0  0.013570   \n",
              "Professional, Scientific, and Technical Services     144.0      -inf   \n",
              "Real Estate and Rental and Leasing                    67.0      -inf   \n",
              "Retail Trade                                         152.0 -0.004455   \n",
              "Transportation and Warehousing                        69.0 -0.028514   \n",
              "Utilities                                             77.0      -inf   \n",
              "Wholesale Trade                                       79.0  0.016950   \n",
              "\n",
              "                                                          std         min  \\\n",
              "Sector NAICS\\nlevel 1                                                       \n",
              "-                                                         NaN    0.463653   \n",
              "Accommodation and Food Services                      0.177755   -0.593442   \n",
              "Administrative and Support and Waste Management...  24.967468 -286.495298   \n",
              "Agriculture, Forestry, Fishing and Hunting           0.289292   -0.980560   \n",
              "Arts, Entertainment, and Recreation                  0.569222   -2.043234   \n",
              "Construction                                         0.154027   -0.543047   \n",
              "Educational Services                                 0.296101   -0.944201   \n",
              "Finance and Insurance                                     NaN        -inf   \n",
              "Health Care and Social Assistance                         NaN        -inf   \n",
              "Information                                               NaN        -inf   \n",
              "Manufacturing                                             NaN        -inf   \n",
              "Mining, Quarrying, and Oil and Gas Extraction             NaN        -inf   \n",
              "Other Services (except Public Administration)        0.233927   -0.571229   \n",
              "Professional, Scientific, and Technical Services          NaN        -inf   \n",
              "Real Estate and Rental and Leasing                        NaN        -inf   \n",
              "Retail Trade                                         0.346886   -2.852978   \n",
              "Transportation and Warehousing                       1.050879   -8.023609   \n",
              "Utilities                                                 NaN        -inf   \n",
              "Wholesale Trade                                      0.305651   -2.135281   \n",
              "\n",
              "                                                         25%       50%  \\\n",
              "Sector NAICS\\nlevel 1                                                    \n",
              "-                                                   0.463653  0.463653   \n",
              "Accommodation and Food Services                     0.022495  0.101864   \n",
              "Administrative and Support and Waste Management... -0.023688  0.065275   \n",
              "Agriculture, Forestry, Fishing and Hunting         -0.067080  0.041809   \n",
              "Arts, Entertainment, and Recreation                 0.045115  0.135304   \n",
              "Construction                                        0.037063  0.091377   \n",
              "Educational Services                                0.007309  0.039924   \n",
              "Finance and Insurance                               0.187876  0.616043   \n",
              "Health Care and Social Assistance                  -0.363581 -0.038219   \n",
              "Information                                        -0.316853 -0.048025   \n",
              "Manufacturing                                      -7.484838 -0.045022   \n",
              "Mining, Quarrying, and Oil and Gas Extraction       0.026014  0.278027   \n",
              "Other Services (except Public Administration)      -0.025838  0.051570   \n",
              "Professional, Scientific, and Technical Services   -0.251724  0.006468   \n",
              "Real Estate and Rental and Leasing                 -0.022942  0.139113   \n",
              "Retail Trade                                       -0.007818  0.043511   \n",
              "Transportation and Warehousing                      0.024940  0.098209   \n",
              "Utilities                                           0.086948  0.162044   \n",
              "Wholesale Trade                                     0.015760  0.064581   \n",
              "\n",
              "                                                         75%       max  \n",
              "Sector NAICS\\nlevel 1                                                   \n",
              "-                                                   0.463653  0.463653  \n",
              "Accommodation and Food Services                     0.185184  0.746437  \n",
              "Administrative and Support and Waste Management...  0.175726  0.975751  \n",
              "Agriculture, Forestry, Fishing and Hunting          0.105006  0.245713  \n",
              "Arts, Entertainment, and Recreation                 0.276587  0.606817  \n",
              "Construction                                        0.180423  0.539738  \n",
              "Educational Services                                0.117768  0.328612  \n",
              "Finance and Insurance                               0.926012  7.453061  \n",
              "Health Care and Social Assistance                   0.088428  0.268134  \n",
              "Information                                         0.102826  0.425249  \n",
              "Manufacturing                                       0.117050       inf  \n",
              "Mining, Quarrying, and Oil and Gas Extraction       0.515936  0.714595  \n",
              "Other Services (except Public Administration)       0.197280  0.296745  \n",
              "Professional, Scientific, and Technical Services    0.101647  0.670645  \n",
              "Real Estate and Rental and Leasing                  0.302212  1.791544  \n",
              "Retail Trade                                        0.095707  1.027899  \n",
              "Transportation and Warehousing                      0.195302  0.560909  \n",
              "Utilities                                           0.210136  3.820652  \n",
              "Wholesale Trade                                     0.109100  0.478964  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d127b815-c743-4eec-8510-e4fcc1d81316\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>-</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.463653</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.463653</td>\n",
              "      <td>0.463653</td>\n",
              "      <td>0.463653</td>\n",
              "      <td>0.463653</td>\n",
              "      <td>0.463653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Accommodation and Food Services</th>\n",
              "      <td>69.0</td>\n",
              "      <td>0.100534</td>\n",
              "      <td>0.177755</td>\n",
              "      <td>-0.593442</td>\n",
              "      <td>0.022495</td>\n",
              "      <td>0.101864</td>\n",
              "      <td>0.185184</td>\n",
              "      <td>0.746437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Administrative and Support and Waste Management and Remediation Services</th>\n",
              "      <td>132.0</td>\n",
              "      <td>-2.271517</td>\n",
              "      <td>24.967468</td>\n",
              "      <td>-286.495298</td>\n",
              "      <td>-0.023688</td>\n",
              "      <td>0.065275</td>\n",
              "      <td>0.175726</td>\n",
              "      <td>0.975751</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agriculture, Forestry, Fishing and Hunting</th>\n",
              "      <td>16.0</td>\n",
              "      <td>-0.032423</td>\n",
              "      <td>0.289292</td>\n",
              "      <td>-0.980560</td>\n",
              "      <td>-0.067080</td>\n",
              "      <td>0.041809</td>\n",
              "      <td>0.105006</td>\n",
              "      <td>0.245713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Arts, Entertainment, and Recreation</th>\n",
              "      <td>21.0</td>\n",
              "      <td>-0.002046</td>\n",
              "      <td>0.569222</td>\n",
              "      <td>-2.043234</td>\n",
              "      <td>0.045115</td>\n",
              "      <td>0.135304</td>\n",
              "      <td>0.276587</td>\n",
              "      <td>0.606817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Construction</th>\n",
              "      <td>45.0</td>\n",
              "      <td>0.099567</td>\n",
              "      <td>0.154027</td>\n",
              "      <td>-0.543047</td>\n",
              "      <td>0.037063</td>\n",
              "      <td>0.091377</td>\n",
              "      <td>0.180423</td>\n",
              "      <td>0.539738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Educational Services</th>\n",
              "      <td>14.0</td>\n",
              "      <td>-0.001653</td>\n",
              "      <td>0.296101</td>\n",
              "      <td>-0.944201</td>\n",
              "      <td>0.007309</td>\n",
              "      <td>0.039924</td>\n",
              "      <td>0.117768</td>\n",
              "      <td>0.328612</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>696.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>0.187876</td>\n",
              "      <td>0.616043</td>\n",
              "      <td>0.926012</td>\n",
              "      <td>7.453061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Health Care and Social Assistance</th>\n",
              "      <td>64.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>-0.363581</td>\n",
              "      <td>-0.038219</td>\n",
              "      <td>0.088428</td>\n",
              "      <td>0.268134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Information</th>\n",
              "      <td>260.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>-0.316853</td>\n",
              "      <td>-0.048025</td>\n",
              "      <td>0.102826</td>\n",
              "      <td>0.425249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Manufacturing</th>\n",
              "      <td>1533.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>-7.484838</td>\n",
              "      <td>-0.045022</td>\n",
              "      <td>0.117050</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mining, Quarrying, and Oil and Gas Extraction</th>\n",
              "      <td>103.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>0.026014</td>\n",
              "      <td>0.278027</td>\n",
              "      <td>0.515936</td>\n",
              "      <td>0.714595</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Other Services (except Public Administration)</th>\n",
              "      <td>16.0</td>\n",
              "      <td>0.013570</td>\n",
              "      <td>0.233927</td>\n",
              "      <td>-0.571229</td>\n",
              "      <td>-0.025838</td>\n",
              "      <td>0.051570</td>\n",
              "      <td>0.197280</td>\n",
              "      <td>0.296745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Professional, Scientific, and Technical Services</th>\n",
              "      <td>144.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>-0.251724</td>\n",
              "      <td>0.006468</td>\n",
              "      <td>0.101647</td>\n",
              "      <td>0.670645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Real Estate and Rental and Leasing</th>\n",
              "      <td>67.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>-0.022942</td>\n",
              "      <td>0.139113</td>\n",
              "      <td>0.302212</td>\n",
              "      <td>1.791544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Retail Trade</th>\n",
              "      <td>152.0</td>\n",
              "      <td>-0.004455</td>\n",
              "      <td>0.346886</td>\n",
              "      <td>-2.852978</td>\n",
              "      <td>-0.007818</td>\n",
              "      <td>0.043511</td>\n",
              "      <td>0.095707</td>\n",
              "      <td>1.027899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Transportation and Warehousing</th>\n",
              "      <td>69.0</td>\n",
              "      <td>-0.028514</td>\n",
              "      <td>1.050879</td>\n",
              "      <td>-8.023609</td>\n",
              "      <td>0.024940</td>\n",
              "      <td>0.098209</td>\n",
              "      <td>0.195302</td>\n",
              "      <td>0.560909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Utilities</th>\n",
              "      <td>77.0</td>\n",
              "      <td>-inf</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-inf</td>\n",
              "      <td>0.086948</td>\n",
              "      <td>0.162044</td>\n",
              "      <td>0.210136</td>\n",
              "      <td>3.820652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Wholesale Trade</th>\n",
              "      <td>79.0</td>\n",
              "      <td>0.016950</td>\n",
              "      <td>0.305651</td>\n",
              "      <td>-2.135281</td>\n",
              "      <td>0.015760</td>\n",
              "      <td>0.064581</td>\n",
              "      <td>0.109100</td>\n",
              "      <td>0.478964</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d127b815-c743-4eec-8510-e4fcc1d81316')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d127b815-c743-4eec-8510-e4fcc1d81316 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d127b815-c743-4eec-8510-e4fcc1d81316');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 141
        }
      ],
      "source": [
        "mergedDF.groupby('Sector NAICS\\nlevel 1')['operating_profit_margin'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 142,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9Kw4WYHhRCVd",
        "outputId": "3359ca2d-6133-4c90-c67f-b4bf79555d34"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: plotly.express in /usr/local/lib/python3.7/dist-packages (0.4.1)\n",
            "Requirement already satisfied: scipy>=0.18 in /usr/local/lib/python3.7/dist-packages (from plotly.express) (1.7.1)\n",
            "Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.7/dist-packages (from plotly.express) (1.21.6)\n",
            "Requirement already satisfied: patsy>=0.5 in /usr/local/lib/python3.7/dist-packages (from plotly.express) (0.5.2)\n",
            "Requirement already satisfied: plotly>=4.1.0 in /usr/local/lib/python3.7/dist-packages (from plotly.express) (5.5.0)\n",
            "Requirement already satisfied: statsmodels>=0.9.0 in /usr/local/lib/python3.7/dist-packages (from plotly.express) (0.12.2)\n",
            "Requirement already satisfied: pandas>=0.20.0 in /usr/local/lib/python3.7/dist-packages (from plotly.express) (1.3.5)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.20.0->plotly.express) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.20.0->plotly.express) (2022.2.1)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from patsy>=0.5->plotly.express) (1.15.0)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.7/dist-packages (from plotly>=4.1.0->plotly.express) (8.0.1)\n"
          ]
        }
      ],
      "source": [
        "#mergedDF.groupby('Sector NAICS\\nlevel 1')['operating_profit_margin']\n",
        "\n",
        "!pip install plotly.express\n",
        "import plotly.express as px"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 143,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "nVMUm-ksSs64",
        "outputId": "ea82c2ab-97e3-4c24-eb53-7661070eac35"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"1a470c19-9168-4574-81a1-11527ef35319\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"1a470c19-9168-4574-81a1-11527ef35319\")) {                    Plotly.newPlot(                        \"1a470c19-9168-4574-81a1-11527ef35319\",                        [{\"hovertemplate\":\"x=%{x}<br>y=%{y}<extra></extra>\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"showlegend\":false,\"x\":[\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Manufacturing\",\"Wholesale Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Wholesale Trade\",\"Utilities\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Wholesale Trade\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Construction\",\"Professional, Scientific, and Technical Services\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Transportation and Warehousing\",\"Wholesale Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Retail Trade\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Educational Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Information\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Accommodation and Food Services\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Wholesale Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Educational Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Information\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Utilities\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Utilities\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Retail Trade\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Retail Trade\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Retail Trade\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Retail Trade\",\"Utilities\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Retail Trade\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Information\",\"Accommodation and Food Services\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Information\",\"Educational Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Information\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Arts, Entertainment, and Recreation\",\"Health Care and Social Assistance\",\"Wholesale Trade\",\"Educational Services\",\"Accommodation and Food Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Transportation and Warehousing\",\"Retail Trade\",\"Information\",\"Accommodation and Food Services\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Utilities\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Wholesale Trade\",\"Manufacturing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Utilities\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Health Care and Social Assistance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Information\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Utilities\",\"Retail Trade\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Retail Trade\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Retail Trade\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Transportation and Warehousing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Utilities\",\"Retail Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Utilities\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Information\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Construction\",\"Finance and Insurance\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Information\",\"Finance and Insurance\",\"Construction\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Arts, Entertainment, and Recreation\",\"Information\",\"Wholesale Trade\",\"Information\",\"Manufacturing\",\"Arts, Entertainment, and Recreation\",\"Retail Trade\",\"Wholesale Trade\",\"Real Estate and Rental and Leasing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Other Services (except Public Administration)\",\"Finance and Insurance\",\"Retail Trade\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Other Services (except Public Administration)\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Utilities\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Professional, Scientific, and Technical Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Arts, Entertainment, and Recreation\",\"Wholesale Trade\",\"Utilities\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Finance and Insurance\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Transportation and Warehousing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Finance and Insurance\",\"Information\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Utilities\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Finance and Insurance\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Utilities\",\"Manufacturing\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Transportation and Warehousing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Real Estate and Rental and Leasing\",\"Professional, Scientific, and Technical Services\",\"Retail Trade\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Retail Trade\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Accommodation and Food Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Professional, Scientific, and Technical Services\",\"Transportation and Warehousing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Retail Trade\",\"Information\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Information\",\"Real Estate and Rental and Leasing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Accommodation and Food Services\",\"Wholesale Trade\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Arts, Entertainment, and Recreation\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Educational Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Construction\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Manufacturing\",\"Utilities\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Retail Trade\",\"Finance and Insurance\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Professional, Scientific, and Technical Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Wholesale Trade\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Information\",\"Manufacturing\",\"Information\",\"Real Estate and Rental and Leasing\",\"Construction\",\"Information\",\"Finance and Insurance\",\"Information\",\"Utilities\",\"Wholesale Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Accommodation and Food Services\",\"Transportation and Warehousing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Wholesale Trade\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Professional, Scientific, and Technical Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Administrative and Support and Waste Management and Remediation Services\",\"Construction\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Professional, Scientific, and Technical Services\",\"Health Care and Social Assistance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Retail Trade\",\"Wholesale Trade\",\"Utilities\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Real Estate and Rental and Leasing\",\"Construction\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Wholesale Trade\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Other Services (except Public Administration)\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Other Services (except Public Administration)\",\"Wholesale Trade\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Retail Trade\",\"Retail Trade\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Construction\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Transportation and Warehousing\",\"Wholesale Trade\",\"Information\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Construction\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Professional, Scientific, and Technical Services\",\"Construction\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Real Estate and Rental and Leasing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Construction\",\"Professional, Scientific, and Technical Services\",\"Construction\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Educational Services\",\"Information\",\"Wholesale Trade\",\"Manufacturing\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Retail Trade\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Educational Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Finance and Insurance\",\"Agriculture, Forestry, Fishing and Hunting\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Educational Services\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Transportation and Warehousing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Educational Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Transportation and Warehousing\",\"Retail Trade\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Arts, Entertainment, and Recreation\",\"Information\",\"Manufacturing\",\"Retail Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Accommodation and Food Services\",\"Information\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Wholesale Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Accommodation and Food Services\",\"Information\",\"Other Services (except Public Administration)\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Information\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Wholesale Trade\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Utilities\",\"Administrative and Support and Waste Management and Remediation Services\",\"Health Care and Social Assistance\",\"Accommodation and Food Services\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Information\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Utilities\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Utilities\",\"Information\",\"Arts, Entertainment, and Recreation\",\"Information\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Wholesale Trade\",\"Information\",\"Finance and Insurance\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Construction\",\"Real Estate and Rental and Leasing\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Transportation and Warehousing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Utilities\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Utilities\",\"Finance and Insurance\",\"Utilities\",\"Utilities\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Retail Trade\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Wholesale Trade\",\"Utilities\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Finance and Insurance\",\"Utilities\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Retail Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Information\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Utilities\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Utilities\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Information\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Retail Trade\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Finance and Insurance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Utilities\",\"Information\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Retail Trade\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Real Estate and Rental and Leasing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Utilities\",\"Finance and Insurance\",\"Utilities\",\"Finance and Insurance\",\"-\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Construction\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Utilities\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Information\",\"Transportation and Warehousing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Utilities\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Utilities\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Wholesale Trade\",\"Manufacturing\",\"Information\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Utilities\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Wholesale Trade\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Administrative and Support and Waste Management and Remediation Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Utilities\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Utilities\",\"Retail Trade\",\"Agriculture, Forestry, Fishing and Hunting\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Educational Services\",\"Professional, Scientific, and Technical Services\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Construction\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Retail Trade\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Professional, Scientific, and Technical Services\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Construction\",\"Information\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Real Estate and Rental and Leasing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Information\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Wholesale Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Wholesale Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Agriculture, Forestry, Fishing and Hunting\",\"Accommodation and Food Services\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Agriculture, Forestry, Fishing and Hunting\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Construction\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Accommodation and Food Services\",\"Accommodation and Food Services\",\"Manufacturing\",\"Wholesale Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Accommodation and Food Services\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Transportation and Warehousing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Agriculture, Forestry, Fishing and Hunting\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Accommodation and Food Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Information\",\"Wholesale Trade\",\"Finance and Insurance\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Arts, Entertainment, and Recreation\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Retail Trade\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Information\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Accommodation and Food Services\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Information\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Wholesale Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Utilities\",\"Manufacturing\",\"Utilities\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Transportation and Warehousing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Health Care and Social Assistance\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Utilities\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Information\",\"Wholesale Trade\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Utilities\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Utilities\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Information\",\"Information\",\"Information\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Educational Services\",\"Construction\",\"Professional, Scientific, and Technical Services\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Information\",\"Retail Trade\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Accommodation and Food Services\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Information\",\"Retail Trade\",\"Transportation and Warehousing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Retail Trade\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Other Services (except Public Administration)\",\"Retail Trade\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Construction\",\"Information\",\"Construction\",\"Finance and Insurance\",\"Construction\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Professional, Scientific, and Technical Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Educational Services\",\"Finance and Insurance\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Real Estate and Rental and Leasing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Transportation and Warehousing\",\"Transportation and Warehousing\",\"Retail Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Other Services (except Public Administration)\",\"Wholesale Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Information\",\"Information\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Information\",\"Retail Trade\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Real Estate and Rental and Leasing\",\"Transportation and Warehousing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Information\",\"Wholesale Trade\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Information\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Transportation and Warehousing\",\"Manufacturing\",\"Educational Services\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Wholesale Trade\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Finance and Insurance\",\"Wholesale Trade\",\"Administrative and Support and Waste Management and Remediation Services\",\"Real Estate and Rental and Leasing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Health Care and Social Assistance\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Finance and Insurance\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Information\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Wholesale Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Information\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Finance and Insurance\",\"Wholesale Trade\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Utilities\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Information\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Retail Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Wholesale Trade\",\"Finance and Insurance\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Utilities\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Wholesale Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Accommodation and Food Services\",\"Manufacturing\",\"Finance and Insurance\",\"Professional, Scientific, and Technical Services\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Accommodation and Food Services\",\"Manufacturing\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Wholesale Trade\",\"Manufacturing\",\"Administrative and Support and Waste Management and Remediation Services\",\"Transportation and Warehousing\",\"Finance and Insurance\",\"Arts, Entertainment, and Recreation\",\"Retail Trade\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Retail Trade\",\"Manufacturing\",\"Arts, Entertainment, and Recreation\",\"Information\",\"Finance and Insurance\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Finance and Insurance\",\"Finance and Insurance\",\"Administrative and Support and Waste Management and Remediation Services\",\"Finance and Insurance\",\"Retail Trade\",\"Wholesale Trade\",\"Finance and Insurance\",\"Manufacturing\",\"Wholesale Trade\",\"Finance and Insurance\",\"Finance and Insurance\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Finance and Insurance\",\"Utilities\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Information\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Manufacturing\",\"Finance and Insurance\",\"Accommodation and Food Services\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Real Estate and Rental and Leasing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Health Care and Social Assistance\",\"Accommodation and Food Services\",\"Manufacturing\",\"Information\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Mining, Quarrying, and Oil and Gas Extraction\",\"Administrative and Support and Waste Management and Remediation Services\",\"Arts, Entertainment, and Recreation\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Manufacturing\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Transportation and Warehousing\",\"Other Services (except Public Administration)\",\"Manufacturing\",\"Information\",\"Manufacturing\",\"Manufacturing\",\"Utilities\",\"Information\",\"Manufacturing\",\"Accommodation and Food Services\",\"Accommodation and Food Services\",\"Administrative and Support and Waste Management and Remediation Services\",\"Manufacturing\",\"Manufacturing\",\"Information\",\"Information\",\"Information\",\"Wholesale Trade\",\"Information\",\"Manufacturing\",\"Finance and Insurance\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Professional, Scientific, and Technical Services\",\"Information\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\",\"Retail Trade\",\"Information\",\"Manufacturing\",\"Educational Services\",\"Manufacturing\",\"Professional, Scientific, and Technical Services\",\"Manufacturing\"],\"xaxis\":\"x\",\"y\":[0.22401991288114498,0.20087815587266739,0.4152293577981651,0.07577112203844434,-0.04734827285141821,-0.24663951509589094,0.09794841342055609,0.09244606828299833,0.2781615014645789,0.27186404877346265,0.11199088791165207,0.22594802166906672,0.008112865148523423,0.9446901781130287,-8.008,0.0849324084856463,0.039572136157656236,0.2383194599294964,0.17528718834165752,null,0.46819617738218233,-28.82934131736527,0.21106866838411656,0.9147358370464672,-6.542415409525519,-0.868421052631579,0.0948905109489051,-0.2500761724991268,0.2703053195297831,-4.04589140398466,0.10633397312859885,null,0.1997210454198819,null,0.03821439871142175,0.07184254975398399,0.2448039353097293,null,0.05414451390399158,0.19191532161501987,0.9568998840355625,-0.44813371550030595,0.6510965536884079,-13.739528795811518,-23.812280701754386,1.000482560201213,-0.3391756894179578,0.0700332904725838,-0.21498713848720802,null,0.348609211126311,0.49906556314123346,null,0.30893042680103794,0.04709719982407272,-0.2706012368438314,-205.1827961954476,0.20049906727717615,-1.2025194686211635,0.1829059829059829,0.13152595516636165,0.047274439368046595,-26.87728849870759,0.07130075124504094,null,0.002983720578599869,0.17902665121668598,0.14761499705555192,-1.7858042580757307,0.11966236458184507,3.8296717327731784,null,0.03971614265660825,0.21647951376166563,-65.55930885754405,-0.5444747981147369,0.011371020142949967,0.0412033538450466,0.7091210886464533,0.13385315139701104,-0.1307785888077859,3.662414131501472,0.315,-0.6385999627919563,0.08946760831182941,-2.1296473286820223,-0.4452469711090401,-17.491938373342887,-0.03141461259986809,-35.8768,0.47884583540321246,null,0.12318840579710146,-5.361241768579492,null,0.058558163980378414,0.09137688602570879,0.0638445670020629,0.34889598694488394,-0.1794257935994971,0.12108188856490326,-0.7816004535586377,0.2992175057129008,null,-156.5,0.12788596667335878,0.1940360180434558,0.07359079861214789,-0.3660774524355688,0.06595253098088637,0.017161333112253357,0.07981230112377653,0.0163973103692344,0.1028998764907547,-0.2531707990610884,0.02785193449416265,0.18751835535976505,0.05335856196783349,0.5610047846889952,-0.016242719488108234,0.19377371774718485,0.2674524096908306,0.3043947827531777,null,null,null,-0.9113669386386498,0.4972996040853799,0.2933887900253651,-4.5336339263953205,-0.04803762819029995,null,0.03671937818279282,0.11865850145896732,0.7377979568671964,-40.97079859553604,0.10326742618887773,0.06767759801242693,0.1941059436668238,-5.522068778770647,0.04148626571214914,-0.018140441068124888,-0.1351684470008217,0.07035364936042136,-0.3836136948347516,-0.10761047463175123,null,-890.6279069767442,0.8093877551020409,null,-0.8526274586554458,0.024637213801999354,-3.11583522297808,-0.03881418628705668,0.053259414127651575,null,0.9324490297224269,0.2816265060240964,-0.00041967039308206486,-0.05478832468942226,0.05958673714560307,null,0.3838110147719974,null,0.56090901545169,0.3032826261008807,-0.11625048446929849,0.06976744186046512,-0.01380315500685871,0.20758510890552487,0.08030534351145038,0.2408910357650315,0.08539497033465379,0.3368647574904817,0.3299969669396421,0.20149996131271486,0.2308028067483648,0.09489802427854137,null,0.1286500066241088,0.9538393253439857,0.0612604097064911,0.27223489167616877,null,0.20104967319202702,-0.4228969551006365,0.07456568011264347,-2.199472449276918,-0.3550839806562916,0.15752880413190307,-0.39106662551258875,0.10469457346110883,-10.558853532448117,0.15749372276256168,0.2925251467673784,0.8282630994702601,null,-0.11662948968907907,0.03776315212494967,-1.075764151528303,0.027360311463780786,0.0812467245094043,-22.861019736842106,0.026576539837060795,null,0.3449530417124968,-0.011966602769322385,-0.040493852053774655,-13.83614088820827,-0.07353042598680429,-0.0852560708071715,null,null,0.2701487812598924,null,null,0.5531950710389872,0.17362045760430686,0.15367129340333302,-0.0031194556549882044,0.4990170380078637,0.35167947555173673,0.1967202834477785,-0.6604955051485193,-0.9442008448746056,-0.3407054436214844,0.20683499107370568,0.23912541312768756,-9.105746844749419,null,-0.02244538047834895,0.09313724115692515,0.06873598194351939,-0.25483184333759046,-0.38838665128153876,0.12953724957987203,null,-0.1824818693303927,null,-0.5806451612903226,-988.75,-0.9620806633999246,0.07063108177317476,0.4821389072460411,-12.029102167182662,0.018614289739418123,0.09860229774812643,0.7682672233820459,0.37301276383984583,-26.496575342465754,-10.378068091844813,0.2516527795900361,0.08074422626074522,0.16408012668767244,0.503765932792584,0.15481894588013512,0.10186403096696607,-0.3731086234469184,-0.09532774691332084,0.03583049577722225,-4.89644184811471,0.0565149136577708,0.23637804177400523,0.9491713790736444,null,0.7289309484193012,-0.016106220097945774,0.2735996161688857,0.04413439595302108,-2.182108626198083,0.056319300121490244,-2.2494446501295817,-0.7976393746995342,0.9120430733656553,0.09642669469259064,0.11956521739130435,0.14742965998328011,null,0.14000735830159497,-0.49618755477651183,0.3071646124505423,0.8782857638587663,-22.1340206185567,-0.01257071024512885,-0.28807881773399013,-19.685110663983902,0.4789621318373071,-207.98235294117646,-0.42481966940380983,0.19335618554426023,-0.17376604654355735,-39.02089552238806,0.12327015123286761,null,-10.474093264248705,-0.012089630015633143,0.3294558162755866,0.38663286334860414,0.9165210377738944,0.009593475099862393,-174.44444444444446,-0.693044802639929,0.18934530743028483,null,0.11979378196255253,-0.6229667112584579,-0.1616013439174721,0.2256249744282149,-0.06502125814120982,0.1383586962493231,0.2118303022232111,0.20559610705596107,null,null,0.932856038452489,0.9196364161015727,0.0728652418771659,-0.4984812689841377,null,-0.24431520790927594,null,-0.47556542826025805,0.06414469339560341,-1.0303100766443545,0.09812097540377916,0.3015208848220256,0.07301936738607817,-0.2775303352882016,-0.28272209927284225,-1.7631332082551594,0.10200655200655201,null,-0.26827362375535135,0.09359605911330049,0.09943181818181818,0.10040796607440013,0.003955411722402014,null,0.044673387990841494,null,0.1547238942685161,-11.450145208131655,null,0.1309757136770345,0.03212290502793296,-3.978702807357212,0.15669781931464175,0.3489861259338314,0.27989429641048225,-0.3192543652666352,0.030324761807191885,0.933556414306316,-4.659155659155659,-0.22998780983340106,0.04011680456094,null,-0.31065526239489705,0.07496507511912973,0.8431582708110039,0.5397376543209876,-4.44240273582145,0.08389343266661269,0.1345464831227607,-206.31578947368422,-6.083861506173847,-2.2585644034877475,-0.530779579566279,0.12063566005301386,0.20326646179701968,0.43011829371567967,-0.03821900779749124,-0.6474125652793163,-0.08773671825391885,0.04640009591751094,0.8309849749582637,0.09210304054054054,-0.025882922109337205,0.8855549774932706,-0.06630570961762486,0.949407624377022,0.9700002255622138,-0.5448024560296101,0.49047886435952753,0.09076348104644955,-0.23175743362456933,-0.06872053918342706,-0.33789107763615295,-2.271118775249096,-1.0871911696905594,null,0.056206059696264604,0.08806960130292663,0.15474834695993608,0.19310344827586207,0.04339250493096647,0.15199389845282196,null,0.9107054922688027,0.13040632605115202,null,null,0.9042897849252508,0.08510450657024429,0.19769700602998252,0.012911638841442136,0.1686572902451699,-0.5298480131843984,0.12292532754432894,0.051210817455439456,0.21264571677335095,0.11570782159017454,-0.420057063921459,-4.922291616622628,null,0.1078788906793317,0.09846281922003611,0.19923201890415004,0.09017713365539452,0.0975280468082416,0.9114631873252563,0.9414778019248681,-1.393762620596814,0.28190668900204,0.02442424580382535,0.061525257254059613,0.04821907013396375,0.05624836887872809,0.0572190421800414,0.14828889105416437,0.9211824371265805,0.030811959413704675,0.31946273373716094,-0.1573529075977339,0.9310932832831688,0.15302983521447278,-1.3464680419752741,-0.009850048810152511,-0.5738750494846268,0.490324823297671,-0.49836739340127373,0.17395047598100996,-0.13572323890699423,-0.4131589701675521,0.6910229645093946,-0.37517588968199145,0.03343026197420845,0.009539061623248012,0.7109577221742882,-0.04937956479617587,0.23638793259648488,0.1526566075137865,0.19518377693282637,0.2328830926874709,-0.0049534376857539135,0.9917473424431698,-0.30385599867888696,0.8443400643510767,-0.09879589342839575,0.005279426250588355,null,0.1626174678349035,0.1972014041057373,-1.8814792884809908,-0.09581550166428911,0.3685373398144057,0.00020382973422867432,0.07796121802904826,-7.192908039487938,-1.912066864008358,null,-70.7044107965767,-0.5229601701469451,-0.01255590735482232,null,0.1602518990372407,0.9814389530311134,0.07334609721280334,0.9402490297542044,0.18860940523260705,-0.06677503824315362,-0.17613586159365224,-4.809445277361319,0.4809362023405058,-2.4719283970707893,-0.034313541564170214,0.9522792737278055,0.9312516355306936,-16.553481694185212,0.0598922999921607,0.14329408291786933,0.9376151618847065,0.0026170983760569052,0.014774937948614744,-4.313295208909076,0.9772822709330646,null,0.19832839979104996,0.18213707501349163,0.15622166231970958,0.6289154618149014,0.11576156273075115,0.02507251692061481,0.9210293608786477,0.12559483344663494,0.052164802543907214,0.27802690582959644,0.27605097058473266,0.014320129197718651,0.10943388109782329,-0.21232550221314267,0.3739706204206696,0.21044522577331806,-0.5116330085811988,0.08555933678305595,-0.065326149701751,0.9425299581649295,0.9473368522072937,0.13008631319358815,0.20767840169968504,null,-0.0011767262163821144,-0.09679536257245981,-0.25800787163184985,null,0.022579769206692052,0.9192696982904741,0.05980733208455981,0.016595858274627975,0.07235967012503325,0.8609920067757133,-0.038230824602095495,0.9036185707783341,0.007756534559848716,null,0.15141968358450256,-0.0719160230126188,0.08395656211699569,0.5184164237346089,0.3515693340586386,0.9260812069846422,0.27398960254905247,0.9455358193153747,-0.6099088683351469,-31.041420118343197,0.12766914894828982,0.7654510556621881,null,0.28212591910693685,0.9126655008743443,0.4223874070835155,0.0729707397301647,0.9359044511548413,-282.35483870967744,0.08010309278350515,0.0007642825297751735,0.03355819961255904,0.09004701298842632,null,0.24571306183849273,0.04801476920640263,-0.14422334147019744,null,0.3834771886559803,-0.19440942485762727,0.04604981329306436,0.15716753022452504,0.9122862074376274,-0.25619741374442373,0.9762536194625605,-0.9035343520354602,0.9757510729613734,0.02543321050193961,0.1448726047588966,0.054634023635721576,0.924182068557982,0.9052994521065558,null,0.9274502646468333,null,0.9683772841667578,-0.24081963887198216,0.06651891748049678,0.0385398053141246,0.9757761784391612,0.1462140992167102,0.9659566217002299,0.9714245349658582,0.16933184510653346,0.11331592689295039,0.953776991319735,0.9663369713506139,-1.9794708688737892,0.22120538484975005,0.3419838523644752,0.13276353276353275,-0.6130778842149105,0.9308417603184496,0.11024744319064939,0.19912830841984008,0.22793634091805867,0.10461926771688025,0.18856279938463755,-2.6841792059848677,-0.5338151388360594,-0.02158034528552457,0.008499777095182806,0.5959708370181993,-1.6221603341953452,0.03423429193620701,-0.26935287843837585,0.32989046332393024,-3.6704692461484183,0.06899147438933623,-2.1095559845559846,0.07082885873279313,-0.3817236433181927,-0.06793209394365464,-18.335135135135136,0.19428801287208367,0.05452906287069988,-5.646387146011382,0.30149517369023116,null,-0.6786877925832907,0.11235126228852703,-0.1745272005603549,-0.14349898175557935,0.05013291445142581,-0.15559190530066885,-0.008314505196565748,0.5163765122455002,0.8839704769114307,0.7851071064263856,0.927804198097737,0.7200628133463954,0.9255842558425584,-0.841471375182021,-0.833801896044459,0.9400069145015362,null,0.3093111387137353,0.37264061010486177,null,0.23719722679406324,-0.037690328114947456,null,0.1319239400023621,0.9660287305226709,0.3451286955798578,0.19741906271224813,0.34283261802575105,0.17304738672810227,0.04263821855751546,0.03771036508645703,0.427609015854381,0.3809659090909091,0.9516129032258065,0.58327781479014,0.030812837985277043,-0.11191352136985057,0.41903392535914263,-0.7317085335239647,0.06908387542794524,0.0839447972417108,0.23731431092807767,0.07743406702359706,0.007748544574103899,0.07563705536945137,0.05235268249780123,-0.0675363829232888,-0.3373068432671082,0.06155429628529319,0.5983404741063796,null,-1.2695121951219512,-0.06349950176402466,0.9310926949048496,0.6060099151962368,0.18584283143371325,0.9166317991631799,-0.9842529667988217,0.19714540588760035,0.06778731956879225,null,0.1988356306796639,-223.2883435582822,0.13255483667350482,0.2327859649122807,0.15569426503636333,null,-0.12212005266189419,0.6325347843442343,null,-0.22359322033898305,-47.826167999999996,-1.8474006782192078,0.12554616953102243,0.06003039513677812,0.10161021654636314,-165.0,0.9722703639514731,0.16634992588623487,0.10357851348468135,0.2121202025586354,0.24713100784001818,0.6059650824442289,0.15252882635692047,0.13619799574855754,-0.016301816488122962,-53.288636363636364,0.12447916666666667,0.04441180938876792,0.5265220773185982,-0.004634937272757051,0.08373205741626795,-0.0035897150489759572,-1223.0,-0.3401936555524045,-0.024996640236527347,0.11264080100125157,0.08823550633139723,-0.15472779369627507,0.20514619883040935,0.885596794601434,0.18055555555555555,0.30762040823793757,0.41371217722188686,0.04842320453098294,null,null,0.1871996544338655,-0.09339288498808225,0.11161272828470713,0.04196695509644434,0.04364077880404146,0.09757814727393682,-0.8255726155746804,0.9185341789992952,null,-0.891632073410531,0.1699336175227643,-1.2920409488757616,0.09233426215275058,0.9809597306952825,0.03242864738350901,0.08992383588697601,0.015176546500986916,0.027432397182853663,-0.049155982377110045,0.040977455778189106,0.15991805254278138,-0.5982873121286264,0.4524207011686144,0.3612260675792442,0.17607367887681263,0.3040256901321262,0.03405201916495551,0.04813690777271961,-0.3628743551746439,-0.3834345992914055,0.006507356492064003,0.13802816901408452,0.5437982968849193,0.9621168095307279,0.15206365965010224,-0.1792902949679741,0.1897827489782749,-0.013327785961430546,0.39657276360963084,0.5378909118294956,-0.01441946669263282,0.09468314448189834,0.05546019389309286,0.7664427025009332,0.14876028503248775,0.1439315052643758,0.100689460905957,null,-6.782204198473282,0.10899720826961694,-114.75824175824175,0.10763313567243951,-6.29377350605934,0.6859860037579761,0.19258558200283415,0.002698691134799622,-387.73091798757827,-0.014368317343411829,0.17718803697173213,-98.05239179954442,0.2570691315711174,0.043640234167110166,-0.19358383701762544,0.9443868589717813,null,0.13788267930769055,0.12023345641409587,null,-0.048957227253532964,0.11075747931253978,0.02118814189320451,-0.02415158810281898,0.28126217374366963,0.20544724300215547,0.027779896860028686,-0.15176971326164876,0.22231847961448914,0.0014257841812997149,-0.14733540317119603,0.06076113822168705,-0.44575175004241185,-0.1139847293185602,0.9226471365472461,0.21771523178807947,0.2044324627126952,0.44639580602883355,0.19493841477698312,0.8994090668548245,0.038340240940562355,0.04264512268716596,-0.06926210955183341,-1.5315921810365805,-0.022186807440424314,0.1657501963864886,-1.3620699146710706,0.2579252941478703,0.6267496111975117,0.4346518621327782,0.19044257138054416,0.15647459684650508,0.15491235222176927,-0.9836965062775868,-0.0850604666313775,0.20697376839411388,null,0.20161089535811766,0.3314552971077438,0.83965079914839,-0.09453811029153494,0.05976849786684052,0.12101069093721549,-0.15670154459392127,0.24507216716932356,0.9892748779023544,0.1335762775819342,0.96799413633032,0.07700293045838424,0.003286770747740345,0.024823698719149766,0.013297406900047675,0.12786259541984732,0.08467217221159694,0.037624822583985335,0.919929471555256,null,-0.08367662203913491,0.020220363981712286,-2.189226793877957,0.05666203680738132,0.037078716424810226,-0.14751351184682937,0.234417265350048,0.1609975761335309,0.015352340993611137,0.9405433111225013,3.8206521739130435,0.1171706402930511,0.1118181241319016,0.13939784862799112,-0.15952765247140946,0.09201943520539876,-0.0632817153067302,0.18071021799847656,null,0.040558963871847306,null,-0.08178884853397347,null,-0.12222372088840931,0.9209723590970951,0.21339950372208435,0.8541579357001736,-0.08843159065628477,-0.15244286013839378,-0.001966671393254132,0.10988136574074074,-0.06062864290847151,0.022815158546017015,0.16883652044494324,0.038432229999999984,-0.16977611940298507,-67.98340287726046,null,-0.1074321944346601,-2.8529781350686987,0.06404484776826727,-0.5106199185236119,null,0.14475292474244805,0.13009845288326302,0.044512566160346274,0.92668714696264,-1.3475718594202006,-0.06532253606765795,0.14629741119807346,-0.22876932414581028,-0.007728900029054164,0.2079399457749111,0.20486163051608078,0.2576246959055486,0.0916917428445418,0.2408713608940357,0.059350589676826465,0.1205473973412626,null,0.11526299465159734,0.8953687821612349,0.08526191153092688,-0.05177920775350699,0.0963513239371311,-0.712322368589194,0.1581736649001223,-0.20558040624770843,-0.06106482487189644,0.24671999635871236,0.5189885537093727,0.2844794220100632,0.024421836630056398,-0.025227864583333332,null,0.20139280217330968,0.21206374807374465,0.1111421130952381,0.16459408313089688,0.012535366756757002,-0.1675430210325048,0.0824557884531809,-0.7790756879522527,0.13573821246905327,0.07326108374384237,0.15734931021979728,0.10707405177603853,0.04751494428035776,0.1495380585997637,-0.007575017900149711,0.10597456031060759,0.09158846298003563,null,-1.9296501871692269,-2.5618037135278513,0.05527638190954774,-1.1702743902439023,-2.5285365661654726,0.05380333951762523,0.020008261269304054,0.24027177737256653,-0.05510076037107303,0.23921270093447633,-0.032658843673771684,-0.3845482380747744,0.11710072794189065,0.11850682407844396,0.16530667549908162,0.12946884576098058,0.1672146168448209,0.14411850653221783,0.3335226157426881,0.2262665818547513,0.12966306811633177,null,-0.0411692098150631,-5.340077071290944,-0.07015988234924031,-0.07337724509453333,-0.03215434083601286,null,-0.268984375,-0.5480331599479844,0.07144006315639814,-0.14661187040045875,0.03716490658001625,-7.748952879581152,0.2113687359760658,-0.17009481139546986,0.11992167934064933,0.14472469016047454,0.4999805040863435,0.4434767152506221,-8.640608034744842,0.7675484046904827,0.03749662800107904,0.11060040218328067,0.07047078398747186,-0.03506654878252766,0.02801894328426338,null,-0.139153140195379,-0.09593763724198506,0.2495755517826825,0.39433130022054413,0.7829866842742379,0.050387596899224806,-0.20139004557774715,0.21676300578034682,0.9778946695913282,-0.3848192114314676,0.15159705387909017,0.12005295456992356,0.9363711001642037,-0.29666254635352285,0.9597824339531643,0.11891861699156565,-0.016279359282928042,0.07969253773188169,-2.698191933240612,0.3332651568852142,0.12173360808626295,0.11332357247437774,-8.524677774284816,0.11506078025774943,0.0122059160049912,0.06307460400784037,0.11985760853969304,0.09523809523809523,0.5850897611683301,-1.491891891891892,0.9443779131378749,0.23133591554644187,-0.01991298527443106,0.8670256705181157,-0.1425967380876239,-0.451999677037356,0.44654873046629256,0.37286277023778397,0.02971565771015431,0.6590710456367977,0.12183389703119128,-0.9020809776032058,-0.1581670362158167,-4.908335370325104,0.12574850299401197,0.17385159010600706,0.09649644032597862,0.041631265930331354,null,null,0.17479465909739725,0.08510008874864412,0.2633936026060415,-0.14235569422776911,0.06085628494512321,0.04501471013383671,0.1156224791610648,null,-0.2503142897052661,0.33356234970800414,0.8968992248062015,0.05084014555726774,-0.2997676874340021,0.07027095391282032,0.15301724137931033,0.3052947052947053,-0.10689655172413794,-0.13720827829150153,0.1773608250533765,0.14107142857142857,0.055762644178733244,0.10680340648148906,-0.7938725490196078,-1.670516966990092,0.22811914701894181,-0.09949130003888952,0.21933135616069022,null,-0.1195942338494394,0.39192655596057785,-0.5744423216640206,0.04373444639024583,0.0778500595466753,-0.07164204011044024,0.07999358768836165,0.4030094665816293,0.4603916582526208,0.6333034739523556,-1.0827521069456554,null,0.9069778103796076,-0.19368123029406087,0.43343653250773995,0.17491803116301646,0.4511214939667846,0.5388315289209767,null,0.9945243655918199,-0.14311058545239502,0.17708222795174297,0.1246615087040619,0.1407475372718724,0.13369773969567145,0.0543581273185129,0.09294087987065698,-2.779894910036622,0.9797921891795055,0.23481734352748684,0.32158768732280274,0.9650945222272405,0.649656862433896,0.165198650200598,0.136415963161934,null,-0.18211470508290295,0.02389611674848816,0.5577963001847169,0.12400728037119639,-0.35020294020546483,0.9452793632507723,0.060628340738401856,-0.0388181575365987,-0.03749202767011726,null,-4.046900894928737,-0.014480885418782955,0.0031311415342593516,null,-4.574826592431131,null,0.18836210966725017,0.2368481127248396,0.2037292817679558,0.27658679052032736,0.3344493776839654,0.9463696138500142,0.19046815847670454,null,-0.30592745955064793,0.16371785798537392,0.19957227360184251,-0.0920717297622909,0.13576540881591317,0.24768297092736383,0.10991694675485825,0.10845646023263125,0.008232159767077014,0.3475334085553534,-0.020193662167108488,0.5503633776011183,0.07873257768859483,0.060632276503635625,0.03605302666051751,null,-1.661565067012538,-1.0298506759040367,0.06308781423448634,0.07136103508335406,0.11301789532697297,0.06838021338506305,0.7145953757225434,-0.03298212700380241,-0.1120662687538321,0.21556280220398066,0.12845259522303837,-4.480511078764354,0.9234449760765551,0.134580767408811,-2.696494758021815,0.8752913321741704,0.9270237900811149,0.9182934543154405,0.9729387049858913,null,0.08989663926499034,0.9661939731577615,0.984876653557383,0.9598714496655955,-1.72222900390625,0.9600406631216766,0.08858181391441843,0.08508037171254795,0.9247027741083224,0.5694181326116373,0.3205317577548006,-175.46913580246914,0.028302665236405643,0.19898475911046729,0.07887185373452488,0.15862313697657912,-0.5838582677165355,0.14693597610761733,-8.77548241825714,0.0347410099508842,-0.012861217698393834,0.9290646329958856,0.8713033880281595,0.9686314117335582,0.15932677823771513,0.8734579301174559,0.9092374209467495,0.8085433312845728,-2.624438032610884,7.453061224489796,0.036172026631964165,0.9693009402713966,0.2522294594653669,0.9296740994854202,0.9698328577252344,0.40294756509230123,0.07731069065089533,0.9812495197110582,0.10056466792148427,0.9187428218040463,0.19325842696629214,0.9146174863387978,0.06618083915471641,-0.11490532363160173,0.05565215511990789,-35.295511221945134,0.15928154246710294,0.09977011494252873,-2.0537359535602064,0.1020735433736766,0.902748221560163,0.18518351621116194,-0.25534496464583073,-0.5224835046410671,0.07266327143473615,0.09390862944162437,0.03213094877235526,0.06259535581746999,0.4301514725791208,-0.05591427159820774,0.04140789698592673,-0.3077099952243663,0.913090107833005,0.162432004406803,0.9248964591961734,null,-0.21361005223775237,0.9071428571428571,-62.68421052631579,0.09763764788786673,0.20980615735461802,-1.0643305315496625,0.028326090537064957,0.8724744528953385,0.9093929645060914,0.1925220368278837,0.053404018066657406,-0.7508020463019163,0.22945749053762565,0.17017828200972449,-0.036435037471072296,-0.4677517461249659,0.1601023996233577,0.1396530091874317,-0.02946374687473058,0.04519439510558516,0.21991427629409827,0.1732828462890793,-2.194696829223067,0.279598608076394,0.3880844912302286,0.8788082061602102,-0.05816911818101538,null,-0.053499446627473676,0.9115454919020022,-0.33049685135752943,0.21458246780224347,-0.12420637366701597,-0.5546478687660583,0.8707622620142969,0.35441254983926485,0.9433766033665884,0.917758396734088,0.8610314410952974,0.2332326819173692,-0.6727403968083654,-0.05447414294015108,0.12598854649577312,0.018857164581986847,null,-0.20032933929815885,-0.8215552879138049,0.10472279260780287,-0.04115338706028288,0.27368671909576825,0.18959324337442968,0.15875076881022346,-0.5071206453648204,0.08810802429982945,-18.190754516471838,0.9397369402887036,0.21996659411059272,0.9484081189328627,0.9266141732283465,0.8823189319878062,null,0.146626968337736,0.027394512423218925,-1.1042519894782405,0.9489342976313473,0.014382239382239382,null,-1.0801040981496839,-54.42982236219498,null,0.29133354653022064,0.9689486417848395,null,0.4308491989695593,-0.9787234042553191,-6.975735116883117,-1.0583647798742137,0.024700693131695022,0.9204181639986933,-0.02834931744717228,0.015834914392374045,0.06035767511177347,0.10643160300359125,0.12269817823732151,0.15409576600362163,0.0659896518169965,-0.02110032429952346,0.051807358146519364,0.11401667366400768,0.07255371538435593,0.16164181870423358,-0.3157894736842105,-383.2328767123288,0.06129175211003702,-181.06741573033707,0.8862156628016449,0.13436191304370465,0.11597938144329897,0.2710433198978392,-1.1940280730044712,0.04213855750871636,-0.5074759355321923,0.2726501285052011,0.027304227304227303,-0.5225852951421875,0.09576138147566719,0.014845969583867195,0.07918177238126073,0.32412140575079873,0.026887149709669274,0.2077404317958783,-0.5057439636788884,0.16787456057830372,0.925082508250825,-0.002288727681559012,0.7261487291470784,null,0.024518975829960737,null,0.1355463347164592,-178.04206666666667,0.059173914259347295,-0.11150609402205455,0.25707003277096735,0.2740600053417218,0.08998698641139236,null,0.6461226774718097,0.3570961934903168,0.1555417800519033,-0.3425693957310352,null,0.16791506213067925,-0.04444601469756925,0.18512450396290217,0.922081043956044,0.15576820839978733,0.029979090055355095,-0.6368638672835226,0.06590421074683146,0.33055317061204464,0.13444751662240606,0.23555592186598534,0.279156202913109,0.1741312324627671,null,0.09067430575462648,0.06860616587060356,0.06446140797285835,0.44511861036141154,-0.2323015503488526,0.03342670936414084,0.01856912060952989,-0.056658038538970376,null,0.24202504455920662,0.024414825266446623,-0.593442170777201,0.40761133603238864,null,-0.4341060985797828,-5.422774629866569,null,-0.005889946131016937,-1.9242541459778038,0.35745207173778604,-0.3085869565217391,0.9266196060571559,0.10688016295122779,-0.4424739027949265,0.2720630093188287,0.05698388334612433,-3.495885746713326,0.022494999589007317,-0.49049847266237256,0.07312252964426877,0.2511520737327189,0.906748585444037,0.007192633993070289,-0.13519027069438996,0.36302018587580653,-0.31605283416393176,0.21030152899974375,0.13917122752150118,0.02736549165120594,0.11463250168577209,-0.03770822342509016,0.1176747316968691,0.9339449541284404,0.06991702771111408,0.0737091052424123,-0.7147825222942594,0.22354215206904474,-2.096952908587258,0.16360513739545998,0.39942359441427955,0.15686244382130374,0.2572288342237421,0.9474079639368895,0.9585641698082281,0.09729581153735099,0.1368803067652698,0.9406839789981553,0.9207253526019593,0.07700770077007701,0.961294292026736,0.15276653171390014,-0.4699219911372871,0.5959008631445591,0.1857041628629977,-0.5430471399128947,-0.09179994600003176,0.18676904435781266,-0.7774463066295331,0.038144599241627185,-0.12366240938902313,-7.733649801762114,0.15238511360131593,0.4789640276695433,0.09677012350283104,-0.5175060532687651,0.17194091037122758,0.2278656973755273,0.36985342859247256,null,0.4026104417670683,0.9096334185848253,0.967447614629243,0.1550632911392405,0.21074923746331872,0.12378573411046351,0.11960589646056724,0.1027359017308766,0.061607813673929375,0.037671783522023286,null,-0.17778677914461577,0.1331380831137995,0.040325869840307046,0.18528869397387757,0.17783488091100186,0.09579157298375315,0.461408467334273,0.2669642857142857,-1.1683352337514252,-0.11669495486187981,-0.18393780934537624,-0.04764654923476754,0.9637582226635224,-0.7055479373785853,0.8872080483372974,-0.0417912651825599,0.04793308669776419,0.3373860182370821,-0.012376950962398945,-0.1368147478119068,0.02663019129207,0.1889711092671843,0.2631893886506433,0.9158806154470008,0.17882274098067688,-0.9182389937106918,-6.710487982520029,0.8968091038118411,null,-0.0270030278669977,0.06862745098039216,0.15342394777783946,-3.609450337512054,0.0612867639708996,0.05288246685535528,0.15462355327526547,0.07750151607034567,-0.035438717613368406,0.09068960208266268,0.2967450834370563,0.1920674578388507,0.10618625383853497,0.3094143588593639,0.07246066114993784,0.1343548125888471,-0.5330829822311779,-1.7914585595367354,-0.20164763892469006,0.07260726072607261,0.11247089924246702,-0.08568733862114816,0.07613665351935794,0.0,0.04498918309515829,-678.8,0.19241948223496597,0.19323546110795686,0.09364398907291832,0.9590352899450257,0.9614978418587565,-190.52352232250294,0.556486167926229,-3.8059617909038854,0.8292275017945283,0.5593357505284287,0.9318058435314971,0.318259385665529,0.1517515923566879,0.0982092208323195,-0.12388709084658155,0.05134815315696053,0.12404741744284505,0.04913649025069638,0.10328434532097416,0.004550907158681875,0.11264691014785795,0.9020567463759138,0.9641691254943813,0.11301882430245434,0.1730078966259871,0.1623409669211196,-0.017534062988608445,-2.135281207695779,-0.4172823552698945,-0.056892175256594193,0.13840941009706087,0.20738035748606573,-0.12193036597457325,0.15048954916229906,0.06723945458894826,0.939969763319779,0.04559748427672956,-6.26968605249614,0.5975609756097561,0.12990022529771483,0.9390148196817053,0.13601349983524172,-2274.9142857142856,0.9157442798747146,-0.41108910891089107,-0.16030747205119136,-0.016945146881573038,0.4790518191841235,0.0703741343858571,0.07523971355747057,-0.18622573407472442,-8.556088726640095e-05,null,0.2272115253273417,0.4002984188613556,-1.9053869190668096,-0.27395209580838326,null,0.040590462094148676,0.20808416981776687,-3.845325585370022,0.02756385058372892,0.23439266423816105,0.06440882975506501,-161.81420765027323,0.08686432461045801,0.06794641624085065,0.10110182317081795,0.21942308284875403,-0.03390314451355009,0.6260583455063748,0.12869990479918428,-54.845549738219894,-708.1714285714287,-0.49827882960413084,-0.6179795191285371,-0.3578631916998707,-0.04213686717051455,-4.311043637904251,null,-28.628282828282828,0.06485061928443302,0.5143429788300138,null,null,-7.484837673920799,null,-123.34433878079982,null,0.7112391292305988,-48.659634317862164,0.27916593976060927,0.9779777617250528,0.20983969986357434,-0.03258260558704867,-17.518950437317784,-0.11093760911770047,0.007654759263368094,-0.027820770778517256,0.10420743639921722,null,-399.25,0.23517309875141884,-0.03762425363246297,-132.76132857141292,-0.1642067343773453,-4.20952380952381,-0.16219930160372478,-1.354103739593076,-0.15327293020812816,-0.05784756102882777,0.46431133333687574,0.0030837338877824565,-0.4119259865351765,-0.045688923699497425,-0.011570089883342896,0.09225254472287038,0.42524857954545453,-0.12528284352711688,0.7628349658103862,-0.009369278816814446,0.29703391351157366,null,0.1525984996958843,-0.6391610795942926,null,0.09901625320786997,-0.4921658663114725,null,0.1003896826869549,0.18550209418735314,0.1276090214570311,0.19010776530874773,0.34657728362764334,-22.457736389684815,0.06037254120938445,-33.272626755215455,0.12792996328720702,0.13709285367039378,-0.2502986085819127,0.11890646527821448,-0.15703380588876772,0.22781950689163682,0.32752099996470563,0.8982175578877228,0.10001744603038194,-0.22979686627274598,0.5723997490512285,0.8551902569383569,0.1976924401584295,null,-0.33835279655808237,-6.085393258426966,-1.1053235403781951,-0.47285223367697593,0.2612180540043361,0.24284770753680562,0.9034034856954949,-0.3407987375576596,0.21584995797376139,-1.581946418611346,0.09342694976305484,-0.1473846793596103,0.04164903669854165,0.07994534471186115,-0.07763000078725207,0.13705168416746216,0.23086512091747693,-0.2575480820887504,-0.07826809228799526,0.922455392211873,0.22523523261892317,-0.035156198877459806,0.06944226335759282,0.11866184291361304,-4.477714285714286,0.10733955775739264,-0.5347896020339334,1.0278990320743975,-7.298520084566596,0.02162125012886155,0.09200783211710026,0.03854466858789626,-0.04621676891615542,0.07971306225524284,0.07781670661995206,0.09653114690819393,0.14429522848156648,0.04536698102433717,0.15206692600067487,0.05591396718276188,0.23332287876887048,0.04454001212488633,null,0.25341382181515404,0.08490863264020164,-0.07730923694779117,0.06871305912971566,0.2755311355311355,0.1167653653486672,0.8113268261289285,-0.08324971193774842,0.020453908657887362,0.01888494602654589,0.10740165631469979,0.16904204395237515,-12.367619047619048,-0.0020959966464053656,null,0.014182103181020863,0.05804268610098907,0.03866945245912513,0.15421972841559436,-14.5982921087173,0.07858910891089109,-0.044309701492537316,-87.76315789473684,0.16094541361845807,0.05509201020494108,0.0064704489860332995,0.04507693854973348,0.06667392587583314,0.9195305951383068,0.24204293116210215,0.8348301444748145,0.07754354937734241,0.19085615877788675,0.08269758925846811,-0.11367225461613217,0.3118038942129879,-0.23404473890801172,-0.10742121314808539,-1.4609719150483231,0.39188511540616044,-40.03861788617886,0.12265455263677662,0.19530188312948943,-19.051538461538463,-0.06814060538429348,0.11823250285369281,0.023481518416610815,-1.1414893617021276,0.034892647532255266,0.1812837720793263,null,0.16611740878095343,0.20671081677704195,null,0.003115264797507788,0.05791044776119403,-0.459320354500685,0.08561470820112531,null,-1.0813780589228559,0.029199951585572502,0.2727705174346569,0.5062746266679912,0.19256188149354656,0.8741048698741781,0.11533698920926941,null,null,0.06791375423264073,-12.32512315270936,0.01245753114382786,null,-6.942418426103647,-0.1153156553741625,0.022072678331090174,0.14463665225922956,0.020153044634405416,-0.00847457627118644,-226.79434504086592,null,-0.055740134330855465,0.28091773922775604,0.06479239948983322,-3.54438075386486,null,0.07467532467532467,null,0.07296860540600268,0.3456977385548814,0.05311973018549747,0.32152815862447187,-0.018877604127942423,0.943684377982819,-0.16961217880217666,0.32861246402910366,-0.5919905072678731,0.012799686309657181,-10.515505436971406,0.08823403435130851,0.9237016161499971,0.7915562002901305,null,-0.0041841004184100415,0.15180968193469027,-0.2818254910218615,-5.7450378071833645,0.14242684633662078,0.9357724580454096,-0.9299363057324841,-0.003066471046961947,0.07450653322212955,0.012836513921591228,0.02841648590021692,0.17278764507435626,0.027630654696288396,0.1071803327836906,0.3036489677763388,-0.9820217013251035,0.22158575930982535,0.25553676853717083,0.450050454086781,0.05177313786706853,0.9178231939163498,-0.2886119688632014,0.5076939893425613,0.21694079904792088,0.036497080233581315,0.2199043244835555,0.01668011837503363,-0.3341849977428162,-0.008168028004667444,0.1422543211880224,0.04343683453287353,-0.8180601239195288,0.11704957678355501,0.16497108980458172,0.004820919870468214,-0.2124518754812452,0.11836115326251896,0.08589550161859702,null,-0.10148913971355401,0.9077990377084033,0.16731517509727625,0.015597560853233074,0.18651356350184956,0.13736107153035051,0.012624870823286255,-1.3,0.055315508021390375,0.04363012334896949,0.8901082152110958,0.1270879192023825,0.05270376175548589,-0.07067490673399404,0.18446359435493942,0.1641097923541135,0.22481442205726404,0.2825100682540463,0.6387979919716091,0.8054046973712051,0.08402961864782332,-110.41459256333665,-1.5292278837136606,0.09956244907812548,0.16943425130035594,0.020443654351522646,0.13956633839130986,-7.0550619999999995,0.37679769186909573,0.6627368090317697,0.10413573680150004,-0.5299211707464263,-0.05502798590933265,0.4097345132743363,null,0.2675836601494289,0.2935898686242986,null,0.1012629308166982,0.9295599440211476,0.28992638128051956,-0.5680254494638977,0.451432817472359,0.07586184548956389,null,0.54720621048717,0.04511486839509438,0.3872885230909922,null,-0.06434847172379655,null,0.19774501300954034,-19.662531017369727,-0.09410595520220166,-1.0330465949820788,0.1721165279429251,0.08306466330068739,-0.14066985645933014,0.11794293643222617,0.013107767805256021,0.12228141648386086,-685.9142857142857,0.4657886328444574,0.14429168351529856,-1.0425281889146918,-0.37665985699693566,-2.3906392787087536,-35.67076167076167,0.04687088483439438,0.07187336356218768,-0.07101490843183801,0.11508751530166558,0.08358909550460372,0.549026741859196,0.2989839204912734,0.144886349716548,null,0.6423239436619719,0.03561222679884117,0.19410287405431317,0.05217732971590434,0.17796927688272762,-7.150818383379446,-1.5461297888975762,0.17346938775510204,0.03909428621970635,-0.7535566360525842,0.10122304434699078,0.0651969981238274,0.025995983107234912,0.39100785028942986,-0.10063896219393131,0.10273972602739725,0.003149497035237645,0.938367920112342,-0.9,0.8068892125014002,null,null,0.20778304147411897,0.8679140328697851,0.2564695695200396,0.9348186213191791,0.9616456106252025,0.9150643451930356,0.2993494683827644,0.1471979007684687,-0.2686466751446035,0.35715013240985943,-0.11080680977054035,0.015427226970843137,0.36784938450398263,-52.0764802631579,0.22257977777585025,0.09515247664375111,0.24122953113133386,-0.3453810660302307,0.10319258157367915,-0.26603887937165216,0.16561013989990508,null,0.12744019796535605,-0.06283259888696056,-0.03549417487309308,0.20657683273581406,0.07006132181546974,0.2170044250026794,-1.020922746781116,-10.40983606557377,-1.3888053570598173,0.06138632469982724,0.10800890294772275,0.17151138787097067,-0.3364431430593989,-0.041062111357301125,0.050571527537235886,-2.2238498040024757,0.0015848568048393936,-0.00012856775520699409,0.2899868156269516,0.3078648443979662,0.480959742409967,0.053487943428791665,0.16710426129650538,0.051881067961165046,0.0066429155789168165,0.7464372437890672,-0.16884163158658733,-1.6075671934479179,0.6340375168370177,0.18107312469869014,0.20927973066863995,null,-2.2081977878985035,0.6773128594095933,0.9315141787051899,0.05711801922179113,0.11668413047366664,0.17572122915013058,-1.0425598661507895,0.16498306532846752,-0.2724771651810278,-1.798272706474491,-2083.6204702586147,0.13922336809356456,-0.022450728363324766,0.4120020299416392,0.10229047371160854,-0.6263166029370492,0.21437908496732025,0.46528269375346404,-0.09105504132559016,0.2337914615292311,0.05661063153112222,0.2915270755923738,0.12193952347678354,0.7607778651605062,0.027037220843672456,-1.7501426077186648,0.8522846792100035,-5.909625338975634,0.25357873210633947,0.14330343951489682,0.012640772236267524,0.3043367993913264,0.048461295895752744,0.07884031243219787,0.2102257596828121,-0.6867854069338579,-1.0825658939345824,null,null,0.7072811100474257,0.07511408013503655,0.22531263970614887,0.35299923398739025,-0.2119620848347661,-0.024002184629978298,0.47455295735900965,0.04731977818853974,-0.03710033468632059,0.03664980326025857,0.888126271546424,0.04482244847280854,0.4374460455541537,0.11458333333333333,0.3115892129310826,-24.82702702702703,0.15477530840023498,null,0.04472970088727628,0.9270800627943485,0.1535454847155131,0.42018509542108706,0.3077804097144493,0.13687077953931095,-0.2502544488370349,-1.1993026408916436,0.11831100836336439,0.036556603773584904,0.09532010948161904,-1.185593220338983,0.33749057767422735,0.8682111466747955,0.5152663718677616,-20.539664804469275,0.5618758141554494,-12.079831932773109,0.1242152534401408,-33.04830287206266,0.7444465501046421,0.6317829457364341,0.16528028835952546,0.5443597931156965,0.2542146511100471,0.3959124650535043,0.004440078500066286,-3.327753911411377,0.13530435775234725,0.16728971962616823,0.14274879796031417,-7.521098031505739,0.9635359576068395,0.07397657677017298,-0.012688275711033047,null,0.27501080860641036,0.6303316983250876,-5.323522752999773,0.02438815187557182,1.0776996138047736,0.23228434820349467,-1.2506762792904356,0.45924625955560844,0.07343234323432343,0.07154807487171426,-0.20077625802952492,0.20900504472915785,-2.4293388574839367,0.03680611423974256,0.12459605026929982,0.010957549596140747,0.3476047211293682,null,0.5009804215403926,0.03876335584553771,-43.531847133757964,0.11074429771908763,0.5313396976350228,-0.9095632071767354,0.13930623658525262,0.09700372282935031,0.9309786879940826,-0.09927495817066369,null,0.03706324122951954,0.07726618365468577,0.22750698812019568,-0.10057793496075218,0.29657603222557904,0.05251886780526655,0.05525100565470761,-50.804871678634505,0.4638728323699422,0.9520871575226052,0.14463246959280804,0.744982407453293,null,0.9573909906758633,-0.7067323481116584,0.48368068568821393,-0.33423883973884355,0.08345752608047691,-0.1816779941744246,0.05157736604907361,-0.21519079522283716,0.2654639175257732,0.014328549520474262,0.28953750611816437,0.18290565309666215,0.17658600392413343,-0.3174331585007036,0.12867880622158137,null,-0.2752081938622786,0.11551478015972053,-0.2571064266212077,0.08966653695759462,null,null,0.9224272827687776,0.2285951218678134,0.35950730565989686,0.19802447660587183,-5.675509465814542,0.033022182073672586,0.021219710937294647,0.21433674684448678,0.017320228921834175,0.17175578891133408,0.016092814371257484,0.12111223799864773,0.9253771461210227,0.9496319943247318,0.03137756656309024,0.05396905863289489,0.11999346084682033,-9.497683908679829,0.9457305821170945,-7.080657864257586,null,0.10089982003599281,0.36916548797736914,-0.9337431818596421,0.24149659863945577,0.7359494435538207,0.4168376419094515,0.7350552110119498,0.11801268549323427,null,-0.03600772163813596,0.5141931695989762,0.581037094500034,null,0.1083967730939666,0.6118619264870448,0.027724045266584042,0.03937463810075275,-0.0185767148260006,-1.345566742448847,0.1081511543676517,0.012557077625570776,-1.0758823529411765,0.10188234073997252,0.1491149114911491,0.06700629433930488,-0.032022622383385525,0.3082698702134506,-0.07188498402555911,0.9928353300446324,0.10354298269706125,0.9660751565762005,-3.998862841147656,0.9432929248050406,0.1404459802794749,0.25353301236525266,0.36494544723213834,0.3910769230769231,0.04722500771858917,0.03376144380273262,0.1276145383651302,-1.151215121512151,0.03152100375176825,0.1744047619047619,-0.0437091738022719,-0.045022040640791315,0.02416778724426067,null,-7.0064861012116895,-0.2287778267741504,-0.7219223007063572,-1.4351275521947093,0.874047256097561,0.07647786515861094,-0.03641534343482503,0.300229751661668,-0.5660185212465411,0.09191156141023697,0.10652566749664198,null,-1.9435155896972436,-2.5976065617856663,null,0.22538610038610038,0.6421838498822694,0.11147722115896849,-1.4903346197847913,null,null,0.2133278826326731,-0.22829205569362748,0.10096004955094456,-18.447475516388284,0.9468251869759009,0.16204443288628004,0.9337312772895595,0.1250986582478295,0.3218245602055362,0.07424402499855454,0.11772497932873222,0.03926701570680628,0.10700139055352702,0.007762455806186482,0.06384758081683545,0.2677696570556582,null,0.758985200845666,0.38413701852396354,0.09296897494961129,0.37541444610750735,-0.011475468644746755,-0.021657715509288772,-6.776444111027757,0.9044810603757524,0.9472516771261632,0.18723567858515955,-0.001221534532153429,0.9133036935704515,null,0.43463073266054975,-1.6236751997391163,null,-4.142235123367199,-0.04695607560546169,0.3050799785060764,0.01376597836774828,null,-0.08205466761790167,-0.20199932983357533,0.2503457963542031,0.9386792452830188,0.056246294571017194,0.2312586619629583,0.1948488241881299,-133.1685356135522,0.24290220820189273,0.13653243195990442,0.2881107218913627,0.1968503937007874,0.043604290585862286,-0.005994478480372207,0.11488778617514471,-0.5776431943664552,0.39040428819355455,0.04215990518017242,null,0.2161232368793242,-0.2616609284884103,0.7459947839046199,0.569095745437476,-1.7448617152891408,0.15182776407266202,0.037675097922060675,null,-8.02360860598811,0.8019891500904159,-54.31512605042017,0.030033819797081217,null,0.2800959232613909,0.9523476258473069,null,null,-61.753926701570684,-0.38073554071115034,0.1538829319739849,-0.1425381747999016,-0.3320825904888262,0.22414654129764738,-72.28070175438596,null,-0.015078371774241612,0.946942624578122,0.06023123508900716,0.007622677465459742,-5.450969495588433,0.9324223602484472,0.16134054176455603,-0.03465389666755945,0.9310780333784393,0.9242522209723563,-0.7455543678942765,-7.731481481481482,-0.026005176585645513,0.22833840002838926,0.7680616989905864,0.4636534619409703,0.3802364864864865,-0.03010550737446832,null,0.21754486905490641,-16.939169139465875,-0.014637029423101631,0.9514003944773175,0.9551583700858849,-0.1046741484234542,0.10714921388312074,-0.21519954172236014,0.11744220223798398,0.033591481122942884,-0.2516321581794441,-0.15605228262928586,0.02195904748334517,0.02185479870181511,-0.265346312522591,null,0.13962155963302753,-3.051498847040738,0.30263473652634737,0.17747667703243003,0.9404687639247838,null,0.9818950805075314,0.4057815845824411,0.21549090847209576,0.44452724732184445,-7.535256410256411,0.892412405856762,-1.9164011616432177,0.9241322842193553,0.05611779524823003,0.024940399779937648,0.08010216218246466,null,-0.034326097930338216,-0.18919300059934424,0.10528345545699962,0.0826218278979762,null,-0.473146009646381,0.03884941066337603,0.11792900013756248,-0.018546457834940692,0.22817142280168115,-0.031556175829854025,0.3443153019313117,0.9637906022357897,0.9422175950026028,0.12122718910049227,0.3140630695988941,0.8522979668546045,0.09424265199456107,null,0.0089778529046502,0.9641297423985559,0.20259417319130346,0.1138044855736642,0.9512162523389468,0.08694802657288003,0.4385993209064592,-0.41986005052118114,0.18437409613307282,null,0.01313260730301089,0.08222863806907275,null,0.25824410153519867,0.19579541888923752,-0.38018765154443546,0.6215727660561217,0.04444669545244854,0.11019967620075553,-0.023999076958578516,0.15990140049446477,null,0.18702648224091192,0.13066884012034494,0.9462975316877918,0.9448475159862273,0.21784220719077158,0.33738347124751233,0.14258188824662812,-0.3099837061716065,-4.793312571935778,0.044648351498078685,-0.0006671658411089353,0.18587497695002766,0.1026946847960445,-0.045232588023644306,0.04515225344623711,0.04972430792027013,0.9371689555647182,0.44045130127604354,0.5852643909471819,0.010472926662097327,0.9256020278833967,0.009841809232132933,0.008815272318921954,0.9156109995365364,-0.1286164868969277,0.9359269887566448,0.3470592260246523,-0.06915864715165393,0.1843709966692288,0.8840272052761747,-8.300240467193404,0.04532214723800537,-0.05520348635321897,0.23415643849350734,0.13683179958722919,0.18254878943183794,-121.6923076923077,null,null,0.3105627191376058,-0.7985762540644632,0.5139572352722716,-0.14174861194728744,0.09361062633313942,-0.41437845659538797,0.15557694904110875,1.6364361702127659,-0.5680092187651853,-0.0518147553046116,0.10481009516395616,-3.3342347214710655,0.18738874758193538,0.1712230215827338,0.8765666910509632,0.19236485957912852,0.18584901443704466,0.2040210838106686,0.017965468968735417,0.24155905119090113,0.21882460912301235,0.9789312531894729,0.053136470263557334,0.4259448278065299,0.22963846346974642,0.24546207928997246,0.13637696536060268,0.10979929161747344,-5.941471236720786,-0.08825394811949007,-0.9711900150065778,0.07239521859503141,-30.099378881987576,0.05050334185568523,0.07587582759679046,0.390194075587334,-0.0525103638876094,0.1383492469514212,null,0.796944358418499,0.9298994209082597,0.9049101157413741,0.17287735377103636,0.558234463815664,0.210136115870389,-28.3252503424464,-0.08917835671342686,-0.16963032288254562,-0.036293282061031044,0.20375733649574038,0.1895093062605753,-0.25715183551620036,0.06918486458128402,0.3266661593816921,0.006266468855871217,0.9429065743944637,0.11073898534603666,0.11916435727989767,0.005124591634104158,0.14327830188679244,-0.5838190720447657,-0.014040848236098896,0.3242327558835601,null,-1.0709364328081001,0.20244030438205196,0.17751349118695509,0.056874803678223215,-0.006151377373629313,0.270492850275972,0.20532928955766716,0.06575505304277442,0.9501058326824906,0.040984381648831385,null,-0.30041543547584915,-136.6346153846154,0.9128118188423348,0.36391447820706724,-1.0313692242475625,-1.642390289449113,-0.44430947801734316,0.02435024401316536,0.020221860312561023,-0.04308424852161892,-0.015646607219493586,-39.99061662198391,0.512872016239602,0.032752883654601724,0.03234789401628399,-1.528563596491228,-0.007361320427785076,0.17769569317824582,null,-15.387037037037038,0.0726269633777302,0.17293296488018786,-0.5579908896487561,-92.1917808219178,0.05908028760699282,0.1157791306772538,-36.18936450297783,-0.7630405475474438,-0.6176439032240759,0.15467095054982122,0.11636992442679646,0.1553813935778652,-3.425244177310293,-0.12779489848706532,0.09907193668441136,0.6261201837262219,-0.15724468477325795,0.9119467860906217,0.04923342445645714,-0.0072719888826138545,0.3373486242457957,0.4436416184971098,-0.2724080092252857,-0.19136683605634722,0.11225389362327358,null,-5.939374952532847,0.5041994373370022,0.07443391082241971,0.4089246525237747,0.87090389267649,0.6192580959612236,-2.894953640042554,0.27518704177891956,-0.07291344747306179,0.007035802944417156,0.037704205911025954,0.14155096512021673,0.09838046356912294,null,-1.0620851063829788,-0.16951157801709085,0.018740926488055958,-0.13807531380753138,-0.6139154160982264,-0.5691758963769477,0.1283666407134348,-0.009738829774233725,0.0446588947980136,null,-0.17998776741210465,null,-1.5848247764234467,0.21259541984732824,0.8760451603760215,-0.035175610799043716,0.9792048929663608,0.3130434782608696,-0.2879989580637577,0.8546713822575892,0.4740256782346702,0.05421771660342309,null,0.034534895920118,-0.10010062987526107,0.11200414830178895,0.11021440292685551,-2.577899024627228,-0.12300898807905555,-0.024367937251011454,0.9060324300202557,0.05519012345679012,-0.13470018014926655,-0.3301259429533461,-0.33049180327868855,null,-8.690811715666715,0.3973113349642317,0.3884572308553829,0.6373793775149148,0.08090347076863165,-0.2504022129662014,-0.4947839046199702,null,0.70764078252113,0.1608891445432442,-83.96981627296589,-0.0666516041572526,0.0015616866215512754,0.03454187861688325,0.35033329309674216,0.09378407851690294,0.1103202846975089,1.006060606060606,0.03468960706812369,0.06534602521224595,0.09502787328175405,0.30422909653089825,-0.31870557304683694,0.46370210528472217,null,-1.9153113418481424,0.1296496813819224,0.17909322943698322,-0.39296359789340374,0.2144465847411239,0.12889817465604697,0.22536601134826587,-0.2,0.2899991515117233,-0.4347898990576478,-3.718009367681499,-5.017519569002152,-4.6923076923076925,0.1526857983811626,-0.9805598755832037,0.10936794168996544,0.11753656245807058,-213.18082191780823,0.04013243682455375,-0.030756668481219378,0.17133684920771797,null,0.1900367051623247,0.14693129187268097,0.05846784900063176,0.29356404583429646,-0.019080819011971544,0.2792026560639834,-1692.0,0.05620553359683794,0.12041423482149625,-0.23991007386789423,-21.257575757575758,null,-0.22132857940915515,-0.014322916666666666,0.9197455841840868,-0.4148954116059379,null,0.04733190979088652,0.6526291690382237,0.10938577295482478,0.0928523236893281,0.34000639181847236,0.18306496672931377,-0.14457369513059815,0.18620150717947928,0.1820774966109354,-1.1181592039800996,0.276853829722307,0.10781149754217535,-0.24567937723413072,-0.20692723418231765,null,-3.6461139896373056,0.12541370741321342,0.7048950005131028,0.32498914773549414,0.9400391145879634,0.48820994773671317,-0.06233944047652655,0.1616233383304795,0.144434563509708,0.16822609587285312,0.17272088118115772,-3.442622950819672,0.08293490253769768,null,-0.26567279072154365,0.07537958320516334,0.0971029250584934,0.06647038137726079,-6.810991663010092,-2.038987591652566,-0.14381761772987667,0.9596028497802032,0.24178435997730732,-26.767533490937748,-8.625358352879854,-1.3901408450704225,0.00518000518000518,-0.007256650468413406,0.21479690286021347,0.1644967020361342,0.14397635845518092,-4.974189278623428,-1.1538687623794006,-0.10675221890341459,0.4166019797372198,0.7909654152025153,0.2737436952576907,0.05384929604313608,-85.54763491005995,0.042378449408672796,0.1958181432867371,0.062625250501002,-0.1995263734054199,0.9269332423906557,0.10669462158935383,0.11583904401348169,0.36987536132782145,null,0.0468624245254844,-0.26786396895968345,0.9301284358566926,0.09193777087055091,null,-0.03316886707062488,0.35425747615819486,0.9749011928500639,-1.2956716781213278,0.9158869581821654,0.12783751493428913,0.10317878824754256,0.3320338298377117,0.8945359019264448,0.8505897771952818,null,0.1589551048453393,0.35047032814599677,0.12733281493001555,0.09611251308055643,0.9387453874538746,0.22325971004839254,0.10329509215268622,null,0.2061211742660837,null,-0.01701093560145808,0.03890944337403515,0.013044229440221147,0.06643676424933505,0.11143619282769654,-0.21779118291120936,0.0888572893070322,-16.430839002267575,0.6953411697247707,-0.43688193583261786,-1.1300787647196444,-1.0231743640657527,0.028121415725163648,-0.4069611780455154,0.35262481255583705,0.06458123107971746,0.15987306064880114,null,-6.471692902513118,0.2405381277638217,0.35291421587350086,0.3017337184847504,0.07633234705229434,-0.13186391950167706,0.024872451384463392,-4.586968228325256,-150.5897435897436,null,0.9845982975849875,0.9338971733808146,0.9195053534036585,null,-0.155961869676087,0.05422185897427862,0.9037772330888744,0.9135766208972759,-0.33783762147969065,0.180443311760169,-0.17575924180889002,-0.1919990806648956,-0.26755872338201653,0.07633718164915466,-1.3270648325497707,-9.447476928927577,0.024387673864620506,-1.5567431411260126,0.07540983606557378,0.034764524550509594,0.12430939226519337,-4.868539715574054,-0.003549265011787547,0.9230596175478065,0.26813406890964936,-0.04751518456248769,0.1766770989250238,0.17319723018147087,0.12194456334616226,0.14423650017880557,0.03314024849802967,0.9854582535935296,-0.6988860660543287,-1.2988324438672854,-0.04529557280559584,-0.7408543671268535,-0.11694788850563997,0.18423847718656786,0.05770462686946849,-0.42787809363036206,-2.64594189600979,-11.595833333333333,0.2201509098979139,0.23364751709529294,0.1562551372677955,0.15463748772318617,0.9160125588697017,0.3372406538943829,-0.023749049236358375,0.14849051037466812,0.1771458860313605,-0.7378605031703825,0.260700315576636,0.08253435585318374,0.2163619105610975,-0.2336363828126648,0.11087931822021437,-617.6505565117142,0.1192437773133194,0.14247748412815592,0.12891460517408684,0.2593164387301745,-2.0432344005608787,0.10235713485267664,0.7835501294729726,null,0.33063707467076675,0.011286271459363971,null,null,0.15350877192982457,0.5168883844604688,-0.4147228328679223,0.8861992307420868,0.9105731361370459,-0.000398202400591615,-0.4742433184385802,-0.28748356998722624,-1.290662075500578,0.8707083204454067,0.07760731416869776,0.1746306049012577,-0.6690074167587187,0.23275900449668313,0.2169628717226817,-0.3609116498291039,0.09090048135675949,0.015378856696809651,0.02018511511482376,-0.13454734476918692,0.10109336539011964,null,-9.28519855595668,0.18952151831061215,0.04949269125834025,-0.21466231483806175,-0.44691988796579313,0.020713696300163353,0.2843126602039197,null,0.9374487628148057,0.01655143806486939,0.13620623316660255,0.8208638771469848,0.17382319596386356,0.11903910691838406,0.1032105248853832,-0.35299038059389376,-126.74559823018154,0.01872059776805287,-1.3546032047027592,-15.260853255490236,-0.1705793864247618,0.06719160104986877,0.05638950528651612,-286.4952978056426,0.9105074597565763,0.48971748075153027,0.49515536251252923,0.04918223832292263,-0.4327180264686291,-0.258088000284101,0.07155146840700088,null,-0.08323396136417839,null,-13.085800301053688,0.14625657183681695,-0.23657051699440032,0.012304895184566306,0.009712282515629797,-0.042992349894200664,0.0768361581920904,-0.0485351455409571,0.10242843097041873,-30.827115501812234,0.042063544301417004,-6.999377916018663,0.08459821428571429,0.46683625346557295,0.9328668656014347,0.056045895851721095,-0.28739840669509936,0.17507753030730194,-5.171929706436844,-0.02683129956186407,-10.32728383212634,-0.9042559114640215,null,0.013355921284172727,0.9650554721349632,0.9218679585398828,0.22432370472260432,-0.18605161998901704,0.184842327086626,0.1496786196710667,0.16002198241406876,0.12265555512587493,-0.10107343022703524,-0.1413239857625613,0.20986177729004574,-40.774525513806495,-0.021065079269637025,0.3131950464396285,-0.7349520421113954,0.9690073325687186,0.10280982805989529,0.0006013812369054086,0.11396306560646481,0.11238818819889976,-0.5999142629677261,0.07091525423728813,0.2604369504760918,-7.811203961621789,0.5550426326796918,0.07992645231097659,0.08047899594177466,-0.5352990732940185,-0.03187566421717865,-0.6897423120728929,-0.03899993489159451,0.04449438202247191,0.029126381066558567,null,0.8295454545454546,-553.16,0.4479483172729114,0.9231916480238628,0.3454637779282329,0.20029473167137418,0.16202075874585248,-0.2104843805808171,0.06003262793952708,0.06672116012255147,null,0.13654738384999718,null,-0.08040961709706144,0.24494393189008332,0.25731936017650303,0.12596842762434224,-3.3889930354363362,0.09016924564796905,0.019940814932847713,0.26431932500405647,0.5149830836152731,null,0.07262754602558065,0.06873879258816497,0.10405490989991285,0.1486228363276353,0.9640657778980849,-105.375,0.9332351497299951,0.17182283552192298,null,0.18740693469474579,0.0856872625830523,0.1049121357635841,0.001480512326125878,-5.380656469088591,0.029329422191509476,0.16718955571298452,0.030601991264832505,-0.23401727006258416,0.34372759856630825,null,0.03826539343532875,null,-0.341951953917654,0.07860536640982882,-0.05647987871794002,-0.031105398537089636,0.88571660444733,0.05138664179196245,0.9541046215206901,0.9153600936829094,0.8480785973946664,0.9780461158070266,0.8532406410532468,null,0.9357622243528284,-0.3664092664092664,-0.06852208902674155,null,null,-3.7588757396449703,0.06828894964094519,0.03255813953488372,0.4284692417739628,-5.22731562057399,0.04670126019273536,-0.37074887792622446,0.01125747184102492,0.16927275409352413,-0.08324504731911019,0.31148235391354656,-0.9837593695944647,0.13613691931540342,-0.0010718113612004287,-0.14129158274563255,null,0.2949572175849166,null,-0.0022110765576688757,0.09646272398106026,0.9275796351756058,-313.26994000857013,0.693794942152942,0.1918366825540564,0.07828781238208574,0.042171364458589974,0.28159810213268,0.053476360746920935,-65.55723905723906,0.10524091293322063,0.936717357590908,0.021811431665248664,-0.4760647078243645,0.10414218563238739,0.11749544225812536,0.029668411867364748,null,-0.01811957247828991,0.10102948874541964,null,0.09960906507407567,0.01414476684822109,-0.011064016078642071,0.05323563416607557,-5.715909090909091,0.09544395577458906,-0.5668092386655261,0.1524659790240097,-47.68006993006993,-0.21806384542309692,0.007600754587549306,null,-0.3982046918276771,-0.47487939184250283,0.18843792778328872,0.18240656335460345,0.955851229635949,0.14144815973057492,0.035988020912644025,0.05128205128205128,0.08137044967880086,-0.06111493942934756,0.09916666666666667,0.20065075921908893,-40.41481481481482,null,null,0.12366758710381065,-0.14814814814814814,-0.10516975658138479,1.4523558855580798,0.18042348890476365,-0.21723590150913424,-0.01776871927280444,0.7629162577470658,0.1529324881531171,null,-1045.0756302521008,0.11882741535920727,0.18807863915225878,-0.2500809148775488,null,-0.014866964718638683,0.3050079094055907,0.07462267578189505,-0.13895891014780226,0.1510791366906475,-0.8712145361810647,0.14332766680832978,0.9615305843801202,0.1751439539347409,0.39647233398093895,0.06593366385539964,0.44190350297422337,0.125673174015483,0.9744947609025278,-0.011671754354462202,0.5757713454809833,0.19244964673626488,-0.330408042578356,-0.05820583288896181,0.07191330998248686,null,null,0.9559034661926574,0.13450688962408727,0.06425815503332165,null,0.1455060824376993,0.6507012271475081,0.07654686921081882,-42.67887432536623,0.13834027754994915,0.01356715872386767,0.13651861017160766,-0.40622956461882637,0.004623808235312843,0.05938601572196938,0.09425081804610264,0.24234241087276231,0.02738139230791097,0.05947086563823835,-16.28,-2.5408560311284045,-0.03392597968069666,0.07285546415981199,-0.05341332322308705,-1.2083187180386583,0.35877942235594235,0.12166452840398327,0.05152726475400159,-0.024519206159460655,-0.3306669606531588,0.14970687751121972,0.34913951897268564,-0.19872113441341152,-1.0899969703990162,-0.29215066374313736,-0.5507159123629034,-0.659675781660306,0.5224481964696853,0.08385467194219046,0.07450856055802156,0.12109839231040037,null,0.10068404092939115,-0.6654457435455473,0.025560817667452152,-0.0498046875,0.10226944543155167,-1.0190446896133853,0.37475,0.925989138867339,-0.08831908831908832,0.9468752842718093,0.9382902842321409,0.9435046603825772,-51.940677966101696,0.9547705707180139,-0.009035649745358962,-0.1863145932389362,0.13743373595147995,0.2697283708381875,0.03951804803703784,-0.3185944279515871,-0.06404872093870709,0.028663213467476842,0.09844136629167623,0.12930477088920217,0.3309074267472327,0.04869650762420069,0.3073893506233415,0.07023936580743798,0.3265527039826801,0.17484388440184545,-0.2841708911592238,0.06543689320388349,0.02468405652742327,0.007700770077007701,0.12263506720639172,0.18658417384194814,0.9043368065333709,0.1618145988663836,0.9682718043557991,-0.47325288034973934,0.9295463283352556,null,0.06587260628523618,0.016984258492129246,0.08878155654035752,0.543586583325997,0.1457134400999704,0.3979901100654012,0.9430453816479563,0.08025591725783995,0.2006144263950846,-0.1357149089458661,0.142736009044658,-0.1407201900404099,-0.14689798467794363,0.04395427850036219,-268.57894736842104,0.2580295922049802,0.028951664770197397,-0.010315208221489378,null,0.8980392156862745,0.20089020771513352,-0.3936125478323031,0.016993315962388126,-0.11534677102158981,0.20883753223566753,0.03894839337877313,0.11103548931085853,0.14275964054146287,0.01168135263850837,0.43221246519597345,0.019353049541429787,0.12032355915065723,0.3766011319630623,-0.37780519780982497,-0.010925259231098643,-1.0371114890985,0.03657459093306302,0.9075056861258529,0.030863939025922358,0.5701718213058419,0.13911290322580644,0.2886058451816746,-3.071312928841261,-0.0010198878123406426,null,0.9390878027039073,-66.19364161849711,0.9026219629463427,0.036556603773584904,-0.24515467256923826,null,0.5524198401896243,-0.1473018225735617,0.07818950115549485,-0.055399053147165596,0.2527647881022051,0.4440862211569299,null,-0.10600262888856433,-0.2613511332795423,-2.2727901295654758,null,-0.036017304403232836,0.02801651047159195,0.23427306677134932,null,-125.5,0.09759852216748768,0.17382259343556578,0.12931854199683043,0.0907001417095392,0.11056309083436087,null,5.543380344089197,-0.14786186261064704,null,0.287370729142207,null,-0.3827708703374778,0.008700374079884155,-2.796657381615599,-0.09858198934647563,null,-4.189255414081871,-0.008546463676533283,0.12042756724308205,null,0.9231985199151336,0.15739651025942794,-0.24596988565198194,0.10454923331090625,0.13212435233160622,-0.06743135653771563,0.053750582388569654,0.1879958720512289,0.1758114374034003,-0.0021901219770147358,null,-0.052053879377311006,0.10072416063199473,0.11906159019612268,-0.08361856204105263,-1.1579544331098357,-1.3449817147501015,-42.62149532710281,-115.484375,-0.023413424197629845,0.10722610722610723,-0.2104989725242251,-0.33708994329193886,0.0022853891127366847,0.24087536735880355,0.3605788556880611,0.6706450696220517,0.018722309561240533,0.2515234768560231,0.06502993354204427,0.5037337218832529,-0.03990133038838258,0.06334231805929919,0.058544637648781817,0.17466230926727133,-1.059823677581864,null,0.21482983060308095,-63.7636193239723,-0.033401590379083704,0.018933707168825833,0.06847629084069612,0.13328313253012047,-447.44444444444446,null,-3.325061579918944,0.09975470155355683,-1.971965317919075,0.14420062695924765,0.03015865367240486,null,-27.200842696629213,-14.511551155115512,0.2235046908757288,0.010026901442895574,-0.11327649208282582,0.12890625,0.989936871054441,0.907854117309211,0.9057971014492754,0.8925979680696662,0.2794717766152097,-30.3247971346132,-0.00981685431174648,-0.3703062989722194,-0.23438385670558892,0.9472756045290776,0.06936936936936937,0.06760414149657383,0.23477327137022955,-0.050773808652521124,0.07395571787263182,0.15350902019132023,-0.4177211565989121,-0.04735990726148624,0.19183232294750693,0.1609991198856938,0.1790331788100405,0.08959123542945152,0.20457457962797562,0.2860588696453078,0.07618445648811845,0.8824852890273451,0.12119360444621839,0.3756476683937824,0.2599124636489146,-0.02550791514452349,0.059077482390365824,0.3455649589766781,-0.06003531489111242,0.6478543245247014,0.26706613987132505,0.32254320089235117,-4.337209302325581,-0.6791044776119403,-0.21430797649545036,-1677.8058223815212,-0.05161478883530615,0.3267114953570285,0.2621012714699978,0.17704396260194946,0.1895582329317269,0.1575409960330495,0.10195530726256984,0.04263878636474947,0.11910726687477052,0.03756466670328486,0.05586454853921082,0.939261842487649,-0.3313829787234043,0.03383421714631051,0.04301439513781774,-0.5676635836329675,0.056218057921635436,0.4577246607839209,0.08856824839318282,-0.21441078971288027,-0.052899961074347995,0.09804880700038046,0.9290943849814209,0.9474955043183871,0.22636088865659632,0.9599737532808399,0.17104292610035707,0.1345501240770379,0.30731205531902733,0.2961234279787372,0.060518986782193536,0.8388067965532754,0.908153389538885,0.5928387775375445,null,0.30692848675003787,-0.2620705142600494,0.18211165970375998,-0.27653263019116675,0.024646996305481048,0.2319248001405605,0.05108037982400671,0.04960401404321331,0.0898781115097374,0.2112788943575053,null,0.2352858744394619,0.3521695257315843,-0.05724710397521214,-0.7638076728144956,0.18426073131955484,null,-7.904575163398693,0.13697429906542055,1.7915436400141727,-1.2363383545770568,-2.895463732315293,null,-1.4179870564606114,0.1789374530342105,null,-0.7631725899008039,-0.16316477540134916,-0.927920463960232,0.1872197007145104,-4.849440488301119,0.2084477117239621,null,0.07116336633663366,0.6068166554734721,-1.3234755211738216,0.14154411764705882,0.0017172295363480253,-0.5712289475619622,-0.0850952412122799,-0.7236305864474684,0.10703812316715543,-0.06312163275239507,-3.8551231514286592,0.06967760061810775,0.053535819916757,0.16271230019855157,-0.25811218396388735,-3.6996387885523756,-3.0422450211225107,0.44123766695751393,-0.12774159633188284,-33.359223300970875,0.33863080684596575,0.03806390977443609,0.017839444995044598,0.15764956785273318,-0.09877384196185286,0.13601951647517757,0.21540930979133227,-0.2271345356672757,0.07595434701681952,0.14788468738300262,-0.0918128954144711,0.975328947368421,null,0.10459567480609978,0.17420841869994413,0.021701388888888888,null,-0.3019347505465348,0.3533138401559454,0.0022520685498853576,-0.2538117361774268,-0.32372315664661194,-0.01636823666796419,0.18824771287825476,-40.31738800303721,null],\"yaxis\":\"y\",\"type\":\"scattergl\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"x\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"y\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('1a470c19-9168-4574-81a1-11527ef35319');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig1 =px.scatter(x=mergedDF['Sector NAICS\\nlevel 1'], y=mergedDF['operating_profit_margin'], template='plotly_dark')\n",
        "\n",
        "fig1.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 144,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 610
        },
        "id": "dXg28hqunAE8",
        "outputId": "ca4b1455-f2d4-42b8-8692-3274bc6a113a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],\n",
              " <a list of 19 Text major ticklabel objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 144
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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vC8vXryQ4g9CQ0NJT09nwYIFwL+3pmQyGba2tmRkZODo6Fgrg6n62OzYsYOQkBAuX76MnZ0dPj4+PH36lEuXLlFYWEjTpk3rPZ5GJpMRERHBvHnzyM3NZc2aNbRp06bWQif33FQfj4ZGcnIy3333HT/99BMeHh4kJycTGRlJ165dpUylfv360a5duzqPr17gU77d5Orqyr59+zh9+jS2trYkJSVx6NAhPvvsM0nM701SXcPo0KFDDB06lKysLB48eIAQgvfee4+CggLKy8uZOHFinfWjnj9/LunXPH78GGtrawICApg2bRotWrRg2rRppKamsmPHDlq0aFGnnlL116qqqjg7OwMQHR1N48aNsbOzIyUlhb179xIUFPSXVZJX8PdBYdgoaJBUFzbLyspCWVmZli1bYmNjwxdffIG7uzu2trZSMKx8EW6oC58cfX194uLipCrbhoaGmJubY2dnx8GDB+nYsaOUGSNny5YtqKurS9sXDx8+JCUlhaCgIF68eIGamhrFxcUcP34cb29vHj58iLu7e51xGwC//vorx48fZ8KECcydO5fMzEwsLCzo0qULDx48IDk5GX9//zoF1t4k165dY9GiRaxevZrMzEzu3LnDkCFDaqS3N/TrKSc/P587d+5QWFhIZGQkp06dYv/+/dy5c4e+ffvi5eWFtbX1a8tVRERE8M0333D+/HkSEhKwtLTko48+4uzZs5JOzbhx415pHP23CCEoKChg5cqVfP7557Rv3x5fX18yMzM5fPgw2traDB48mLZt29bS2wG4desWO3fuxNjYmMmTJ9OoUSN8fX0liYbBgwejr69PbGwsgYGB9OrVq0b/5W2QyWRERkaybds2IiIisLKyolOnTjx58oQff/yRtLQ0IiMjGT9+/N8qQUDBX4fCsFHQIJHf6L/66ivS0tJYv349jRo1ol+/flhZWTF58mRcXV1p2rTp227qa5HfqJ89e0ZBQYFUZTwhIYG4uDgsLS0xMDDAwsKCbt261RIbO3PmDKqqqrRv3156YpXJZKxduxYLCwvs7e1RVlbmyy+/pKSkBH9//1pGzf3795HJZKirq5OWlsaOHTtYsWIF4eHhFBYWoq2tTXh4OHZ2dgQFBdG6deu/5Ck4Pj4eZ2dnKisr2c/vLRIAACAASURBVL59O8uWLcPU1JRz586hp6eHhoZGvbfhzyK/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gOu12Pz666+sWLGC9957j0AggN/vx2QykZ+fT2VlJXa7HcMwcDgcJCUlUVRUxNixYwciu4iIiMh1ev0dm88++4zVq1czevRoHn74YcaOHcszzzxDcnIyn3/+OaWlpcyaNYumpibKy8vJzc0dqOwiIiIi1+m12Fy8eJEdO3Ywd+5c3G43J0+eZM+ePTz99NPk5+cTHx9Pe3s73d3dpKenD1RuERERkRv0ehQ1ZswYAoEAO3fuJC8vj5dffpnOzk7OnTvHkiVLeP3117nrrrtUakRERCTs/nFic+3bujds2MBDDz1EbW0tVquVpUuXcvr0aVwuF1OnTh3IzCIiIiI39Y/XvYNXu81mM3FxcVRUVFBeXs4TTzxBIBAgJSWFlJSUAQkqIiIi0ptbuu5tsVhYvHgxiYmJTJo0KdSZRERERPrkll+Cec899zBjxgwaGxvxer2YTH1+f6aIiIhISPyrXx5etGgRHR0djBgxIlR5RERERPqs1+veIiIiIkOFzpNERERk2FCxERERkWFDxUZERESGDRUbERERGTZUbERERGTYULERERGRYUPFRkRERIaNvwHDU/rJbALYYgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(mergedDF['Sector NAICS\\nlevel 1'], mergedDF['operating_profit_margin'])\n",
        "\n",
        "\n",
        "plt.xticks(rotation = 45, ha = \"right\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aKzoiRW_XGXK"
      },
      "source": [
        "**Ploteo Genneral de todas las industrias con su debido Operating Profit Margin**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 145,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "H98YVEZK47rX",
        "outputId": "bb2912c2-06b2-4021-87d1-ecdc15ef221c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "([0,\n",
              "  1,\n",
              "  2,\n",
              "  3,\n",
              "  4,\n",
              "  5,\n",
              "  6,\n",
              "  7,\n",
              "  8,\n",
              "  9,\n",
              "  10,\n",
              "  11,\n",
              "  12,\n",
              "  13,\n",
              "  14,\n",
              "  15,\n",
              "  16,\n",
              "  17,\n",
              "  18,\n",
              "  19,\n",
              "  20,\n",
              "  21,\n",
              "  22,\n",
              "  23,\n",
              "  24,\n",
              "  25,\n",
              "  26,\n",
              "  27,\n",
              "  28,\n",
              "  29,\n",
              "  30,\n",
              "  31,\n",
              "  32,\n",
              "  33,\n",
              "  34,\n",
              "  35,\n",
              "  36,\n",
              "  37,\n",
              "  38,\n",
              "  39,\n",
              "  40,\n",
              "  41,\n",
              "  42,\n",
              "  43,\n",
              "  44,\n",
              "  45,\n",
              "  46,\n",
              "  47,\n",
              "  48,\n",
              "  49,\n",
              "  50,\n",
              "  51,\n",
              "  52,\n",
              "  53,\n",
              "  54,\n",
              "  55,\n",
              "  56,\n",
              "  57,\n",
              "  58,\n",
              "  59,\n",
              "  60,\n",
              "  61,\n",
              "  62,\n",
              "  63,\n",
              "  64,\n",
              "  65,\n",
              "  66,\n",
              "  67,\n",
              "  68,\n",
              "  69,\n",
              "  70,\n",
              "  71,\n",
              "  72,\n",
              "  73,\n",
              "  74,\n",
              "  75,\n",
              "  76,\n",
              "  77,\n",
              "  78,\n",
              "  79,\n",
              "  80,\n",
              "  81,\n",
              "  82,\n",
              "  83,\n",
              "  84,\n",
              "  85,\n",
              "  86,\n",
              "  87,\n",
              "  88,\n",
              "  89,\n",
              "  90,\n",
              "  91,\n",
              "  92,\n",
              "  93,\n",
              "  94,\n",
              "  95,\n",
              "  96,\n",
              "  97,\n",
              "  98,\n",
              "  99,\n",
              "  100,\n",
              "  101,\n",
              "  102,\n",
              "  103,\n",
              "  104,\n",
              "  105,\n",
              "  106,\n",
              "  107,\n",
              "  108,\n",
              "  109,\n",
              "  110,\n",
              "  111,\n",
              "  112,\n",
              "  113,\n",
              "  114,\n",
              "  115,\n",
              "  116,\n",
              "  117,\n",
              "  118,\n",
              "  119,\n",
              "  120,\n",
              "  121,\n",
              "  122,\n",
              "  123,\n",
              "  124,\n",
              "  125,\n",
              "  126,\n",
              "  127,\n",
              "  128,\n",
              "  129,\n",
              "  130,\n",
              "  131,\n",
              "  132,\n",
              "  133,\n",
              "  134,\n",
              "  135,\n",
              "  136,\n",
              "  137,\n",
              "  138,\n",
              "  139,\n",
              "  140,\n",
              "  141,\n",
              "  142,\n",
              "  143,\n",
              "  144,\n",
              "  145,\n",
              "  146,\n",
              "  147,\n",
              "  148,\n",
              "  149,\n",
              "  150,\n",
              "  151,\n",
              "  152,\n",
              "  153,\n",
              "  154,\n",
              "  155,\n",
              "  156,\n",
              "  157,\n",
              "  158,\n",
              "  159,\n",
              "  160,\n",
              "  161,\n",
              "  162,\n",
              "  163,\n",
              "  164,\n",
              "  165,\n",
              "  166,\n",
              "  167,\n",
              "  168,\n",
              "  169,\n",
              "  170,\n",
              "  171,\n",
              "  172,\n",
              "  173,\n",
              "  174,\n",
              "  175,\n",
              "  176,\n",
              "  177,\n",
              "  178,\n",
              "  179,\n",
              "  180,\n",
              "  181,\n",
              "  182,\n",
              "  183,\n",
              "  184,\n",
              "  185,\n",
              "  186,\n",
              "  187,\n",
              "  188,\n",
              "  189,\n",
              "  190,\n",
              "  191,\n",
              "  192,\n",
              "  193,\n",
              "  194,\n",
              "  195,\n",
              "  196,\n",
              "  197,\n",
              "  198,\n",
              "  199,\n",
              "  200,\n",
              "  201,\n",
              "  202,\n",
              "  203,\n",
              "  204,\n",
              "  205,\n",
              "  206,\n",
              "  207,\n",
              "  208,\n",
              "  209,\n",
              "  210,\n",
              "  211,\n",
              "  212,\n",
              "  213,\n",
              "  214,\n",
              "  215,\n",
              "  216,\n",
              "  217,\n",
              "  218,\n",
              "  219,\n",
              "  220,\n",
              "  221,\n",
              "  222,\n",
              "  223,\n",
              "  224,\n",
              "  225,\n",
              "  226,\n",
              "  227,\n",
              "  228,\n",
              "  229,\n",
              "  230,\n",
              "  231,\n",
              "  232,\n",
              "  233,\n",
              "  234,\n",
              "  235,\n",
              "  236,\n",
              "  237,\n",
              "  238,\n",
              "  239,\n",
              "  240,\n",
              "  241,\n",
              "  242,\n",
              "  243,\n",
              "  244,\n",
              "  245,\n",
              "  246,\n",
              "  247,\n",
              "  248,\n",
              "  249,\n",
              "  250,\n",
              "  251,\n",
              "  252,\n",
              "  253,\n",
              "  254,\n",
              "  255,\n",
              "  256,\n",
              "  257,\n",
              "  258,\n",
              "  259,\n",
              "  260,\n",
              "  261,\n",
              "  262,\n",
              "  263,\n",
              "  264,\n",
              "  265,\n",
              "  266,\n",
              "  267,\n",
              "  268,\n",
              "  269,\n",
              "  270,\n",
              "  271,\n",
              "  272,\n",
              "  273,\n",
              "  274,\n",
              "  275,\n",
              "  276,\n",
              "  277,\n",
              "  278,\n",
              "  279,\n",
              "  280,\n",
              "  281,\n",
              "  282,\n",
              "  283,\n",
              "  284,\n",
              "  285,\n",
              "  286,\n",
              "  287,\n",
              "  288,\n",
              "  289,\n",
              "  290,\n",
              "  291,\n",
              "  292,\n",
              "  293,\n",
              "  294,\n",
              "  295,\n",
              "  296,\n",
              "  297,\n",
              "  298,\n",
              "  299,\n",
              "  300,\n",
              "  301,\n",
              "  302,\n",
              "  303,\n",
              "  304,\n",
              "  305,\n",
              "  306,\n",
              "  307,\n",
              "  308,\n",
              "  309,\n",
              "  310,\n",
              "  311,\n",
              "  312,\n",
              "  313,\n",
              "  314,\n",
              "  315,\n",
              "  316,\n",
              "  317,\n",
              "  318,\n",
              "  319,\n",
              "  320,\n",
              "  321,\n",
              "  322,\n",
              "  323,\n",
              "  324,\n",
              "  325,\n",
              "  326,\n",
              "  327,\n",
              "  328,\n",
              "  329,\n",
              "  330,\n",
              "  331,\n",
              "  332,\n",
              "  333,\n",
              "  334,\n",
              "  335,\n",
              "  336,\n",
              "  337,\n",
              "  338,\n",
              "  339,\n",
              "  340,\n",
              "  341,\n",
              "  342,\n",
              "  343,\n",
              "  344,\n",
              "  345,\n",
              "  346,\n",
              "  347,\n",
              "  348,\n",
              "  349,\n",
              "  350,\n",
              "  351,\n",
              "  352,\n",
              "  353,\n",
              "  354,\n",
              "  355,\n",
              "  356,\n",
              "  357,\n",
              "  358,\n",
              "  359,\n",
              "  360,\n",
              "  361,\n",
              "  362,\n",
              "  363,\n",
              "  364,\n",
              "  365,\n",
              "  366,\n",
              "  367,\n",
              "  368,\n",
              "  369,\n",
              "  370,\n",
              "  371,\n",
              "  372,\n",
              "  373,\n",
              "  374,\n",
              "  375,\n",
              "  376,\n",
              "  377,\n",
              "  378,\n",
              "  379,\n",
              "  380,\n",
              "  381,\n",
              "  382,\n",
              "  383,\n",
              "  384,\n",
              "  385,\n",
              "  386,\n",
              "  387,\n",
              "  388,\n",
              "  389,\n",
              "  390,\n",
              "  391,\n",
              "  392,\n",
              "  393,\n",
              "  394,\n",
              "  395,\n",
              "  396,\n",
              "  397,\n",
              "  398,\n",
              "  399,\n",
              "  400,\n",
              "  401,\n",
              "  402,\n",
              "  403,\n",
              "  404,\n",
              "  405,\n",
              "  406,\n",
              "  407,\n",
              "  408,\n",
              "  409,\n",
              "  410,\n",
              "  411,\n",
              "  412,\n",
              "  413,\n",
              "  414,\n",
              "  415,\n",
              "  416,\n",
              "  417,\n",
              "  418,\n",
              "  419,\n",
              "  420,\n",
              "  421,\n",
              "  422,\n",
              "  423,\n",
              "  424,\n",
              "  425,\n",
              "  426,\n",
              "  427,\n",
              "  428,\n",
              "  429,\n",
              "  430,\n",
              "  431,\n",
              "  432,\n",
              "  433,\n",
              "  434,\n",
              "  435,\n",
              "  436,\n",
              "  437,\n",
              "  438,\n",
              "  439,\n",
              "  440,\n",
              "  441,\n",
              "  442,\n",
              "  443,\n",
              "  444,\n",
              "  445,\n",
              "  446,\n",
              "  447,\n",
              "  448,\n",
              "  449,\n",
              "  450,\n",
              "  451,\n",
              "  452,\n",
              "  453,\n",
              "  454,\n",
              "  455,\n",
              "  456,\n",
              "  457,\n",
              "  458,\n",
              "  459,\n",
              "  460,\n",
              "  461,\n",
              "  462,\n",
              "  463,\n",
              "  464,\n",
              "  465,\n",
              "  466,\n",
              "  467,\n",
              "  468,\n",
              "  469,\n",
              "  470,\n",
              "  471,\n",
              "  472,\n",
              "  473,\n",
              "  474,\n",
              "  475,\n",
              "  476,\n",
              "  477,\n",
              "  478,\n",
              "  479,\n",
              "  480,\n",
              "  481,\n",
              "  482,\n",
              "  483,\n",
              "  484,\n",
              "  485,\n",
              "  486,\n",
              "  487,\n",
              "  488,\n",
              "  489,\n",
              "  490,\n",
              "  491,\n",
              "  492,\n",
              "  493,\n",
              "  494,\n",
              "  495,\n",
              "  496,\n",
              "  497,\n",
              "  498,\n",
              "  499,\n",
              "  500,\n",
              "  501,\n",
              "  502,\n",
              "  503,\n",
              "  504,\n",
              "  505,\n",
              "  506,\n",
              "  507,\n",
              "  508,\n",
              "  509,\n",
              "  510,\n",
              "  511,\n",
              "  512,\n",
              "  513,\n",
              "  514,\n",
              "  515,\n",
              "  516,\n",
              "  517,\n",
              "  518,\n",
              "  519,\n",
              "  520,\n",
              "  521,\n",
              "  522,\n",
              "  523,\n",
              "  524,\n",
              "  525,\n",
              "  526,\n",
              "  527,\n",
              "  528,\n",
              "  529,\n",
              "  530,\n",
              "  531,\n",
              "  532,\n",
              "  533,\n",
              "  534,\n",
              "  535,\n",
              "  536,\n",
              "  537,\n",
              "  538,\n",
              "  539,\n",
              "  540,\n",
              "  541,\n",
              "  542,\n",
              "  543,\n",
              "  544,\n",
              "  545,\n",
              "  546,\n",
              "  547,\n",
              "  548,\n",
              "  549,\n",
              "  550,\n",
              "  551,\n",
              "  552,\n",
              "  553,\n",
              "  554,\n",
              "  555,\n",
              "  556,\n",
              "  557,\n",
              "  558,\n",
              "  559,\n",
              "  560,\n",
              "  561,\n",
              "  562,\n",
              "  563,\n",
              "  564,\n",
              "  565,\n",
              "  566,\n",
              "  567,\n",
              "  568,\n",
              "  569,\n",
              "  570,\n",
              "  571,\n",
              "  572,\n",
              "  573,\n",
              "  574,\n",
              "  575,\n",
              "  576,\n",
              "  577,\n",
              "  578,\n",
              "  579,\n",
              "  580,\n",
              "  581,\n",
              "  582,\n",
              "  583,\n",
              "  584,\n",
              "  585,\n",
              "  586,\n",
              "  587,\n",
              "  588,\n",
              "  589,\n",
              "  590,\n",
              "  591,\n",
              "  592,\n",
              "  593,\n",
              "  594,\n",
              "  595,\n",
              "  596,\n",
              "  597,\n",
              "  598,\n",
              "  599,\n",
              "  600,\n",
              "  601,\n",
              "  602,\n",
              "  603,\n",
              "  604,\n",
              "  605,\n",
              "  606,\n",
              "  607,\n",
              "  608,\n",
              "  609,\n",
              "  610,\n",
              "  611,\n",
              "  612,\n",
              "  613,\n",
              "  614,\n",
              "  615,\n",
              "  616,\n",
              "  617,\n",
              "  618,\n",
              "  619,\n",
              "  620,\n",
              "  621,\n",
              "  622,\n",
              "  623,\n",
              "  624,\n",
              "  625,\n",
              "  626,\n",
              "  627,\n",
              "  628,\n",
              "  629,\n",
              "  630,\n",
              "  631,\n",
              "  632,\n",
              "  633,\n",
              "  634,\n",
              "  635,\n",
              "  636,\n",
              "  637,\n",
              "  638,\n",
              "  639,\n",
              "  640,\n",
              "  641,\n",
              "  642,\n",
              "  643,\n",
              "  644,\n",
              "  645,\n",
              "  646,\n",
              "  647,\n",
              "  648,\n",
              "  649,\n",
              "  650,\n",
              "  651,\n",
              "  652,\n",
              "  653,\n",
              "  654,\n",
              "  655,\n",
              "  656,\n",
              "  657,\n",
              "  658,\n",
              "  659,\n",
              "  660,\n",
              "  661,\n",
              "  662,\n",
              "  663,\n",
              "  664,\n",
              "  665,\n",
              "  666,\n",
              "  667,\n",
              "  668,\n",
              "  669,\n",
              "  670,\n",
              "  671,\n",
              "  672,\n",
              "  673,\n",
              "  674,\n",
              "  675,\n",
              "  676,\n",
              "  677,\n",
              "  678,\n",
              "  679,\n",
              "  680,\n",
              "  681,\n",
              "  682,\n",
              "  683,\n",
              "  684,\n",
              "  685,\n",
              "  686,\n",
              "  687,\n",
              "  688,\n",
              "  689,\n",
              "  690,\n",
              "  691,\n",
              "  692,\n",
              "  693,\n",
              "  694,\n",
              "  695,\n",
              "  696,\n",
              "  697,\n",
              "  698,\n",
              "  699,\n",
              "  700,\n",
              "  701,\n",
              "  702,\n",
              "  703,\n",
              "  704,\n",
              "  705,\n",
              "  706,\n",
              "  707,\n",
              "  708,\n",
              "  709,\n",
              "  710,\n",
              "  711,\n",
              "  712,\n",
              "  713,\n",
              "  714,\n",
              "  715,\n",
              "  716,\n",
              "  717,\n",
              "  718,\n",
              "  719,\n",
              "  720,\n",
              "  721,\n",
              "  722,\n",
              "  723,\n",
              "  724,\n",
              "  725,\n",
              "  726,\n",
              "  727,\n",
              "  728,\n",
              "  729,\n",
              "  730,\n",
              "  731,\n",
              "  732,\n",
              "  733,\n",
              "  734,\n",
              "  735,\n",
              "  736,\n",
              "  737,\n",
              "  738,\n",
              "  739,\n",
              "  740,\n",
              "  741,\n",
              "  742,\n",
              "  743,\n",
              "  744,\n",
              "  745,\n",
              "  746,\n",
              "  747,\n",
              "  748,\n",
              "  749,\n",
              "  750,\n",
              "  751,\n",
              "  752,\n",
              "  753,\n",
              "  754,\n",
              "  755,\n",
              "  756,\n",
              "  757,\n",
              "  758,\n",
              "  759,\n",
              "  760,\n",
              "  761,\n",
              "  762,\n",
              "  763,\n",
              "  764,\n",
              "  765,\n",
              "  766,\n",
              "  767,\n",
              "  768,\n",
              "  769,\n",
              "  770,\n",
              "  771,\n",
              "  772,\n",
              "  773,\n",
              "  774,\n",
              "  775,\n",
              "  776,\n",
              "  777,\n",
              "  778,\n",
              "  779,\n",
              "  780,\n",
              "  781,\n",
              "  782,\n",
              "  783,\n",
              "  784,\n",
              "  785,\n",
              "  786,\n",
              "  787,\n",
              "  788,\n",
              "  789,\n",
              "  790,\n",
              "  791,\n",
              "  792,\n",
              "  793,\n",
              "  794,\n",
              "  795,\n",
              "  796,\n",
              "  797,\n",
              "  798,\n",
              "  799,\n",
              "  800,\n",
              "  801,\n",
              "  802,\n",
              "  803,\n",
              "  804,\n",
              "  805,\n",
              "  806,\n",
              "  807,\n",
              "  808,\n",
              "  809,\n",
              "  810,\n",
              "  811,\n",
              "  812,\n",
              "  813,\n",
              "  814,\n",
              "  815,\n",
              "  816,\n",
              "  817,\n",
              "  818,\n",
              "  819,\n",
              "  820,\n",
              "  821,\n",
              "  822,\n",
              "  823,\n",
              "  824,\n",
              "  825,\n",
              "  826,\n",
              "  827,\n",
              "  828,\n",
              "  829,\n",
              "  830,\n",
              "  831,\n",
              "  832,\n",
              "  833,\n",
              "  834,\n",
              "  835,\n",
              "  836,\n",
              "  837,\n",
              "  838,\n",
              "  839,\n",
              "  840,\n",
              "  841,\n",
              "  842,\n",
              "  843,\n",
              "  844,\n",
              "  845,\n",
              "  846,\n",
              "  847,\n",
              "  848,\n",
              "  849,\n",
              "  850,\n",
              "  851,\n",
              "  852,\n",
              "  853,\n",
              "  854,\n",
              "  855,\n",
              "  856,\n",
              "  857,\n",
              "  858,\n",
              "  859,\n",
              "  860,\n",
              "  861,\n",
              "  862,\n",
              "  863,\n",
              "  864,\n",
              "  865,\n",
              "  866,\n",
              "  867,\n",
              "  868,\n",
              "  869,\n",
              "  870,\n",
              "  871,\n",
              "  872,\n",
              "  873,\n",
              "  874,\n",
              "  875,\n",
              "  876,\n",
              "  877,\n",
              "  878,\n",
              "  879,\n",
              "  880,\n",
              "  881,\n",
              "  882,\n",
              "  883,\n",
              "  884,\n",
              "  885,\n",
              "  886,\n",
              "  887,\n",
              "  888,\n",
              "  889,\n",
              "  890,\n",
              "  891,\n",
              "  892,\n",
              "  893,\n",
              "  894,\n",
              "  895,\n",
              "  896,\n",
              "  897,\n",
              "  898,\n",
              "  899,\n",
              "  900,\n",
              "  901,\n",
              "  902,\n",
              "  903,\n",
              "  904,\n",
              "  905,\n",
              "  906,\n",
              "  907,\n",
              "  908,\n",
              "  909,\n",
              "  910,\n",
              "  911,\n",
              "  912,\n",
              "  913,\n",
              "  914,\n",
              "  915,\n",
              "  916,\n",
              "  917,\n",
              "  918,\n",
              "  919,\n",
              "  920,\n",
              "  921,\n",
              "  922,\n",
              "  923,\n",
              "  924,\n",
              "  925,\n",
              "  926,\n",
              "  927,\n",
              "  928,\n",
              "  929,\n",
              "  930,\n",
              "  931,\n",
              "  932,\n",
              "  933,\n",
              "  934,\n",
              "  935,\n",
              "  936,\n",
              "  937,\n",
              "  938,\n",
              "  939,\n",
              "  940,\n",
              "  941,\n",
              "  942,\n",
              "  943,\n",
              "  944,\n",
              "  945,\n",
              "  946,\n",
              "  947,\n",
              "  948,\n",
              "  949,\n",
              "  950,\n",
              "  951,\n",
              "  952,\n",
              "  953,\n",
              "  954,\n",
              "  955,\n",
              "  956,\n",
              "  957,\n",
              "  958,\n",
              "  959,\n",
              "  960,\n",
              "  961,\n",
              "  962,\n",
              "  963,\n",
              "  964,\n",
              "  965,\n",
              "  966,\n",
              "  967,\n",
              "  968,\n",
              "  969,\n",
              "  970,\n",
              "  971,\n",
              "  972,\n",
              "  973,\n",
              "  974,\n",
              "  975,\n",
              "  976,\n",
              "  977,\n",
              "  978,\n",
              "  979,\n",
              "  980,\n",
              "  981,\n",
              "  982,\n",
              "  983,\n",
              "  984,\n",
              "  985,\n",
              "  986,\n",
              "  987,\n",
              "  988,\n",
              "  989,\n",
              "  990,\n",
              "  991,\n",
              "  992,\n",
              "  993,\n",
              "  994,\n",
              "  995,\n",
              "  996,\n",
              "  997,\n",
              "  998,\n",
              "  999,\n",
              "  ...],\n",
              " <a list of 3559 Text major ticklabel objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 145
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(mergedDF['firm'], mergedDF['operating_profit_margin'])\n",
        "\n",
        "\n",
        "plt.xticks(rotation = 45, ha = \"right\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JaRa1QHkRCKj"
      },
      "source": [
        "##### Respuesta\n",
        "\n",
        "Podemos observar que para la mayoria de las industrias las empresas suelen obtener beneficios conservadores.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A_1dxkurHnu7"
      },
      "source": [
        "#### **Which are the biggest 10 US firms in terms of market value and how far they are from the typical size of a US firm?**\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 146,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m8CilF5fX0fX",
        "outputId": "56748832-34b2-45c9-c52c-8f1d3f5ac494"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10960461.118705181"
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ],
      "source": [
        "mergedDF['market_value'].mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 147,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V_2YD5CoYkT9",
        "outputId": "a0745cf9-992f-45ff-93e4-8cfc4b775d9f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    3.559000e+03\n",
              "mean     1.096046e+07\n",
              "std      6.622548e+07\n",
              "min      3.490000e+01\n",
              "25%      1.932212e+05\n",
              "50%      1.105860e+06\n",
              "75%      4.615835e+06\n",
              "max      2.212838e+09\n",
              "Name: market_value, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 147
        }
      ],
      "source": [
        "mergedDF['market_value'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 148,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vfti_ZYnHq4A",
        "outputId": "89f31d7f-735b-425a-c316-9693cdbe28f2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8       2.212838e+09\n",
              "2097    1.920840e+09\n",
              "1379    1.435042e+09\n",
              "200     1.080624e+09\n",
              "3182    6.976698e+08\n",
              "3263    4.818731e+08\n",
              "1721    4.671001e+08\n",
              "2001    4.363946e+08\n",
              "2255    3.789750e+08\n",
              "3300    3.743426e+08\n",
              "Name: market_value, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ],
      "source": [
        "mergedDF['market_value'].nlargest(n=10)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 149,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bAF5aLrrKFhr",
        "outputId": "d90bc972-5e6e-4af2-9db7-2f3554b6e852"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8        AAPL\n",
              "2097     MSFT\n",
              "1379    GOOGL\n",
              "200      AMZN\n",
              "3182     TSLA\n",
              "3263      UNH\n",
              "1721      JNJ\n",
              "2001     META\n",
              "2255     NVDA\n",
              "3300        V\n",
              "Name: firm, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 149
        }
      ],
      "source": [
        "mergedDF.loc[[8, 2097, 1379, 200, 3182, 3263, 1721, 2001, 2255, 3300],'firm']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H2sQGlxFY6S4"
      },
      "source": [
        "##### Argumentacion\n",
        "\n",
        "No solo podemos observar las 10 firmas mas grandes en termino de valor de mercado se encuentra muy por encima del promedio, sino tambien del tercer cuartil. Estando las segunda y tercera firma practicamente en a la par de la mas grande, mientras que las siete restantes le hace falta medio orden de magnitud para llegar al mismo orden de magnitud de la mas grande, lo cua podria parecer mucho, sin embargo estan dos orden de magnitud por encima del tercer cuartil, por lo que podriamos considerarlo como diferencia pequeña."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "C5IhBesDHo4w"
      },
      "source": [
        "#### **Which are the biggest 10 US firms in terms of book value and how far they are from the typical size of a US firm?**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 150,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "deewExawX_Mi",
        "outputId": "1922e158-f40b-4ff3-e22f-f7e3ab78d495"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3200436.1636636695"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ],
      "source": [
        "mergedDF['book_value'].mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 151,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jypO5rzFa9Zf",
        "outputId": "d62dbae2-8a71-4055-ab34-2677b1deae6d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    3.559000e+03\n",
              "mean     3.200436e+06\n",
              "std      1.349909e+07\n",
              "min     -1.479100e+07\n",
              "25%      9.744857e+04\n",
              "50%      4.312830e+05\n",
              "75%      1.728704e+06\n",
              "max      2.861430e+08\n",
              "Name: book_value, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 151
        }
      ],
      "source": [
        "mergedDF['book_value'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 152,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X180T_DsHq8X",
        "outputId": "121c620c-28ae-4d7e-a21c-7ba85aad1c5c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1727    286143000.0\n",
              "374     269118000.0\n",
              "1379    255419000.0\n",
              "545     199626000.0\n",
              "3509    184508000.0\n",
              "3430    179793000.0\n",
              "2097    166542000.0\n",
              "861     154562000.0\n",
              "3050    135307000.0\n",
              "200     131402000.0\n",
              "Name: book_value, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ],
      "source": [
        "mergedDF['book_value'].nlargest(n=10)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 153,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cn6Q1rYnK9M9",
        "outputId": "1bea2f02-4d9f-4ada-93c5-9c85b74fa865"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1727      JPM\n",
              "374       BAC\n",
              "1379    GOOGL\n",
              "545         C\n",
              "3509      XOM\n",
              "3430      WFC\n",
              "2097     MSFT\n",
              "861       CVX\n",
              "3050        T\n",
              "200      AMZN\n",
              "Name: firm, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ],
      "source": [
        "mergedDF.loc[[1727, 374, 1379, 545, 3509, 3430, 2097, 861, 3050, 200],'firm']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ytJwjiysbeuv"
      },
      "source": [
        "##### Argumentacion\n",
        "\n",
        "Podemos observar que las tres firmas mas grandes poseen tamaños en base al valor de libro muy similares. Y que asu vez nuevamente las diez firmas mas grandes se encuentra muy alejadas del tercer cuartil."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "N98CzvspLWqI"
      },
      "source": [
        "### 2.2.1.2 Considering the whole history of financial data for all firms:    "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 154,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 557
        },
        "id": "TCT5J4ATYERc",
        "outputId": "c6ed35b9-179a-4547-ba48-b3fcf6fc4d96"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py:3326: DtypeWarning:\n",
            "\n",
            "Columns (2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) have mixed types.Specify dtype option on import or set low_memory=False.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae  otheropexp  extraincome  \\\n",
              "0       firm       q  revenue     cogs       sgae  otheropexp  extraincome   \n",
              "1          A  2000q1      NaN      NaN        NaN         NaN          NaN   \n",
              "2          A  2000q2  2485000  1261000    1010000           0        42000   \n",
              "3          A  2000q3  2670000  1369000    1091000           0        28000   \n",
              "4          A  2000q4  3372000  1732000    1182000           0        10000   \n",
              "...      ...     ...      ...      ...        ...         ...          ...   \n",
              "324442  ZYNE  2021q2      0.0      0.0  9838.4941         0.0   -117.52822   \n",
              "324443  ZYNE  2021q3      0.0      0.0  10210.652         0.0   -376.63675   \n",
              "324444  ZYNE  2021q4      0.0      0.0  8836.4365         0.0    16.937906   \n",
              "324445  ZYNE  2022q1      0.0      0.0   8903.915         0.0    317.25211   \n",
              "324446  ZYNE  2022q2      0.0      0.0  9168.7695         0.0   -775.92786   \n",
              "\n",
              "        finexp  incometax  totalassets  totalliabilities  shortdebt  longdebt  \\\n",
              "0       finexp  incometax  totalassets  totalliabilities  shortdebt  longdebt   \n",
              "1          NaN        NaN          NaN               NaN        NaN       NaN   \n",
              "2            0      90000      7321000           2679000     512000         0   \n",
              "3            0      83000      7827000           2925000     528000         0   \n",
              "4            0     163000      8425000           3160000     830000         0   \n",
              "...        ...        ...          ...               ...        ...       ...   \n",
              "324442  -5.943        0.0    98195.904         10496.647    206.211   468.385   \n",
              "324443  -5.038        0.0     89996.17         11309.171    207.635   411.237   \n",
              "324444  -4.433        0.0    81171.507         10258.173    209.068   353.694   \n",
              "324445 -96.044        0.0    74381.029          9214.059    210.512   295.754   \n",
              "324446 -91.691        0.0    67006.959          9765.086    211.965   237.414   \n",
              "\n",
              "        stockholderequity     adjprice  originalprice  sharesoutstanding  \\\n",
              "0       stockholderequity     adjprice  originalprice  sharesoutstanding   \n",
              "1                     NaN  63.76167023            104             452000   \n",
              "2                 4642000   45.2156075          73.75         452271.967   \n",
              "3                 4902000  30.00323786        48.9375         453014.579   \n",
              "4                 5265000  33.56684082          54.75         456366.381   \n",
              "...                   ...          ...            ...                ...   \n",
              "324442          87699.257         5.29           5.29          41251.537   \n",
              "324443          78686.999         4.24           4.24          41251.537   \n",
              "324444          70913.334         2.88           2.88          41217.537   \n",
              "324445           65166.97         2.05           2.05          42447.037   \n",
              "324446          57241.873         1.14           1.14          43595.959   \n",
              "\n",
              "        fiscalmonth  year  cto  \n",
              "0       fiscalmonth  year  cto  \n",
              "1               NaN  2000    1  \n",
              "2                 6  2000    2  \n",
              "3                 9  2000    3  \n",
              "4                12  2000    4  \n",
              "...             ...   ...  ...  \n",
              "324442          6.0  2021    2  \n",
              "324443          9.0  2021    3  \n",
              "324444         12.0  2021    4  \n",
              "324445          3.0  2022    1  \n",
              "324446          6.0  2022    2  \n",
              "\n",
              "[324447 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-034e4b9b-84a5-4121-96cb-ba73b05a2137\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>totalliabilities</th>\n",
              "      <th>shortdebt</th>\n",
              "      <th>longdebt</th>\n",
              "      <th>stockholderequity</th>\n",
              "      <th>adjprice</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>firm</td>\n",
              "      <td>q</td>\n",
              "      <td>revenue</td>\n",
              "      <td>cogs</td>\n",
              "      <td>sgae</td>\n",
              "      <td>otheropexp</td>\n",
              "      <td>extraincome</td>\n",
              "      <td>finexp</td>\n",
              "      <td>incometax</td>\n",
              "      <td>totalassets</td>\n",
              "      <td>totalliabilities</td>\n",
              "      <td>shortdebt</td>\n",
              "      <td>longdebt</td>\n",
              "      <td>stockholderequity</td>\n",
              "      <td>adjprice</td>\n",
              "      <td>originalprice</td>\n",
              "      <td>sharesoutstanding</td>\n",
              "      <td>fiscalmonth</td>\n",
              "      <td>year</td>\n",
              "      <td>cto</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>63.76167023</td>\n",
              "      <td>104</td>\n",
              "      <td>452000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>2679000</td>\n",
              "      <td>512000</td>\n",
              "      <td>0</td>\n",
              "      <td>4642000</td>\n",
              "      <td>45.2156075</td>\n",
              "      <td>73.75</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>2925000</td>\n",
              "      <td>528000</td>\n",
              "      <td>0</td>\n",
              "      <td>4902000</td>\n",
              "      <td>30.00323786</td>\n",
              "      <td>48.9375</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>3160000</td>\n",
              "      <td>830000</td>\n",
              "      <td>0</td>\n",
              "      <td>5265000</td>\n",
              "      <td>33.56684082</td>\n",
              "      <td>54.75</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324442</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>10496.647</td>\n",
              "      <td>206.211</td>\n",
              "      <td>468.385</td>\n",
              "      <td>87699.257</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.29</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324443</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>11309.171</td>\n",
              "      <td>207.635</td>\n",
              "      <td>411.237</td>\n",
              "      <td>78686.999</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.24</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324444</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>10258.173</td>\n",
              "      <td>209.068</td>\n",
              "      <td>353.694</td>\n",
              "      <td>70913.334</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.88</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324445</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>9214.059</td>\n",
              "      <td>210.512</td>\n",
              "      <td>295.754</td>\n",
              "      <td>65166.97</td>\n",
              "      <td>2.05</td>\n",
              "      <td>2.05</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324446</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>9765.086</td>\n",
              "      <td>211.965</td>\n",
              "      <td>237.414</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>324447 rows × 20 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-034e4b9b-84a5-4121-96cb-ba73b05a2137')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-034e4b9b-84a5-4121-96cb-ba73b05a2137 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-034e4b9b-84a5-4121-96cb-ba73b05a2137');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ],
      "source": [
        "dataExtra = pd.read_csv('us2022q2a.csv')\n",
        "df1Extra = pd.read_csv('us2022q2a.csv',names = dataExtra.columns)\n",
        "df1Extra"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 155,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 502
        },
        "id": "Xe7HBEMicvbK",
        "outputId": "e9a23332-6eef-4646-8eb7-6b7e0927cdbe"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Ticker                             Name  \\\n",
              "0     Ticker                             Name   \n",
              "1       FLWS            1 800 Flowers Com Inc   \n",
              "2        TXG                10x Genomics, Inc   \n",
              "3       GOED                1847 Goedeker Inc   \n",
              "4       ONEM            1life Healthcare, Inc   \n",
              "...      ...                              ...   \n",
              "3604     ZUO                       Zuora, Inc   \n",
              "3605     ZWS  Zurn Elkay Water Solutions Corp   \n",
              "3606      ZY                     Zymergen Inc   \n",
              "3607    ZYNE     Zynerba Pharmaceuticals, Inc   \n",
              "3608    ZNGA                        Zynga Inc   \n",
              "\n",
              "                                 Sector NAICS\\nlevel 1  \n",
              "0                                Sector NAICS\\nlevel 1  \n",
              "1                                         Retail Trade  \n",
              "2                                        Manufacturing  \n",
              "3                                         Retail Trade  \n",
              "4                    Health Care and Social Assistance  \n",
              "...                                                ...  \n",
              "3604                                       Information  \n",
              "3605                                     Manufacturing  \n",
              "3606  Professional, Scientific, and Technical Services  \n",
              "3607                                     Manufacturing  \n",
              "3608                                       Information  \n",
              "\n",
              "[3609 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-53a51707-e21a-4d3f-94c9-48f4bc14611c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ticker</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Ticker</td>\n",
              "      <td>Name</td>\n",
              "      <td>Sector NAICS\\nlevel 1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>FLWS</td>\n",
              "      <td>1 800 Flowers Com Inc</td>\n",
              "      <td>Retail Trade</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TXG</td>\n",
              "      <td>10x Genomics, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>GOED</td>\n",
              "      <td>1847 Goedeker Inc</td>\n",
              "      <td>Retail Trade</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ONEM</td>\n",
              "      <td>1life Healthcare, Inc</td>\n",
              "      <td>Health Care and Social Assistance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3604</th>\n",
              "      <td>ZUO</td>\n",
              "      <td>Zuora, Inc</td>\n",
              "      <td>Information</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3605</th>\n",
              "      <td>ZWS</td>\n",
              "      <td>Zurn Elkay Water Solutions Corp</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3606</th>\n",
              "      <td>ZY</td>\n",
              "      <td>Zymergen Inc</td>\n",
              "      <td>Professional, Scientific, and Technical Services</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3607</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3608</th>\n",
              "      <td>ZNGA</td>\n",
              "      <td>Zynga Inc</td>\n",
              "      <td>Information</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3609 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53a51707-e21a-4d3f-94c9-48f4bc14611c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-53a51707-e21a-4d3f-94c9-48f4bc14611c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-53a51707-e21a-4d3f-94c9-48f4bc14611c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 155
        }
      ],
      "source": [
        "dataExtra = pd.read_csv('usfirms2022.csv')\n",
        "df2Extra = pd.read_csv('usfirms2022.csv', names = dataExtra.columns)\n",
        "df2Extra = df2Extra[[\"Ticker\",\"Name\", \"Sector NAICS\\nlevel 1\"]]\n",
        "df2Extra"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 156,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 870
        },
        "id": "GKTqknYmcxTG",
        "outputId": "ade92fd6-a8d5-4390-bba9-66d1c39495ec"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae otheropexp extraincome  \\\n",
              "1          A  2000q2  2485000  1261000    1010000          0       42000   \n",
              "2          A  2000q3  2670000  1369000    1091000          0       28000   \n",
              "3          A  2000q4  3372000  1732000    1182000          0       10000   \n",
              "4          A  2001q1  2841000  1449000    1113000          0       -6000   \n",
              "5          A  2001q2  2382000  1406000    1038000          0      273000   \n",
              "...      ...     ...      ...      ...        ...        ...         ...   \n",
              "323811  ZYNE  2021q2      0.0      0.0  9838.4941        0.0  -117.52822   \n",
              "323812  ZYNE  2021q3      0.0      0.0  10210.652        0.0  -376.63675   \n",
              "323813  ZYNE  2021q4      0.0      0.0  8836.4365        0.0   16.937906   \n",
              "323814  ZYNE  2022q1      0.0      0.0   8903.915        0.0   317.25211   \n",
              "323815  ZYNE  2022q2      0.0      0.0  9168.7695        0.0  -775.92786   \n",
              "\n",
              "        finexp incometax totalassets  ... longdebt stockholderequity  \\\n",
              "1            0     90000     7321000  ...        0           4642000   \n",
              "2            0     83000     7827000  ...        0           4902000   \n",
              "3            0    163000     8425000  ...        0           5265000   \n",
              "4            0    119000     9208000  ...        0           5541000   \n",
              "5            0    115000     9080000  ...        0           5616000   \n",
              "...        ...       ...         ...  ...      ...               ...   \n",
              "323811  -5.943       0.0   98195.904  ...  468.385         87699.257   \n",
              "323812  -5.038       0.0    89996.17  ...  411.237         78686.999   \n",
              "323813  -4.433       0.0   81171.507  ...  353.694         70913.334   \n",
              "323814 -96.044       0.0   74381.029  ...  295.754          65166.97   \n",
              "323815 -91.691       0.0   67006.959  ...  237.414         57241.873   \n",
              "\n",
              "           adjprice originalprice sharesoutstanding fiscalmonth  year cto  \\\n",
              "1        45.2156075         73.75        452271.967           6  2000   2   \n",
              "2       30.00323786       48.9375        453014.579           9  2000   3   \n",
              "3       33.56684082         54.75        456366.381          12  2000   4   \n",
              "4       18.84034709   30.72999954        456769.737           3  2001   1   \n",
              "5       19.92552195          32.5        457072.749           6  2001   2   \n",
              "...             ...           ...               ...         ...   ...  ..   \n",
              "323811         5.29          5.29         41251.537         6.0  2021   2   \n",
              "323812         4.24          4.24         41251.537         9.0  2021   3   \n",
              "323813         2.88          2.88         41217.537        12.0  2021   4   \n",
              "323814         2.05          2.05         42447.037         3.0  2022   1   \n",
              "323815         1.14          1.14         43595.959         6.0  2022   2   \n",
              "\n",
              "                                Name Sector NAICS\\nlevel 1  \n",
              "1          Agilent Technologies, Inc         Manufacturing  \n",
              "2          Agilent Technologies, Inc         Manufacturing  \n",
              "3          Agilent Technologies, Inc         Manufacturing  \n",
              "4          Agilent Technologies, Inc         Manufacturing  \n",
              "5          Agilent Technologies, Inc         Manufacturing  \n",
              "...                              ...                   ...  \n",
              "323811  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323812  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323813  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323814  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "323815  Zynerba Pharmaceuticals, Inc         Manufacturing  \n",
              "\n",
              "[153245 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a9d4d962-d655-4fd1-b625-95efac9b7a8c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>longdebt</th>\n",
              "      <th>stockholderequity</th>\n",
              "      <th>adjprice</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>4642000</td>\n",
              "      <td>45.2156075</td>\n",
              "      <td>73.75</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>4902000</td>\n",
              "      <td>30.00323786</td>\n",
              "      <td>48.9375</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>5265000</td>\n",
              "      <td>33.56684082</td>\n",
              "      <td>54.75</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q1</td>\n",
              "      <td>2841000</td>\n",
              "      <td>1449000</td>\n",
              "      <td>1113000</td>\n",
              "      <td>0</td>\n",
              "      <td>-6000</td>\n",
              "      <td>0</td>\n",
              "      <td>119000</td>\n",
              "      <td>9208000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>5541000</td>\n",
              "      <td>18.84034709</td>\n",
              "      <td>30.72999954</td>\n",
              "      <td>456769.737</td>\n",
              "      <td>3</td>\n",
              "      <td>2001</td>\n",
              "      <td>1</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q2</td>\n",
              "      <td>2382000</td>\n",
              "      <td>1406000</td>\n",
              "      <td>1038000</td>\n",
              "      <td>0</td>\n",
              "      <td>273000</td>\n",
              "      <td>0</td>\n",
              "      <td>115000</td>\n",
              "      <td>9080000</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>5616000</td>\n",
              "      <td>19.92552195</td>\n",
              "      <td>32.5</td>\n",
              "      <td>457072.749</td>\n",
              "      <td>6</td>\n",
              "      <td>2001</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>...</td>\n",
              "      <td>468.385</td>\n",
              "      <td>87699.257</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.29</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>...</td>\n",
              "      <td>411.237</td>\n",
              "      <td>78686.999</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.24</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>...</td>\n",
              "      <td>353.694</td>\n",
              "      <td>70913.334</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.88</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>...</td>\n",
              "      <td>295.754</td>\n",
              "      <td>65166.97</td>\n",
              "      <td>2.05</td>\n",
              "      <td>2.05</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>...</td>\n",
              "      <td>237.414</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 22 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9d4d962-d655-4fd1-b625-95efac9b7a8c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a9d4d962-d655-4fd1-b625-95efac9b7a8c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a9d4d962-d655-4fd1-b625-95efac9b7a8c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 156
        }
      ],
      "source": [
        "dfExtra = pd.merge(df1Extra, df2Extra, left_on='firm', right_on=\"Ticker\")\n",
        "dfExtra = dfExtra.drop(columns=['Ticker'])\n",
        "dfExtra = dfExtra.drop(dfExtra[dfExtra.firm.isnull()].index)\n",
        "dfExtra = dfExtra.drop(dfExtra[dfExtra.revenue.isnull()].index)\n",
        "dfExtra = dfExtra.drop(dfExtra[dfExtra.cogs.isnull()].index)\n",
        "dfExtra = dfExtra.drop(dfExtra[dfExtra.adjprice.isnull()].index)\n",
        "dfExtra"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pMtuW3wKLfmY"
      },
      "source": [
        "\n",
        "#### **How can you measure firm profitability that can be used to compare performance among firms of different sizes? Select and justify at least 3 measures and show descriptive statistics**\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 157,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "tUIwyfTpc5t6",
        "outputId": "eeb348b8-8aa4-48ad-ac19-67f30569fdcd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae otheropexp extraincome  \\\n",
              "1          A  2000q2  2485000  1261000    1010000          0       42000   \n",
              "2          A  2000q3  2670000  1369000    1091000          0       28000   \n",
              "3          A  2000q4  3372000  1732000    1182000          0       10000   \n",
              "4          A  2001q1  2841000  1449000    1113000          0       -6000   \n",
              "5          A  2001q2  2382000  1406000    1038000          0      273000   \n",
              "...      ...     ...      ...      ...        ...        ...         ...   \n",
              "323811  ZYNE  2021q2      0.0      0.0  9838.4941        0.0  -117.52822   \n",
              "323812  ZYNE  2021q3      0.0      0.0  10210.652        0.0  -376.63675   \n",
              "323813  ZYNE  2021q4      0.0      0.0  8836.4365        0.0   16.937906   \n",
              "323814  ZYNE  2022q1      0.0      0.0   8903.915        0.0   317.25211   \n",
              "323815  ZYNE  2022q2      0.0      0.0  9168.7695        0.0  -775.92786   \n",
              "\n",
              "        finexp incometax totalassets  ...     adjprice originalprice  \\\n",
              "1            0     90000     7321000  ...   45.2156075         73.75   \n",
              "2            0     83000     7827000  ...  30.00323786       48.9375   \n",
              "3            0    163000     8425000  ...  33.56684082         54.75   \n",
              "4            0    119000     9208000  ...  18.84034709   30.72999954   \n",
              "5            0    115000     9080000  ...  19.92552195          32.5   \n",
              "...        ...       ...         ...  ...          ...           ...   \n",
              "323811  -5.943       0.0   98195.904  ...         5.29          5.29   \n",
              "323812  -5.038       0.0    89996.17  ...         4.24          4.24   \n",
              "323813  -4.433       0.0   81171.507  ...         2.88          2.88   \n",
              "323814 -96.044       0.0   74381.029  ...         2.05          2.05   \n",
              "323815 -91.691       0.0   67006.959  ...         1.14          1.14   \n",
              "\n",
              "       sharesoutstanding fiscalmonth  year cto                          Name  \\\n",
              "1             452271.967           6  2000   2     Agilent Technologies, Inc   \n",
              "2             453014.579           9  2000   3     Agilent Technologies, Inc   \n",
              "3             456366.381          12  2000   4     Agilent Technologies, Inc   \n",
              "4             456769.737           3  2001   1     Agilent Technologies, Inc   \n",
              "5             457072.749           6  2001   2     Agilent Technologies, Inc   \n",
              "...                  ...         ...   ...  ..                           ...   \n",
              "323811         41251.537         6.0  2021   2  Zynerba Pharmaceuticals, Inc   \n",
              "323812         41251.537         9.0  2021   3  Zynerba Pharmaceuticals, Inc   \n",
              "323813         41217.537        12.0  2021   4  Zynerba Pharmaceuticals, Inc   \n",
              "323814         42447.037         3.0  2022   1  Zynerba Pharmaceuticals, Inc   \n",
              "323815         43595.959         6.0  2022   2  Zynerba Pharmaceuticals, Inc   \n",
              "\n",
              "       Sector NAICS\\nlevel 1  market_value   book_value  \n",
              "1              Manufacturing  3.335506e+07  4642000.000  \n",
              "2              Manufacturing  2.216940e+07  4902000.000  \n",
              "3              Manufacturing  2.498606e+07  5265000.000  \n",
              "4              Manufacturing  1.403653e+07  5541000.000  \n",
              "5              Manufacturing  1.485486e+07  5616000.000  \n",
              "...                      ...           ...          ...  \n",
              "323811         Manufacturing  2.182206e+05    87699.257  \n",
              "323812         Manufacturing  1.749065e+05    78686.999  \n",
              "323813         Manufacturing  1.187065e+05    70913.334  \n",
              "323814         Manufacturing  8.701643e+04    65166.970  \n",
              "323815         Manufacturing  4.969939e+04    57241.873  \n",
              "\n",
              "[153245 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3493baae-7250-4b1a-87e4-d79c50fde517\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>adjprice</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>...</td>\n",
              "      <td>45.2156075</td>\n",
              "      <td>73.75</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>3.335506e+07</td>\n",
              "      <td>4642000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>...</td>\n",
              "      <td>30.00323786</td>\n",
              "      <td>48.9375</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.216940e+07</td>\n",
              "      <td>4902000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>...</td>\n",
              "      <td>33.56684082</td>\n",
              "      <td>54.75</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.498606e+07</td>\n",
              "      <td>5265000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q1</td>\n",
              "      <td>2841000</td>\n",
              "      <td>1449000</td>\n",
              "      <td>1113000</td>\n",
              "      <td>0</td>\n",
              "      <td>-6000</td>\n",
              "      <td>0</td>\n",
              "      <td>119000</td>\n",
              "      <td>9208000</td>\n",
              "      <td>...</td>\n",
              "      <td>18.84034709</td>\n",
              "      <td>30.72999954</td>\n",
              "      <td>456769.737</td>\n",
              "      <td>3</td>\n",
              "      <td>2001</td>\n",
              "      <td>1</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.403653e+07</td>\n",
              "      <td>5541000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q2</td>\n",
              "      <td>2382000</td>\n",
              "      <td>1406000</td>\n",
              "      <td>1038000</td>\n",
              "      <td>0</td>\n",
              "      <td>273000</td>\n",
              "      <td>0</td>\n",
              "      <td>115000</td>\n",
              "      <td>9080000</td>\n",
              "      <td>...</td>\n",
              "      <td>19.92552195</td>\n",
              "      <td>32.5</td>\n",
              "      <td>457072.749</td>\n",
              "      <td>6</td>\n",
              "      <td>2001</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.485486e+07</td>\n",
              "      <td>5616000.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>...</td>\n",
              "      <td>5.29</td>\n",
              "      <td>5.29</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.182206e+05</td>\n",
              "      <td>87699.257</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>...</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.24</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.749065e+05</td>\n",
              "      <td>78686.999</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>...</td>\n",
              "      <td>2.88</td>\n",
              "      <td>2.88</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.187065e+05</td>\n",
              "      <td>70913.334</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>...</td>\n",
              "      <td>2.05</td>\n",
              "      <td>2.05</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>8.701643e+04</td>\n",
              "      <td>65166.970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>...</td>\n",
              "      <td>1.14</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>57241.873</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 24 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3493baae-7250-4b1a-87e4-d79c50fde517')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3493baae-7250-4b1a-87e4-d79c50fde517 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3493baae-7250-4b1a-87e4-d79c50fde517');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ],
      "source": [
        "# Derive New Column from Existing Column\n",
        "# Market Value = (originalprice * sharesoutstanding)\n",
        "\n",
        "dfExtra = dfExtra.assign(market_value=lambda x: x.originalprice.astype(np.float) * x.sharesoutstanding.astype(np.float))\n",
        "\n",
        "# Book Value of the firm = (totalassets-totalliabilities)\n",
        "\n",
        "dfExtra = dfExtra.assign(book_value=lambda x: x.totalassets.astype(np.float) - x.totalliabilities.astype(np.float))\n",
        "\n",
        "# Print dfFly para observar si las nuevas columnas de BookValue y MarkertValue fueron creados de manera correcta\n",
        "dfExtra"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 158,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 956
        },
        "id": "Kd6M6cBJdu_v",
        "outputId": "f4dffb21-f5b6-4cde-9b40-ae1c88b395a7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae otheropexp extraincome  \\\n",
              "1          A  2000q2  2485000  1261000    1010000          0       42000   \n",
              "2          A  2000q3  2670000  1369000    1091000          0       28000   \n",
              "3          A  2000q4  3372000  1732000    1182000          0       10000   \n",
              "4          A  2001q1  2841000  1449000    1113000          0       -6000   \n",
              "5          A  2001q2  2382000  1406000    1038000          0      273000   \n",
              "...      ...     ...      ...      ...        ...        ...         ...   \n",
              "323811  ZYNE  2021q2      0.0      0.0  9838.4941        0.0  -117.52822   \n",
              "323812  ZYNE  2021q3      0.0      0.0  10210.652        0.0  -376.63675   \n",
              "323813  ZYNE  2021q4      0.0      0.0  8836.4365        0.0   16.937906   \n",
              "323814  ZYNE  2022q1      0.0      0.0   8903.915        0.0   317.25211   \n",
              "323815  ZYNE  2022q2      0.0      0.0  9168.7695        0.0  -775.92786   \n",
              "\n",
              "        finexp incometax totalassets  ... originalprice sharesoutstanding  \\\n",
              "1            0     90000     7321000  ...         73.75        452271.967   \n",
              "2            0     83000     7827000  ...       48.9375        453014.579   \n",
              "3            0    163000     8425000  ...         54.75        456366.381   \n",
              "4            0    119000     9208000  ...   30.72999954        456769.737   \n",
              "5            0    115000     9080000  ...          32.5        457072.749   \n",
              "...        ...       ...         ...  ...           ...               ...   \n",
              "323811  -5.943       0.0   98195.904  ...          5.29         41251.537   \n",
              "323812  -5.038       0.0    89996.17  ...          4.24         41251.537   \n",
              "323813  -4.433       0.0   81171.507  ...          2.88         41217.537   \n",
              "323814 -96.044       0.0   74381.029  ...          2.05         42447.037   \n",
              "323815 -91.691       0.0   67006.959  ...          1.14         43595.959   \n",
              "\n",
              "       fiscalmonth  year cto                          Name  \\\n",
              "1                6  2000   2     Agilent Technologies, Inc   \n",
              "2                9  2000   3     Agilent Technologies, Inc   \n",
              "3               12  2000   4     Agilent Technologies, Inc   \n",
              "4                3  2001   1     Agilent Technologies, Inc   \n",
              "5                6  2001   2     Agilent Technologies, Inc   \n",
              "...            ...   ...  ..                           ...   \n",
              "323811         6.0  2021   2  Zynerba Pharmaceuticals, Inc   \n",
              "323812         9.0  2021   3  Zynerba Pharmaceuticals, Inc   \n",
              "323813        12.0  2021   4  Zynerba Pharmaceuticals, Inc   \n",
              "323814         3.0  2022   1  Zynerba Pharmaceuticals, Inc   \n",
              "323815         6.0  2022   2  Zynerba Pharmaceuticals, Inc   \n",
              "\n",
              "       Sector NAICS\\nlevel 1  market_value   book_value BookToMarketRatio  \n",
              "1              Manufacturing  3.335506e+07  4642000.000          0.139169  \n",
              "2              Manufacturing  2.216940e+07  4902000.000          0.221116  \n",
              "3              Manufacturing  2.498606e+07  5265000.000          0.210718  \n",
              "4              Manufacturing  1.403653e+07  5541000.000          0.394756  \n",
              "5              Manufacturing  1.485486e+07  5616000.000          0.378058  \n",
              "...                      ...           ...          ...               ...  \n",
              "323811         Manufacturing  2.182206e+05    87699.257          0.401883  \n",
              "323812         Manufacturing  1.749065e+05    78686.999          0.449880  \n",
              "323813         Manufacturing  1.187065e+05    70913.334          0.597384  \n",
              "323814         Manufacturing  8.701643e+04    65166.970          0.748904  \n",
              "323815         Manufacturing  4.969939e+04    57241.873          1.151762  \n",
              "\n",
              "[153245 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aacbcf2a-682e-44f0-9e6d-df55304b0d2c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>originalprice</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "      <th>BookToMarketRatio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>...</td>\n",
              "      <td>73.75</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>3.335506e+07</td>\n",
              "      <td>4642000.000</td>\n",
              "      <td>0.139169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>...</td>\n",
              "      <td>48.9375</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.216940e+07</td>\n",
              "      <td>4902000.000</td>\n",
              "      <td>0.221116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>...</td>\n",
              "      <td>54.75</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.498606e+07</td>\n",
              "      <td>5265000.000</td>\n",
              "      <td>0.210718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q1</td>\n",
              "      <td>2841000</td>\n",
              "      <td>1449000</td>\n",
              "      <td>1113000</td>\n",
              "      <td>0</td>\n",
              "      <td>-6000</td>\n",
              "      <td>0</td>\n",
              "      <td>119000</td>\n",
              "      <td>9208000</td>\n",
              "      <td>...</td>\n",
              "      <td>30.72999954</td>\n",
              "      <td>456769.737</td>\n",
              "      <td>3</td>\n",
              "      <td>2001</td>\n",
              "      <td>1</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.403653e+07</td>\n",
              "      <td>5541000.000</td>\n",
              "      <td>0.394756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q2</td>\n",
              "      <td>2382000</td>\n",
              "      <td>1406000</td>\n",
              "      <td>1038000</td>\n",
              "      <td>0</td>\n",
              "      <td>273000</td>\n",
              "      <td>0</td>\n",
              "      <td>115000</td>\n",
              "      <td>9080000</td>\n",
              "      <td>...</td>\n",
              "      <td>32.5</td>\n",
              "      <td>457072.749</td>\n",
              "      <td>6</td>\n",
              "      <td>2001</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.485486e+07</td>\n",
              "      <td>5616000.000</td>\n",
              "      <td>0.378058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>...</td>\n",
              "      <td>5.29</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.182206e+05</td>\n",
              "      <td>87699.257</td>\n",
              "      <td>0.401883</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>...</td>\n",
              "      <td>4.24</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.749065e+05</td>\n",
              "      <td>78686.999</td>\n",
              "      <td>0.449880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>...</td>\n",
              "      <td>2.88</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.187065e+05</td>\n",
              "      <td>70913.334</td>\n",
              "      <td>0.597384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>...</td>\n",
              "      <td>2.05</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>8.701643e+04</td>\n",
              "      <td>65166.970</td>\n",
              "      <td>0.748904</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>...</td>\n",
              "      <td>1.14</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>1.151762</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 25 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aacbcf2a-682e-44f0-9e6d-df55304b0d2c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-aacbcf2a-682e-44f0-9e6d-df55304b0d2c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-aacbcf2a-682e-44f0-9e6d-df55304b0d2c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 158
        }
      ],
      "source": [
        "#BookToMarketRatio = bookvalue / marketvalue\n",
        "dfExtra = dfExtra.assign(BookToMarketRatio=lambda x: x.book_value.astype(np.float) / x.market_value.astype(np.float))\n",
        "dfExtra "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 159,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "nvZl3t7QdxCT",
        "outputId": "6d64cb9b-84ee-4a32-983d-9891c5e9bcd5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count      mean       std       min       25%       50%       75%  \\\n",
              "firm                                                                      \n",
              "A      87.0  0.288494  0.120793  0.103716  0.217904  0.268915  0.343811   \n",
              "AA     23.0  1.355959  0.971442  0.374854  0.809227  1.170410  1.495281   \n",
              "AAIC   77.0  1.228171  0.552571  0.373104  0.941506  1.158641  1.481687   \n",
              "AAL    35.0 -0.144885  0.382663 -1.022603 -0.514931 -0.001517  0.153169   \n",
              "AAME   44.0  1.795551  0.629087  0.999613  1.323642  1.634052  2.083773   \n",
              "...     ...       ...       ...       ...       ...       ...       ...   \n",
              "ZVIA    4.0  0.286999  0.133422  0.148602  0.209419  0.268839  0.346420   \n",
              "ZVO    44.0  0.720074  0.399884  0.199689  0.453955  0.653621  0.883630   \n",
              "ZWS    41.0  0.300945  0.126009  0.028616  0.205552  0.293488  0.395857   \n",
              "ZY      5.0  0.822280  0.694939  0.141840  0.353597  0.596277  1.154503   \n",
              "ZYNE   28.0  0.523454  0.235313  0.190666  0.358154  0.467313  0.602809   \n",
              "\n",
              "           max  \n",
              "firm            \n",
              "A     0.820484  \n",
              "AA    5.074055  \n",
              "AAIC  3.822178  \n",
              "AAL   0.263440  \n",
              "AAME  3.662740  \n",
              "...        ...  \n",
              "ZVIA  0.461716  \n",
              "ZVO   2.098072  \n",
              "ZWS   0.503355  \n",
              "ZY    1.865183  \n",
              "ZYNE  1.151762  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-47bcbbb8-2c14-405d-90f1-3dd0b1f88aae\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>87.0</td>\n",
              "      <td>0.288494</td>\n",
              "      <td>0.120793</td>\n",
              "      <td>0.103716</td>\n",
              "      <td>0.217904</td>\n",
              "      <td>0.268915</td>\n",
              "      <td>0.343811</td>\n",
              "      <td>0.820484</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>23.0</td>\n",
              "      <td>1.355959</td>\n",
              "      <td>0.971442</td>\n",
              "      <td>0.374854</td>\n",
              "      <td>0.809227</td>\n",
              "      <td>1.170410</td>\n",
              "      <td>1.495281</td>\n",
              "      <td>5.074055</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>77.0</td>\n",
              "      <td>1.228171</td>\n",
              "      <td>0.552571</td>\n",
              "      <td>0.373104</td>\n",
              "      <td>0.941506</td>\n",
              "      <td>1.158641</td>\n",
              "      <td>1.481687</td>\n",
              "      <td>3.822178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>35.0</td>\n",
              "      <td>-0.144885</td>\n",
              "      <td>0.382663</td>\n",
              "      <td>-1.022603</td>\n",
              "      <td>-0.514931</td>\n",
              "      <td>-0.001517</td>\n",
              "      <td>0.153169</td>\n",
              "      <td>0.263440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>44.0</td>\n",
              "      <td>1.795551</td>\n",
              "      <td>0.629087</td>\n",
              "      <td>0.999613</td>\n",
              "      <td>1.323642</td>\n",
              "      <td>1.634052</td>\n",
              "      <td>2.083773</td>\n",
              "      <td>3.662740</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>4.0</td>\n",
              "      <td>0.286999</td>\n",
              "      <td>0.133422</td>\n",
              "      <td>0.148602</td>\n",
              "      <td>0.209419</td>\n",
              "      <td>0.268839</td>\n",
              "      <td>0.346420</td>\n",
              "      <td>0.461716</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>44.0</td>\n",
              "      <td>0.720074</td>\n",
              "      <td>0.399884</td>\n",
              "      <td>0.199689</td>\n",
              "      <td>0.453955</td>\n",
              "      <td>0.653621</td>\n",
              "      <td>0.883630</td>\n",
              "      <td>2.098072</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>41.0</td>\n",
              "      <td>0.300945</td>\n",
              "      <td>0.126009</td>\n",
              "      <td>0.028616</td>\n",
              "      <td>0.205552</td>\n",
              "      <td>0.293488</td>\n",
              "      <td>0.395857</td>\n",
              "      <td>0.503355</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>5.0</td>\n",
              "      <td>0.822280</td>\n",
              "      <td>0.694939</td>\n",
              "      <td>0.141840</td>\n",
              "      <td>0.353597</td>\n",
              "      <td>0.596277</td>\n",
              "      <td>1.154503</td>\n",
              "      <td>1.865183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>28.0</td>\n",
              "      <td>0.523454</td>\n",
              "      <td>0.235313</td>\n",
              "      <td>0.190666</td>\n",
              "      <td>0.358154</td>\n",
              "      <td>0.467313</td>\n",
              "      <td>0.602809</td>\n",
              "      <td>1.151762</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47bcbbb8-2c14-405d-90f1-3dd0b1f88aae')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-47bcbbb8-2c14-405d-90f1-3dd0b1f88aae button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-47bcbbb8-2c14-405d-90f1-3dd0b1f88aae');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 159
        }
      ],
      "source": [
        "dfExtra.groupby('firm')['BookToMarketRatio'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 160,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "-6JuCo0Rdyz2",
        "outputId": "33fea3e5-af71-4f82-8069-0e858a5ec8ba"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm  BookToMarketRatio\n",
              "1          A           0.139169\n",
              "2          A           0.221116\n",
              "3          A           0.210718\n",
              "4          A           0.394756\n",
              "5          A           0.378058\n",
              "...      ...                ...\n",
              "323811  ZYNE           0.401883\n",
              "323812  ZYNE           0.449880\n",
              "323813  ZYNE           0.597384\n",
              "323814  ZYNE           0.748904\n",
              "323815  ZYNE           1.151762\n",
              "\n",
              "[153245 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6222994b-8b14-4068-b3ad-d4bed15b2140\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>BookToMarketRatio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>0.139169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>0.221116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>0.210718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>0.394756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>0.378058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.401883</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.449880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.597384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.748904</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>1.151762</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6222994b-8b14-4068-b3ad-d4bed15b2140')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6222994b-8b14-4068-b3ad-d4bed15b2140 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6222994b-8b14-4068-b3ad-d4bed15b2140');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ],
      "source": [
        "Sample1dDF = dfExtra[['firm', 'BookToMarketRatio']]\n",
        "Sample1dDF"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 161,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 668
        },
        "id": "Wa3QGbo-d0Uw",
        "outputId": "261155e6-a5f6-47e9-8603-80643ba42b95"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3a0a62d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3a0d2050>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3b0b64d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3a0e7d10>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3abd8b10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3a994650>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3bbdb150>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3ab85390>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3ab851d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3b515190>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3bc61f10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3b416250>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3a4b1090>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3eebf250>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3ef338d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08f11090>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08eaf250>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08ecd290>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08e78250>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08e96610>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 161
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 20 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "dfExtra.hist(column='BookToMarketRatio', by='Sector NAICS\\nlevel 1')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 162,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 956
        },
        "id": "FqZuhsOTd_nP",
        "outputId": "06e918ea-df07-4948-d0e9-b462acf3f242"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae otheropexp extraincome  \\\n",
              "1          A  2000q2  2485000  1261000    1010000          0       42000   \n",
              "2          A  2000q3  2670000  1369000    1091000          0       28000   \n",
              "3          A  2000q4  3372000  1732000    1182000          0       10000   \n",
              "4          A  2001q1  2841000  1449000    1113000          0       -6000   \n",
              "5          A  2001q2  2382000  1406000    1038000          0      273000   \n",
              "...      ...     ...      ...      ...        ...        ...         ...   \n",
              "323811  ZYNE  2021q2      0.0      0.0  9838.4941        0.0  -117.52822   \n",
              "323812  ZYNE  2021q3      0.0      0.0  10210.652        0.0  -376.63675   \n",
              "323813  ZYNE  2021q4      0.0      0.0  8836.4365        0.0   16.937906   \n",
              "323814  ZYNE  2022q1      0.0      0.0   8903.915        0.0   317.25211   \n",
              "323815  ZYNE  2022q2      0.0      0.0  9168.7695        0.0  -775.92786   \n",
              "\n",
              "        finexp incometax totalassets  ... sharesoutstanding fiscalmonth  year  \\\n",
              "1            0     90000     7321000  ...        452271.967           6  2000   \n",
              "2            0     83000     7827000  ...        453014.579           9  2000   \n",
              "3            0    163000     8425000  ...        456366.381          12  2000   \n",
              "4            0    119000     9208000  ...        456769.737           3  2001   \n",
              "5            0    115000     9080000  ...        457072.749           6  2001   \n",
              "...        ...       ...         ...  ...               ...         ...   ...   \n",
              "323811  -5.943       0.0   98195.904  ...         41251.537         6.0  2021   \n",
              "323812  -5.038       0.0    89996.17  ...         41251.537         9.0  2021   \n",
              "323813  -4.433       0.0   81171.507  ...         41217.537        12.0  2021   \n",
              "323814 -96.044       0.0   74381.029  ...         42447.037         3.0  2022   \n",
              "323815 -91.691       0.0   67006.959  ...         43595.959         6.0  2022   \n",
              "\n",
              "       cto                          Name Sector NAICS\\nlevel 1  market_value  \\\n",
              "1        2     Agilent Technologies, Inc         Manufacturing  3.335506e+07   \n",
              "2        3     Agilent Technologies, Inc         Manufacturing  2.216940e+07   \n",
              "3        4     Agilent Technologies, Inc         Manufacturing  2.498606e+07   \n",
              "4        1     Agilent Technologies, Inc         Manufacturing  1.403653e+07   \n",
              "5        2     Agilent Technologies, Inc         Manufacturing  1.485486e+07   \n",
              "...     ..                           ...                   ...           ...   \n",
              "323811   2  Zynerba Pharmaceuticals, Inc         Manufacturing  2.182206e+05   \n",
              "323812   3  Zynerba Pharmaceuticals, Inc         Manufacturing  1.749065e+05   \n",
              "323813   4  Zynerba Pharmaceuticals, Inc         Manufacturing  1.187065e+05   \n",
              "323814   1  Zynerba Pharmaceuticals, Inc         Manufacturing  8.701643e+04   \n",
              "323815   2  Zynerba Pharmaceuticals, Inc         Manufacturing  4.969939e+04   \n",
              "\n",
              "         book_value BookToMarketRatio ShortFinancialLeverage  \n",
              "1       4642000.000          0.139169               0.069936  \n",
              "2       4902000.000          0.221116               0.067459  \n",
              "3       5265000.000          0.210718               0.098516  \n",
              "4       5541000.000          0.394756               0.060382  \n",
              "5       5616000.000          0.378058               0.085132  \n",
              "...             ...               ...                    ...  \n",
              "323811    87699.257          0.401883               0.002100  \n",
              "323812    78686.999          0.449880               0.002307  \n",
              "323813    70913.334          0.597384               0.002576  \n",
              "323814    65166.970          0.748904               0.002830  \n",
              "323815    57241.873          1.151762               0.003163  \n",
              "\n",
              "[153245 rows x 26 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-692dec03-af0f-4f5d-8dbd-adfc3410b3ac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>sharesoutstanding</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "      <th>BookToMarketRatio</th>\n",
              "      <th>ShortFinancialLeverage</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>...</td>\n",
              "      <td>452271.967</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>3.335506e+07</td>\n",
              "      <td>4642000.000</td>\n",
              "      <td>0.139169</td>\n",
              "      <td>0.069936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>...</td>\n",
              "      <td>453014.579</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.216940e+07</td>\n",
              "      <td>4902000.000</td>\n",
              "      <td>0.221116</td>\n",
              "      <td>0.067459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>...</td>\n",
              "      <td>456366.381</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.498606e+07</td>\n",
              "      <td>5265000.000</td>\n",
              "      <td>0.210718</td>\n",
              "      <td>0.098516</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q1</td>\n",
              "      <td>2841000</td>\n",
              "      <td>1449000</td>\n",
              "      <td>1113000</td>\n",
              "      <td>0</td>\n",
              "      <td>-6000</td>\n",
              "      <td>0</td>\n",
              "      <td>119000</td>\n",
              "      <td>9208000</td>\n",
              "      <td>...</td>\n",
              "      <td>456769.737</td>\n",
              "      <td>3</td>\n",
              "      <td>2001</td>\n",
              "      <td>1</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.403653e+07</td>\n",
              "      <td>5541000.000</td>\n",
              "      <td>0.394756</td>\n",
              "      <td>0.060382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q2</td>\n",
              "      <td>2382000</td>\n",
              "      <td>1406000</td>\n",
              "      <td>1038000</td>\n",
              "      <td>0</td>\n",
              "      <td>273000</td>\n",
              "      <td>0</td>\n",
              "      <td>115000</td>\n",
              "      <td>9080000</td>\n",
              "      <td>...</td>\n",
              "      <td>457072.749</td>\n",
              "      <td>6</td>\n",
              "      <td>2001</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.485486e+07</td>\n",
              "      <td>5616000.000</td>\n",
              "      <td>0.378058</td>\n",
              "      <td>0.085132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>...</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.182206e+05</td>\n",
              "      <td>87699.257</td>\n",
              "      <td>0.401883</td>\n",
              "      <td>0.002100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>...</td>\n",
              "      <td>41251.537</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.749065e+05</td>\n",
              "      <td>78686.999</td>\n",
              "      <td>0.449880</td>\n",
              "      <td>0.002307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>...</td>\n",
              "      <td>41217.537</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.187065e+05</td>\n",
              "      <td>70913.334</td>\n",
              "      <td>0.597384</td>\n",
              "      <td>0.002576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>...</td>\n",
              "      <td>42447.037</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>8.701643e+04</td>\n",
              "      <td>65166.970</td>\n",
              "      <td>0.748904</td>\n",
              "      <td>0.002830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>...</td>\n",
              "      <td>43595.959</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>1.151762</td>\n",
              "      <td>0.003163</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 26 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-692dec03-af0f-4f5d-8dbd-adfc3410b3ac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-692dec03-af0f-4f5d-8dbd-adfc3410b3ac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-692dec03-af0f-4f5d-8dbd-adfc3410b3ac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 162
        }
      ],
      "source": [
        "#ShortFinancialLeverage = shortdebt / totalassets\n",
        "\n",
        "dfExtra = dfExtra.assign(ShortFinancialLeverage=lambda x: x.shortdebt.astype(np.float) / x.totalassets.astype(np.float) )\n",
        "dfExtra"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 163,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 499
        },
        "id": "zDg9TcnLeC3m",
        "outputId": "0ff7461e-cfea-4942-db4e-21f473001757"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count      mean       std       min       25%       50%       75%  \\\n",
              "firm                                                                      \n",
              "A      87.0  0.050791  0.055500  0.000000  0.021751  0.032594  0.059510   \n",
              "AA     23.0  0.002537  0.010334  0.000063  0.000067  0.000075  0.000897   \n",
              "AAIC    0.0       NaN       NaN       NaN       NaN       NaN       NaN   \n",
              "AAL    35.0  0.041839  0.008872  0.027463  0.034723  0.039021  0.047526   \n",
              "AAME    0.0       NaN       NaN       NaN       NaN       NaN       NaN   \n",
              "...     ...       ...       ...       ...       ...       ...       ...   \n",
              "ZVIA    4.0  0.004057  0.001929  0.001888  0.002754  0.004131  0.005434   \n",
              "ZVO    45.0  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000   \n",
              "ZWS    41.0  0.007086  0.010558  0.000060  0.000678  0.004854  0.008571   \n",
              "ZY      5.0  0.064472  0.054049  0.000000  0.016774  0.084137  0.093572   \n",
              "ZYNE   28.0  0.001239  0.001323  0.000000  0.000000  0.000741  0.002374   \n",
              "\n",
              "           max  \n",
              "firm            \n",
              "A     0.243941  \n",
              "AA    0.049896  \n",
              "AAIC       NaN  \n",
              "AAL   0.060055  \n",
              "AAME       NaN  \n",
              "...        ...  \n",
              "ZVIA  0.006076  \n",
              "ZVO   0.000000  \n",
              "ZWS   0.062583  \n",
              "ZY    0.127876  \n",
              "ZYNE  0.003307  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-96599ecf-1f60-43d0-bc3f-4356e22b6ecb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>87.0</td>\n",
              "      <td>0.050791</td>\n",
              "      <td>0.055500</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.021751</td>\n",
              "      <td>0.032594</td>\n",
              "      <td>0.059510</td>\n",
              "      <td>0.243941</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>23.0</td>\n",
              "      <td>0.002537</td>\n",
              "      <td>0.010334</td>\n",
              "      <td>0.000063</td>\n",
              "      <td>0.000067</td>\n",
              "      <td>0.000075</td>\n",
              "      <td>0.000897</td>\n",
              "      <td>0.049896</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>35.0</td>\n",
              "      <td>0.041839</td>\n",
              "      <td>0.008872</td>\n",
              "      <td>0.027463</td>\n",
              "      <td>0.034723</td>\n",
              "      <td>0.039021</td>\n",
              "      <td>0.047526</td>\n",
              "      <td>0.060055</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>4.0</td>\n",
              "      <td>0.004057</td>\n",
              "      <td>0.001929</td>\n",
              "      <td>0.001888</td>\n",
              "      <td>0.002754</td>\n",
              "      <td>0.004131</td>\n",
              "      <td>0.005434</td>\n",
              "      <td>0.006076</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>45.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>41.0</td>\n",
              "      <td>0.007086</td>\n",
              "      <td>0.010558</td>\n",
              "      <td>0.000060</td>\n",
              "      <td>0.000678</td>\n",
              "      <td>0.004854</td>\n",
              "      <td>0.008571</td>\n",
              "      <td>0.062583</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>5.0</td>\n",
              "      <td>0.064472</td>\n",
              "      <td>0.054049</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.016774</td>\n",
              "      <td>0.084137</td>\n",
              "      <td>0.093572</td>\n",
              "      <td>0.127876</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>28.0</td>\n",
              "      <td>0.001239</td>\n",
              "      <td>0.001323</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000741</td>\n",
              "      <td>0.002374</td>\n",
              "      <td>0.003307</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96599ecf-1f60-43d0-bc3f-4356e22b6ecb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-96599ecf-1f60-43d0-bc3f-4356e22b6ecb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-96599ecf-1f60-43d0-bc3f-4356e22b6ecb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 163
        }
      ],
      "source": [
        "dfExtra.groupby('firm')['ShortFinancialLeverage'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 164,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "YEqJUllZeFUx",
        "outputId": "7ced8b83-6643-4552-9375-03ec6f0715b4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm  ShortFinancialLeverage\n",
              "1          A                0.069936\n",
              "2          A                0.067459\n",
              "3          A                0.098516\n",
              "4          A                0.060382\n",
              "5          A                0.085132\n",
              "...      ...                     ...\n",
              "323811  ZYNE                0.002100\n",
              "323812  ZYNE                0.002307\n",
              "323813  ZYNE                0.002576\n",
              "323814  ZYNE                0.002830\n",
              "323815  ZYNE                0.003163\n",
              "\n",
              "[153245 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0d57525e-ced4-4066-b966-28c15a3dcbf9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>ShortFinancialLeverage</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>0.069936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>0.067459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>0.098516</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>0.060382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>0.085132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.002100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.002307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.002576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.002830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.003163</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d57525e-ced4-4066-b966-28c15a3dcbf9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0d57525e-ced4-4066-b966-28c15a3dcbf9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0d57525e-ced4-4066-b966-28c15a3dcbf9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 164
        }
      ],
      "source": [
        "Sample2dDF = dfExtra[['firm', 'ShortFinancialLeverage']]\n",
        "Sample2dDF"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 165,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 672
        },
        "id": "Xmji2tUkeOLU",
        "outputId": "5ab2c256-4246-4f91-fa54-5556ec3797bc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08eab610>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08df3350>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08b22110>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08b3c750>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08b55b50>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08af3b50>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08b168d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08aa9210>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08abb450>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08ad8990>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08a7a550>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c3a0b8750>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08beb2d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c0870fbd0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c086acdd0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c086d2890>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c0866ccd0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c0868b950>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08629e10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08646a90>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 165
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 20 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "dfExtra.hist(column='ShortFinancialLeverage', by='Sector NAICS\\nlevel 1')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 166,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 956
        },
        "id": "TsntyQigeQ4a",
        "outputId": "c1e27e2f-9547-4ae1-f472-067453180233"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q  revenue     cogs       sgae otheropexp extraincome  \\\n",
              "1          A  2000q2  2485000  1261000    1010000          0       42000   \n",
              "2          A  2000q3  2670000  1369000    1091000          0       28000   \n",
              "3          A  2000q4  3372000  1732000    1182000          0       10000   \n",
              "4          A  2001q1  2841000  1449000    1113000          0       -6000   \n",
              "5          A  2001q2  2382000  1406000    1038000          0      273000   \n",
              "...      ...     ...      ...      ...        ...        ...         ...   \n",
              "323811  ZYNE  2021q2      0.0      0.0  9838.4941        0.0  -117.52822   \n",
              "323812  ZYNE  2021q3      0.0      0.0  10210.652        0.0  -376.63675   \n",
              "323813  ZYNE  2021q4      0.0      0.0  8836.4365        0.0   16.937906   \n",
              "323814  ZYNE  2022q1      0.0      0.0   8903.915        0.0   317.25211   \n",
              "323815  ZYNE  2022q2      0.0      0.0  9168.7695        0.0  -775.92786   \n",
              "\n",
              "        finexp incometax totalassets  ... fiscalmonth  year cto  \\\n",
              "1            0     90000     7321000  ...           6  2000   2   \n",
              "2            0     83000     7827000  ...           9  2000   3   \n",
              "3            0    163000     8425000  ...          12  2000   4   \n",
              "4            0    119000     9208000  ...           3  2001   1   \n",
              "5            0    115000     9080000  ...           6  2001   2   \n",
              "...        ...       ...         ...  ...         ...   ...  ..   \n",
              "323811  -5.943       0.0   98195.904  ...         6.0  2021   2   \n",
              "323812  -5.038       0.0    89996.17  ...         9.0  2021   3   \n",
              "323813  -4.433       0.0   81171.507  ...        12.0  2021   4   \n",
              "323814 -96.044       0.0   74381.029  ...         3.0  2022   1   \n",
              "323815 -91.691       0.0   67006.959  ...         6.0  2022   2   \n",
              "\n",
              "                                Name Sector NAICS\\nlevel 1  market_value  \\\n",
              "1          Agilent Technologies, Inc         Manufacturing  3.335506e+07   \n",
              "2          Agilent Technologies, Inc         Manufacturing  2.216940e+07   \n",
              "3          Agilent Technologies, Inc         Manufacturing  2.498606e+07   \n",
              "4          Agilent Technologies, Inc         Manufacturing  1.403653e+07   \n",
              "5          Agilent Technologies, Inc         Manufacturing  1.485486e+07   \n",
              "...                              ...                   ...           ...   \n",
              "323811  Zynerba Pharmaceuticals, Inc         Manufacturing  2.182206e+05   \n",
              "323812  Zynerba Pharmaceuticals, Inc         Manufacturing  1.749065e+05   \n",
              "323813  Zynerba Pharmaceuticals, Inc         Manufacturing  1.187065e+05   \n",
              "323814  Zynerba Pharmaceuticals, Inc         Manufacturing  8.701643e+04   \n",
              "323815  Zynerba Pharmaceuticals, Inc         Manufacturing  4.969939e+04   \n",
              "\n",
              "         book_value BookToMarketRatio ShortFinancialLeverage  \\\n",
              "1       4642000.000          0.139169               0.069936   \n",
              "2       4902000.000          0.221116               0.067459   \n",
              "3       5265000.000          0.210718               0.098516   \n",
              "4       5541000.000          0.394756               0.060382   \n",
              "5       5616000.000          0.378058               0.085132   \n",
              "...             ...               ...                    ...   \n",
              "323811    87699.257          0.401883               0.002100   \n",
              "323812    78686.999          0.449880               0.002307   \n",
              "323813    70913.334          0.597384               0.002576   \n",
              "323814    65166.970          0.748904               0.002830   \n",
              "323815    57241.873          1.151762               0.003163   \n",
              "\n",
              "       LongFinancialLeverage  \n",
              "1                   0.000000  \n",
              "2                   0.000000  \n",
              "3                   0.000000  \n",
              "4                   0.000000  \n",
              "5                   0.000000  \n",
              "...                      ...  \n",
              "323811              0.004770  \n",
              "323812              0.004569  \n",
              "323813              0.004357  \n",
              "323814              0.003976  \n",
              "323815              0.003543  \n",
              "\n",
              "[153245 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9a69c7e3-233f-4228-b4bf-5a0571d9beb7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>fiscalmonth</th>\n",
              "      <th>year</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "      <th>BookToMarketRatio</th>\n",
              "      <th>ShortFinancialLeverage</th>\n",
              "      <th>LongFinancialLeverage</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q2</td>\n",
              "      <td>2485000</td>\n",
              "      <td>1261000</td>\n",
              "      <td>1010000</td>\n",
              "      <td>0</td>\n",
              "      <td>42000</td>\n",
              "      <td>0</td>\n",
              "      <td>90000</td>\n",
              "      <td>7321000</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>2000</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>3.335506e+07</td>\n",
              "      <td>4642000.000</td>\n",
              "      <td>0.139169</td>\n",
              "      <td>0.069936</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q3</td>\n",
              "      <td>2670000</td>\n",
              "      <td>1369000</td>\n",
              "      <td>1091000</td>\n",
              "      <td>0</td>\n",
              "      <td>28000</td>\n",
              "      <td>0</td>\n",
              "      <td>83000</td>\n",
              "      <td>7827000</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>2000</td>\n",
              "      <td>3</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.216940e+07</td>\n",
              "      <td>4902000.000</td>\n",
              "      <td>0.221116</td>\n",
              "      <td>0.067459</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>2000q4</td>\n",
              "      <td>3372000</td>\n",
              "      <td>1732000</td>\n",
              "      <td>1182000</td>\n",
              "      <td>0</td>\n",
              "      <td>10000</td>\n",
              "      <td>0</td>\n",
              "      <td>163000</td>\n",
              "      <td>8425000</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>2000</td>\n",
              "      <td>4</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.498606e+07</td>\n",
              "      <td>5265000.000</td>\n",
              "      <td>0.210718</td>\n",
              "      <td>0.098516</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q1</td>\n",
              "      <td>2841000</td>\n",
              "      <td>1449000</td>\n",
              "      <td>1113000</td>\n",
              "      <td>0</td>\n",
              "      <td>-6000</td>\n",
              "      <td>0</td>\n",
              "      <td>119000</td>\n",
              "      <td>9208000</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>2001</td>\n",
              "      <td>1</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.403653e+07</td>\n",
              "      <td>5541000.000</td>\n",
              "      <td>0.394756</td>\n",
              "      <td>0.060382</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>2001q2</td>\n",
              "      <td>2382000</td>\n",
              "      <td>1406000</td>\n",
              "      <td>1038000</td>\n",
              "      <td>0</td>\n",
              "      <td>273000</td>\n",
              "      <td>0</td>\n",
              "      <td>115000</td>\n",
              "      <td>9080000</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>2001</td>\n",
              "      <td>2</td>\n",
              "      <td>Agilent Technologies, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.485486e+07</td>\n",
              "      <td>5616000.000</td>\n",
              "      <td>0.378058</td>\n",
              "      <td>0.085132</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9838.4941</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117.52822</td>\n",
              "      <td>-5.943</td>\n",
              "      <td>0.0</td>\n",
              "      <td>98195.904</td>\n",
              "      <td>...</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.182206e+05</td>\n",
              "      <td>87699.257</td>\n",
              "      <td>0.401883</td>\n",
              "      <td>0.002100</td>\n",
              "      <td>0.004770</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10210.652</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-376.63675</td>\n",
              "      <td>-5.038</td>\n",
              "      <td>0.0</td>\n",
              "      <td>89996.17</td>\n",
              "      <td>...</td>\n",
              "      <td>9.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>3</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.749065e+05</td>\n",
              "      <td>78686.999</td>\n",
              "      <td>0.449880</td>\n",
              "      <td>0.002307</td>\n",
              "      <td>0.004569</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8836.4365</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.937906</td>\n",
              "      <td>-4.433</td>\n",
              "      <td>0.0</td>\n",
              "      <td>81171.507</td>\n",
              "      <td>...</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2021</td>\n",
              "      <td>4</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>1.187065e+05</td>\n",
              "      <td>70913.334</td>\n",
              "      <td>0.597384</td>\n",
              "      <td>0.002576</td>\n",
              "      <td>0.004357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8903.915</td>\n",
              "      <td>0.0</td>\n",
              "      <td>317.25211</td>\n",
              "      <td>-96.044</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74381.029</td>\n",
              "      <td>...</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>1</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>8.701643e+04</td>\n",
              "      <td>65166.970</td>\n",
              "      <td>0.748904</td>\n",
              "      <td>0.002830</td>\n",
              "      <td>0.003976</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9168.7695</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-775.92786</td>\n",
              "      <td>-91.691</td>\n",
              "      <td>0.0</td>\n",
              "      <td>67006.959</td>\n",
              "      <td>...</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2022</td>\n",
              "      <td>2</td>\n",
              "      <td>Zynerba Pharmaceuticals, Inc</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>4.969939e+04</td>\n",
              "      <td>57241.873</td>\n",
              "      <td>1.151762</td>\n",
              "      <td>0.003163</td>\n",
              "      <td>0.003543</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 27 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a69c7e3-233f-4228-b4bf-5a0571d9beb7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9a69c7e3-233f-4228-b4bf-5a0571d9beb7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9a69c7e3-233f-4228-b4bf-5a0571d9beb7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 166
        }
      ],
      "source": [
        "#LongFinancialLeverage = longdebt / totalassests\n",
        "\n",
        "dfExtra = dfExtra.assign(LongFinancialLeverage=lambda x: x.longdebt.astype(np.float) / x.totalassets.astype(np.float) )\n",
        "dfExtra"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 167,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 499
        },
        "id": "uO8plYXNeXVh",
        "outputId": "0730c8d1-d29c-44c4-b889-0db11c05672e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count      mean       std       min       25%       50%       75%  \\\n",
              "firm                                                                      \n",
              "A      87.0  0.193547  0.076053  0.000000  0.171441  0.206944  0.238204   \n",
              "AA     23.0  0.116602  0.027216  0.079555  0.096540  0.114875  0.127486   \n",
              "AAIC   78.0  0.044300  0.052730  0.000979  0.015593  0.018735  0.057950   \n",
              "AAL    35.0  0.416729  0.063125  0.339314  0.360731  0.413919  0.441616   \n",
              "AAME   45.0  0.107555  0.018407  0.083265  0.090759  0.104938  0.128502   \n",
              "...     ...       ...       ...       ...       ...       ...       ...   \n",
              "ZVIA    4.0  0.001865  0.002161  0.000008  0.000025  0.001647  0.003487   \n",
              "ZVO    45.0  0.000712  0.004776  0.000000  0.000000  0.000000  0.000000   \n",
              "ZWS    41.0  0.479835  0.102009  0.322382  0.385156  0.465212  0.574085   \n",
              "ZY      5.0  0.156309  0.172475  0.000000  0.000000  0.110154  0.293062   \n",
              "ZYNE   28.0  0.001005  0.001805  0.000000  0.000000  0.000000  0.000746   \n",
              "\n",
              "           max  \n",
              "firm            \n",
              "A     0.381503  \n",
              "AA    0.178105  \n",
              "AAIC  0.206888  \n",
              "AAL   0.542572  \n",
              "AAME  0.150019  \n",
              "...        ...  \n",
              "ZVIA  0.004155  \n",
              "ZVO   0.032038  \n",
              "ZWS   0.631874  \n",
              "ZY    0.378329  \n",
              "ZYNE  0.004826  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-afecbf8d-20bf-4720-9bc1-7426b3c4e9a2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>87.0</td>\n",
              "      <td>0.193547</td>\n",
              "      <td>0.076053</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.171441</td>\n",
              "      <td>0.206944</td>\n",
              "      <td>0.238204</td>\n",
              "      <td>0.381503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>23.0</td>\n",
              "      <td>0.116602</td>\n",
              "      <td>0.027216</td>\n",
              "      <td>0.079555</td>\n",
              "      <td>0.096540</td>\n",
              "      <td>0.114875</td>\n",
              "      <td>0.127486</td>\n",
              "      <td>0.178105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>78.0</td>\n",
              "      <td>0.044300</td>\n",
              "      <td>0.052730</td>\n",
              "      <td>0.000979</td>\n",
              "      <td>0.015593</td>\n",
              "      <td>0.018735</td>\n",
              "      <td>0.057950</td>\n",
              "      <td>0.206888</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>35.0</td>\n",
              "      <td>0.416729</td>\n",
              "      <td>0.063125</td>\n",
              "      <td>0.339314</td>\n",
              "      <td>0.360731</td>\n",
              "      <td>0.413919</td>\n",
              "      <td>0.441616</td>\n",
              "      <td>0.542572</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>45.0</td>\n",
              "      <td>0.107555</td>\n",
              "      <td>0.018407</td>\n",
              "      <td>0.083265</td>\n",
              "      <td>0.090759</td>\n",
              "      <td>0.104938</td>\n",
              "      <td>0.128502</td>\n",
              "      <td>0.150019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>4.0</td>\n",
              "      <td>0.001865</td>\n",
              "      <td>0.002161</td>\n",
              "      <td>0.000008</td>\n",
              "      <td>0.000025</td>\n",
              "      <td>0.001647</td>\n",
              "      <td>0.003487</td>\n",
              "      <td>0.004155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>45.0</td>\n",
              "      <td>0.000712</td>\n",
              "      <td>0.004776</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.032038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>41.0</td>\n",
              "      <td>0.479835</td>\n",
              "      <td>0.102009</td>\n",
              "      <td>0.322382</td>\n",
              "      <td>0.385156</td>\n",
              "      <td>0.465212</td>\n",
              "      <td>0.574085</td>\n",
              "      <td>0.631874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>5.0</td>\n",
              "      <td>0.156309</td>\n",
              "      <td>0.172475</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.110154</td>\n",
              "      <td>0.293062</td>\n",
              "      <td>0.378329</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>28.0</td>\n",
              "      <td>0.001005</td>\n",
              "      <td>0.001805</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000746</td>\n",
              "      <td>0.004826</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-afecbf8d-20bf-4720-9bc1-7426b3c4e9a2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-afecbf8d-20bf-4720-9bc1-7426b3c4e9a2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-afecbf8d-20bf-4720-9bc1-7426b3c4e9a2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 167
        }
      ],
      "source": [
        "dfExtra.groupby('firm')['LongFinancialLeverage'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 168,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RcvvD-AieenF",
        "outputId": "ad8420cc-88c6-470e-cae1-c9d708592921"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm  LongFinancialLeverage\n",
              "1          A               0.000000\n",
              "2          A               0.000000\n",
              "3          A               0.000000\n",
              "4          A               0.000000\n",
              "5          A               0.000000\n",
              "...      ...                    ...\n",
              "323811  ZYNE               0.004770\n",
              "323812  ZYNE               0.004569\n",
              "323813  ZYNE               0.004357\n",
              "323814  ZYNE               0.003976\n",
              "323815  ZYNE               0.003543\n",
              "\n",
              "[153245 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0340f48b-71c5-48b1-8c97-01331dfb6104\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>LongFinancialLeverage</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323811</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.004770</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323812</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.004569</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323813</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.004357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323814</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.003976</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323815</th>\n",
              "      <td>ZYNE</td>\n",
              "      <td>0.003543</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>153245 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0340f48b-71c5-48b1-8c97-01331dfb6104')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0340f48b-71c5-48b1-8c97-01331dfb6104 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0340f48b-71c5-48b1-8c97-01331dfb6104');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 168
        }
      ],
      "source": [
        "Sample3dDF = dfExtra[['firm', 'LongFinancialLeverage']]\n",
        "Sample3dDF"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 169,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 672
        },
        "id": "nACl-egoegAY",
        "outputId": "9c352c4b-71e0-44cc-d0c9-76578510af9b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c14a30710>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c0840f7d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c083a9550>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c083be090>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08361190>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c083845d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c0839ea50>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08332310>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c083324d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c085ed910>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c082fda10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08562bd0>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c0836c050>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c084d35d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c08e6b150>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c07f24b90>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f5c07f41d50>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c07f5f9d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c07efd7d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f5c07f1bfd0>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 169
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 20 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "dfExtra.hist(column='LongFinancialLeverage', by='Sector NAICS\\nlevel 1')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MTGNi2xPemFn"
      },
      "source": [
        "##### Argumentacion\n",
        "\n",
        "- La relacion del valor neto de la firma entre el valor de mercado de la misma.\n",
        "\n",
        "  Una firma cuya relacion tienda a uno signifiacria que el mercado no considera que el valor que genera sea significativo, por lo que la mayoria del valor de la firma en el mercado provendria de los activos que posee.\n",
        "\n",
        "- La relacion entre la deuda a corto plazo y el total de activos.\n",
        "\n",
        "- La relacion entre la deuda a largo plazo y el total de activos.\n",
        "\n",
        "  La relacion de deuda entre los activos nos podria indicar la relacion entre la inversion que ha realizado la firma y cuanto ha recuperado, siendo una relacion que tiende a uno una firma cuya deuda sigue estando en los activos y que todavia no ha logrado subyacerla. Y dependiendo de si es deuda a corto o largo plazo nos podriamos dar una idea de en que rango de tiempo podria ser redituable.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "orKyrLChgRAz"
      },
      "source": [
        "#### Calculate and explain earnings per share deflated by price."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 170,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g-mhjwHVgPwx",
        "outputId": "a2f3e42e-c897-40f7-ef7e-3937cf7439ff"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['firm', 'q', 'revenue', 'cogs', 'sgae', 'otheropexp', 'extraincome',\n",
              "       'finexp', 'incometax', 'totalassets', 'totalliabilities', 'shortdebt',\n",
              "       'longdebt', 'stockholderequity', 'adjprice', 'originalprice',\n",
              "       'sharesoutstanding', 'fiscalmonth', 'year', 'cto', 'Name',\n",
              "       'Sector NAICS\\nlevel 1', 'market_value', 'book_value',\n",
              "       'BookToMarketRatio', 'ShortFinancialLeverage', 'LongFinancialLeverage'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 170
        }
      ],
      "source": [
        "dfExtra.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 171,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-jIGhFZVgcDy",
        "outputId": "de0dd346-a703-4009-d9f4-83b80fcbe734"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:4: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1         0.367036\n",
              "2         0.342152\n",
              "3         0.668323\n",
              "4         0.337150\n",
              "5         0.210032\n",
              "            ...   \n",
              "323811   -0.241205\n",
              "323812   -0.256530\n",
              "323813   -0.213867\n",
              "323814   -0.200029\n",
              "323815   -0.226007\n",
              "Name: EPS, Length: 153245, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 171
        }
      ],
      "source": [
        "#EPS = netincome / #SharesOutstanding\n",
        "#netincome = revenue - cogs - sgae - otheropexp - incometax - finexp + extraincome\n",
        "\n",
        "dfExtra = dfExtra.assign(netincome=lambda x: x.revenue.astype(np.float) - x.cogs.astype(np.float) - x.sgae.astype(np.float) - x.otheropexp.astype(np.float) - x.incometax.astype(np.float) - x.finexp.astype(np.float) + x.extraincome.astype(np.float))\n",
        "\n",
        "dfExtra = dfExtra.assign(EPS=lambda x: x.netincome.astype(np.float) / x.sharesoutstanding.astype(np.float) )\n",
        "\n",
        "dfExtra['EPS']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 172,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Piw7WCp6g0HN",
        "outputId": "91fe9819-969d-4de8-ee84-5b00373c2646"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "([0,\n",
              "  1,\n",
              "  2,\n",
              "  3,\n",
              "  4,\n",
              "  5,\n",
              "  6,\n",
              "  7,\n",
              "  8,\n",
              "  9,\n",
              "  10,\n",
              "  11,\n",
              "  12,\n",
              "  13,\n",
              "  14,\n",
              "  15,\n",
              "  16,\n",
              "  17,\n",
              "  18,\n",
              "  19,\n",
              "  20,\n",
              "  21,\n",
              "  22,\n",
              "  23,\n",
              "  24,\n",
              "  25,\n",
              "  26,\n",
              "  27,\n",
              "  28,\n",
              "  29,\n",
              "  30,\n",
              "  31,\n",
              "  32,\n",
              "  33,\n",
              "  34,\n",
              "  35,\n",
              "  36,\n",
              "  37,\n",
              "  38,\n",
              "  39,\n",
              "  40,\n",
              "  41,\n",
              "  42,\n",
              "  43,\n",
              "  44,\n",
              "  45,\n",
              "  46,\n",
              "  47,\n",
              "  48,\n",
              "  49,\n",
              "  50,\n",
              "  51,\n",
              "  52,\n",
              "  53,\n",
              "  54,\n",
              "  55,\n",
              "  56,\n",
              "  57,\n",
              "  58,\n",
              "  59,\n",
              "  60,\n",
              "  61,\n",
              "  62,\n",
              "  63,\n",
              "  64,\n",
              "  65,\n",
              "  66,\n",
              "  67,\n",
              "  68,\n",
              "  69,\n",
              "  70,\n",
              "  71,\n",
              "  72,\n",
              "  73,\n",
              "  74,\n",
              "  75,\n",
              "  76,\n",
              "  77,\n",
              "  78,\n",
              "  79,\n",
              "  80,\n",
              "  81,\n",
              "  82,\n",
              "  83,\n",
              "  84,\n",
              "  85,\n",
              "  86,\n",
              "  87,\n",
              "  88,\n",
              "  89,\n",
              "  90,\n",
              "  91,\n",
              "  92,\n",
              "  93,\n",
              "  94,\n",
              "  95,\n",
              "  96,\n",
              "  97,\n",
              "  98,\n",
              "  99,\n",
              "  100,\n",
              "  101,\n",
              "  102,\n",
              "  103,\n",
              "  104,\n",
              "  105,\n",
              "  106,\n",
              "  107,\n",
              "  108,\n",
              "  109,\n",
              "  110,\n",
              "  111,\n",
              "  112,\n",
              "  113,\n",
              "  114,\n",
              "  115,\n",
              "  116,\n",
              "  117,\n",
              "  118,\n",
              "  119,\n",
              "  120,\n",
              "  121,\n",
              "  122,\n",
              "  123,\n",
              "  124,\n",
              "  125,\n",
              "  126,\n",
              "  127,\n",
              "  128,\n",
              "  129,\n",
              "  130,\n",
              "  131,\n",
              "  132,\n",
              "  133,\n",
              "  134,\n",
              "  135,\n",
              "  136,\n",
              "  137,\n",
              "  138,\n",
              "  139,\n",
              "  140,\n",
              "  141,\n",
              "  142,\n",
              "  143,\n",
              "  144,\n",
              "  145,\n",
              "  146,\n",
              "  147,\n",
              "  148,\n",
              "  149,\n",
              "  150,\n",
              "  151,\n",
              "  152,\n",
              "  153,\n",
              "  154,\n",
              "  155,\n",
              "  156,\n",
              "  157,\n",
              "  158,\n",
              "  159,\n",
              "  160,\n",
              "  161,\n",
              "  162,\n",
              "  163,\n",
              "  164,\n",
              "  165,\n",
              "  166,\n",
              "  167,\n",
              "  168,\n",
              "  169,\n",
              "  170,\n",
              "  171,\n",
              "  172,\n",
              "  173,\n",
              "  174,\n",
              "  175,\n",
              "  176,\n",
              "  177,\n",
              "  178,\n",
              "  179,\n",
              "  180,\n",
              "  181,\n",
              "  182,\n",
              "  183,\n",
              "  184,\n",
              "  185,\n",
              "  186,\n",
              "  187,\n",
              "  188,\n",
              "  189,\n",
              "  190,\n",
              "  191,\n",
              "  192,\n",
              "  193,\n",
              "  194,\n",
              "  195,\n",
              "  196,\n",
              "  197,\n",
              "  198,\n",
              "  199,\n",
              "  200,\n",
              "  201,\n",
              "  202,\n",
              "  203,\n",
              "  204,\n",
              "  205,\n",
              "  206,\n",
              "  207,\n",
              "  208,\n",
              "  209,\n",
              "  210,\n",
              "  211,\n",
              "  212,\n",
              "  213,\n",
              "  214,\n",
              "  215,\n",
              "  216,\n",
              "  217,\n",
              "  218,\n",
              "  219,\n",
              "  220,\n",
              "  221,\n",
              "  222,\n",
              "  223,\n",
              "  224,\n",
              "  225,\n",
              "  226,\n",
              "  227,\n",
              "  228,\n",
              "  229,\n",
              "  230,\n",
              "  231,\n",
              "  232,\n",
              "  233,\n",
              "  234,\n",
              "  235,\n",
              "  236,\n",
              "  237,\n",
              "  238,\n",
              "  239,\n",
              "  240,\n",
              "  241,\n",
              "  242,\n",
              "  243,\n",
              "  244,\n",
              "  245,\n",
              "  246,\n",
              "  247,\n",
              "  248,\n",
              "  249,\n",
              "  250,\n",
              "  251,\n",
              "  252,\n",
              "  253,\n",
              "  254,\n",
              "  255,\n",
              "  256,\n",
              "  257,\n",
              "  258,\n",
              "  259,\n",
              "  260,\n",
              "  261,\n",
              "  262,\n",
              "  263,\n",
              "  264,\n",
              "  265,\n",
              "  266,\n",
              "  267,\n",
              "  268,\n",
              "  269,\n",
              "  270,\n",
              "  271,\n",
              "  272,\n",
              "  273,\n",
              "  274,\n",
              "  275,\n",
              "  276,\n",
              "  277,\n",
              "  278,\n",
              "  279,\n",
              "  280,\n",
              "  281,\n",
              "  282,\n",
              "  283,\n",
              "  284,\n",
              "  285,\n",
              "  286,\n",
              "  287,\n",
              "  288,\n",
              "  289,\n",
              "  290,\n",
              "  291,\n",
              "  292,\n",
              "  293,\n",
              "  294,\n",
              "  295,\n",
              "  296,\n",
              "  297,\n",
              "  298,\n",
              "  299,\n",
              "  300,\n",
              "  301,\n",
              "  302,\n",
              "  303,\n",
              "  304,\n",
              "  305,\n",
              "  306,\n",
              "  307,\n",
              "  308,\n",
              "  309,\n",
              "  310,\n",
              "  311,\n",
              "  312,\n",
              "  313,\n",
              "  314,\n",
              "  315,\n",
              "  316,\n",
              "  317,\n",
              "  318,\n",
              "  319,\n",
              "  320,\n",
              "  321,\n",
              "  322,\n",
              "  323,\n",
              "  324,\n",
              "  325,\n",
              "  326,\n",
              "  327,\n",
              "  328,\n",
              "  329,\n",
              "  330,\n",
              "  331,\n",
              "  332,\n",
              "  333,\n",
              "  334,\n",
              "  335,\n",
              "  336,\n",
              "  337,\n",
              "  338,\n",
              "  339,\n",
              "  340,\n",
              "  341,\n",
              "  342,\n",
              "  343,\n",
              "  344,\n",
              "  345,\n",
              "  346,\n",
              "  347,\n",
              "  348,\n",
              "  349,\n",
              "  350,\n",
              "  351,\n",
              "  352,\n",
              "  353,\n",
              "  354,\n",
              "  355,\n",
              "  356,\n",
              "  357,\n",
              "  358,\n",
              "  359,\n",
              "  360,\n",
              "  361,\n",
              "  362,\n",
              "  363,\n",
              "  364,\n",
              "  365,\n",
              "  366,\n",
              "  367,\n",
              "  368,\n",
              "  369,\n",
              "  370,\n",
              "  371,\n",
              "  372,\n",
              "  373,\n",
              "  374,\n",
              "  375,\n",
              "  376,\n",
              "  377,\n",
              "  378,\n",
              "  379,\n",
              "  380,\n",
              "  381,\n",
              "  382,\n",
              "  383,\n",
              "  384,\n",
              "  385,\n",
              "  386,\n",
              "  387,\n",
              "  388,\n",
              "  389,\n",
              "  390,\n",
              "  391,\n",
              "  392,\n",
              "  393,\n",
              "  394,\n",
              "  395,\n",
              "  396,\n",
              "  397,\n",
              "  398,\n",
              "  399,\n",
              "  400,\n",
              "  401,\n",
              "  402,\n",
              "  403,\n",
              "  404,\n",
              "  405,\n",
              "  406,\n",
              "  407,\n",
              "  408,\n",
              "  409,\n",
              "  410,\n",
              "  411,\n",
              "  412,\n",
              "  413,\n",
              "  414,\n",
              "  415,\n",
              "  416,\n",
              "  417,\n",
              "  418,\n",
              "  419,\n",
              "  420,\n",
              "  421,\n",
              "  422,\n",
              "  423,\n",
              "  424,\n",
              "  425,\n",
              "  426,\n",
              "  427,\n",
              "  428,\n",
              "  429,\n",
              "  430,\n",
              "  431,\n",
              "  432,\n",
              "  433,\n",
              "  434,\n",
              "  435,\n",
              "  436,\n",
              "  437,\n",
              "  438,\n",
              "  439,\n",
              "  440,\n",
              "  441,\n",
              "  442,\n",
              "  443,\n",
              "  444,\n",
              "  445,\n",
              "  446,\n",
              "  447,\n",
              "  448,\n",
              "  449,\n",
              "  450,\n",
              "  451,\n",
              "  452,\n",
              "  453,\n",
              "  454,\n",
              "  455,\n",
              "  456,\n",
              "  457,\n",
              "  458,\n",
              "  459,\n",
              "  460,\n",
              "  461,\n",
              "  462,\n",
              "  463,\n",
              "  464,\n",
              "  465,\n",
              "  466,\n",
              "  467,\n",
              "  468,\n",
              "  469,\n",
              "  470,\n",
              "  471,\n",
              "  472,\n",
              "  473,\n",
              "  474,\n",
              "  475,\n",
              "  476,\n",
              "  477,\n",
              "  478,\n",
              "  479,\n",
              "  480,\n",
              "  481,\n",
              "  482,\n",
              "  483,\n",
              "  484,\n",
              "  485,\n",
              "  486,\n",
              "  487,\n",
              "  488,\n",
              "  489,\n",
              "  490,\n",
              "  491,\n",
              "  492,\n",
              "  493,\n",
              "  494,\n",
              "  495,\n",
              "  496,\n",
              "  497,\n",
              "  498,\n",
              "  499,\n",
              "  500,\n",
              "  501,\n",
              "  502,\n",
              "  503,\n",
              "  504,\n",
              "  505,\n",
              "  506,\n",
              "  507,\n",
              "  508,\n",
              "  509,\n",
              "  510,\n",
              "  511,\n",
              "  512,\n",
              "  513,\n",
              "  514,\n",
              "  515,\n",
              "  516,\n",
              "  517,\n",
              "  518,\n",
              "  519,\n",
              "  520,\n",
              "  521,\n",
              "  522,\n",
              "  523,\n",
              "  524,\n",
              "  525,\n",
              "  526,\n",
              "  527,\n",
              "  528,\n",
              "  529,\n",
              "  530,\n",
              "  531,\n",
              "  532,\n",
              "  533,\n",
              "  534,\n",
              "  535,\n",
              "  536,\n",
              "  537,\n",
              "  538,\n",
              "  539,\n",
              "  540,\n",
              "  541,\n",
              "  542,\n",
              "  543,\n",
              "  544,\n",
              "  545,\n",
              "  546,\n",
              "  547,\n",
              "  548,\n",
              "  549,\n",
              "  550,\n",
              "  551,\n",
              "  552,\n",
              "  553,\n",
              "  554,\n",
              "  555,\n",
              "  556,\n",
              "  557,\n",
              "  558,\n",
              "  559,\n",
              "  560,\n",
              "  561,\n",
              "  562,\n",
              "  563,\n",
              "  564,\n",
              "  565,\n",
              "  566,\n",
              "  567,\n",
              "  568,\n",
              "  569,\n",
              "  570,\n",
              "  571,\n",
              "  572,\n",
              "  573,\n",
              "  574,\n",
              "  575,\n",
              "  576,\n",
              "  577,\n",
              "  578,\n",
              "  579,\n",
              "  580,\n",
              "  581,\n",
              "  582,\n",
              "  583,\n",
              "  584,\n",
              "  585,\n",
              "  586,\n",
              "  587,\n",
              "  588,\n",
              "  589,\n",
              "  590,\n",
              "  591,\n",
              "  592,\n",
              "  593,\n",
              "  594,\n",
              "  595,\n",
              "  596,\n",
              "  597,\n",
              "  598,\n",
              "  599,\n",
              "  600,\n",
              "  601,\n",
              "  602,\n",
              "  603,\n",
              "  604,\n",
              "  605,\n",
              "  606,\n",
              "  607,\n",
              "  608,\n",
              "  609,\n",
              "  610,\n",
              "  611,\n",
              "  612,\n",
              "  613,\n",
              "  614,\n",
              "  615,\n",
              "  616,\n",
              "  617,\n",
              "  618,\n",
              "  619,\n",
              "  620,\n",
              "  621,\n",
              "  622,\n",
              "  623,\n",
              "  624,\n",
              "  625,\n",
              "  626,\n",
              "  627,\n",
              "  628,\n",
              "  629,\n",
              "  630,\n",
              "  631,\n",
              "  632,\n",
              "  633,\n",
              "  634,\n",
              "  635,\n",
              "  636,\n",
              "  637,\n",
              "  638,\n",
              "  639,\n",
              "  640,\n",
              "  641,\n",
              "  642,\n",
              "  643,\n",
              "  644,\n",
              "  645,\n",
              "  646,\n",
              "  647,\n",
              "  648,\n",
              "  649,\n",
              "  650,\n",
              "  651,\n",
              "  652,\n",
              "  653,\n",
              "  654,\n",
              "  655,\n",
              "  656,\n",
              "  657,\n",
              "  658,\n",
              "  659,\n",
              "  660,\n",
              "  661,\n",
              "  662,\n",
              "  663,\n",
              "  664,\n",
              "  665,\n",
              "  666,\n",
              "  667,\n",
              "  668,\n",
              "  669,\n",
              "  670,\n",
              "  671,\n",
              "  672,\n",
              "  673,\n",
              "  674,\n",
              "  675,\n",
              "  676,\n",
              "  677,\n",
              "  678,\n",
              "  679,\n",
              "  680,\n",
              "  681,\n",
              "  682,\n",
              "  683,\n",
              "  684,\n",
              "  685,\n",
              "  686,\n",
              "  687,\n",
              "  688,\n",
              "  689,\n",
              "  690,\n",
              "  691,\n",
              "  692,\n",
              "  693,\n",
              "  694,\n",
              "  695,\n",
              "  696,\n",
              "  697,\n",
              "  698,\n",
              "  699,\n",
              "  700,\n",
              "  701,\n",
              "  702,\n",
              "  703,\n",
              "  704,\n",
              "  705,\n",
              "  706,\n",
              "  707,\n",
              "  708,\n",
              "  709,\n",
              "  710,\n",
              "  711,\n",
              "  712,\n",
              "  713,\n",
              "  714,\n",
              "  715,\n",
              "  716,\n",
              "  717,\n",
              "  718,\n",
              "  719,\n",
              "  720,\n",
              "  721,\n",
              "  722,\n",
              "  723,\n",
              "  724,\n",
              "  725,\n",
              "  726,\n",
              "  727,\n",
              "  728,\n",
              "  729,\n",
              "  730,\n",
              "  731,\n",
              "  732,\n",
              "  733,\n",
              "  734,\n",
              "  735,\n",
              "  736,\n",
              "  737,\n",
              "  738,\n",
              "  739,\n",
              "  740,\n",
              "  741,\n",
              "  742,\n",
              "  743,\n",
              "  744,\n",
              "  745,\n",
              "  746,\n",
              "  747,\n",
              "  748,\n",
              "  749,\n",
              "  750,\n",
              "  751,\n",
              "  752,\n",
              "  753,\n",
              "  754,\n",
              "  755,\n",
              "  756,\n",
              "  757,\n",
              "  758,\n",
              "  759,\n",
              "  760,\n",
              "  761,\n",
              "  762,\n",
              "  763,\n",
              "  764,\n",
              "  765,\n",
              "  766,\n",
              "  767,\n",
              "  768,\n",
              "  769,\n",
              "  770,\n",
              "  771,\n",
              "  772,\n",
              "  773,\n",
              "  774,\n",
              "  775,\n",
              "  776,\n",
              "  777,\n",
              "  778,\n",
              "  779,\n",
              "  780,\n",
              "  781,\n",
              "  782,\n",
              "  783,\n",
              "  784,\n",
              "  785,\n",
              "  786,\n",
              "  787,\n",
              "  788,\n",
              "  789,\n",
              "  790,\n",
              "  791,\n",
              "  792,\n",
              "  793,\n",
              "  794,\n",
              "  795,\n",
              "  796,\n",
              "  797,\n",
              "  798,\n",
              "  799,\n",
              "  800,\n",
              "  801,\n",
              "  802,\n",
              "  803,\n",
              "  804,\n",
              "  805,\n",
              "  806,\n",
              "  807,\n",
              "  808,\n",
              "  809,\n",
              "  810,\n",
              "  811,\n",
              "  812,\n",
              "  813,\n",
              "  814,\n",
              "  815,\n",
              "  816,\n",
              "  817,\n",
              "  818,\n",
              "  819,\n",
              "  820,\n",
              "  821,\n",
              "  822,\n",
              "  823,\n",
              "  824,\n",
              "  825,\n",
              "  826,\n",
              "  827,\n",
              "  828,\n",
              "  829,\n",
              "  830,\n",
              "  831,\n",
              "  832,\n",
              "  833,\n",
              "  834,\n",
              "  835,\n",
              "  836,\n",
              "  837,\n",
              "  838,\n",
              "  839,\n",
              "  840,\n",
              "  841,\n",
              "  842,\n",
              "  843,\n",
              "  844,\n",
              "  845,\n",
              "  846,\n",
              "  847,\n",
              "  848,\n",
              "  849,\n",
              "  850,\n",
              "  851,\n",
              "  852,\n",
              "  853,\n",
              "  854,\n",
              "  855,\n",
              "  856,\n",
              "  857,\n",
              "  858,\n",
              "  859,\n",
              "  860,\n",
              "  861,\n",
              "  862,\n",
              "  863,\n",
              "  864,\n",
              "  865,\n",
              "  866,\n",
              "  867,\n",
              "  868,\n",
              "  869,\n",
              "  870,\n",
              "  871,\n",
              "  872,\n",
              "  873,\n",
              "  874,\n",
              "  875,\n",
              "  876,\n",
              "  877,\n",
              "  878,\n",
              "  879,\n",
              "  880,\n",
              "  881,\n",
              "  882,\n",
              "  883,\n",
              "  884,\n",
              "  885,\n",
              "  886,\n",
              "  887,\n",
              "  888,\n",
              "  889,\n",
              "  890,\n",
              "  891,\n",
              "  892,\n",
              "  893,\n",
              "  894,\n",
              "  895,\n",
              "  896,\n",
              "  897,\n",
              "  898,\n",
              "  899,\n",
              "  900,\n",
              "  901,\n",
              "  902,\n",
              "  903,\n",
              "  904,\n",
              "  905,\n",
              "  906,\n",
              "  907,\n",
              "  908,\n",
              "  909,\n",
              "  910,\n",
              "  911,\n",
              "  912,\n",
              "  913,\n",
              "  914,\n",
              "  915,\n",
              "  916,\n",
              "  917,\n",
              "  918,\n",
              "  919,\n",
              "  920,\n",
              "  921,\n",
              "  922,\n",
              "  923,\n",
              "  924,\n",
              "  925,\n",
              "  926,\n",
              "  927,\n",
              "  928,\n",
              "  929,\n",
              "  930,\n",
              "  931,\n",
              "  932,\n",
              "  933,\n",
              "  934,\n",
              "  935,\n",
              "  936,\n",
              "  937,\n",
              "  938,\n",
              "  939,\n",
              "  940,\n",
              "  941,\n",
              "  942,\n",
              "  943,\n",
              "  944,\n",
              "  945,\n",
              "  946,\n",
              "  947,\n",
              "  948,\n",
              "  949,\n",
              "  950,\n",
              "  951,\n",
              "  952,\n",
              "  953,\n",
              "  954,\n",
              "  955,\n",
              "  956,\n",
              "  957,\n",
              "  958,\n",
              "  959,\n",
              "  960,\n",
              "  961,\n",
              "  962,\n",
              "  963,\n",
              "  964,\n",
              "  965,\n",
              "  966,\n",
              "  967,\n",
              "  968,\n",
              "  969,\n",
              "  970,\n",
              "  971,\n",
              "  972,\n",
              "  973,\n",
              "  974,\n",
              "  975,\n",
              "  976,\n",
              "  977,\n",
              "  978,\n",
              "  979,\n",
              "  980,\n",
              "  981,\n",
              "  982,\n",
              "  983,\n",
              "  984,\n",
              "  985,\n",
              "  986,\n",
              "  987,\n",
              "  988,\n",
              "  989,\n",
              "  990,\n",
              "  991,\n",
              "  992,\n",
              "  993,\n",
              "  994,\n",
              "  995,\n",
              "  996,\n",
              "  997,\n",
              "  998,\n",
              "  999,\n",
              "  ...],\n",
              " <a list of 3559 Text major ticklabel objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 172
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(dfExtra['firm'], dfExtra['EPS'])\n",
        "\n",
        "plt.xticks(rotation = 45, ha = \"right\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 173,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621
        },
        "id": "2QjSxIhZhCiJ",
        "outputId": "5a567b35-84e1-4db2-df14-06b71b12c0c9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],\n",
              " <a list of 19 Text major ticklabel objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 173
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.scatter(dfExtra['Sector NAICS\\nlevel 1'], dfExtra['EPS'])\n",
        "\n",
        "plt.xticks(rotation = 45, ha = \"right\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 174,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "Qp4fj8lNhJm9",
        "outputId": "6629ec16-8161-496a-a1f4-ff360ee6a8f4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      count      mean       std       min       25%       50%       75%  \\\n",
              "firm                                                                      \n",
              "A      87.0  0.420154  0.882221 -3.272292  0.212429  0.440763  0.636054   \n",
              "AA     23.0  0.107468  1.385143 -2.166711 -1.059465  0.230570  0.872640   \n",
              "AAIC   77.0  0.148678  1.799500 -2.562073 -0.202300  0.192839  0.547008   \n",
              "AAL    35.0 -0.058771  2.753022 -9.438679  0.145322  0.740485  1.294718   \n",
              "AAME   44.0  0.055248  0.145597 -0.395677  0.011156  0.045079  0.099880   \n",
              "...     ...       ...       ...       ...       ...       ...       ...   \n",
              "ZVIA    4.0 -0.260217  0.116521 -0.400173 -0.334244 -0.238637 -0.164610   \n",
              "ZVO    44.0 -0.044586  0.498383 -1.778515 -0.218795 -0.011200  0.214259   \n",
              "ZWS    41.0  0.202404  0.292077 -0.596276  0.119546  0.243112  0.367039   \n",
              "ZY      5.0 -0.911208  0.177125 -1.129214 -1.005066 -0.959363 -0.763060   \n",
              "ZYNE   28.0 -0.479600  0.216884 -0.907455 -0.627237 -0.463632 -0.296105   \n",
              "\n",
              "            max  \n",
              "firm             \n",
              "A      6.500151  \n",
              "AA     2.976438  \n",
              "AAIC  13.361668  \n",
              "AAL    5.205247  \n",
              "AAME   0.580378  \n",
              "...         ...  \n",
              "ZVIA  -0.163422  \n",
              "ZVO    0.905355  \n",
              "ZWS    0.785181  \n",
              "ZY    -0.699335  \n",
              "ZYNE  -0.083903  \n",
              "\n",
              "[3559 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1d675894-f4c8-4dbe-bf43-caf99d150667\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>firm</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>A</th>\n",
              "      <td>87.0</td>\n",
              "      <td>0.420154</td>\n",
              "      <td>0.882221</td>\n",
              "      <td>-3.272292</td>\n",
              "      <td>0.212429</td>\n",
              "      <td>0.440763</td>\n",
              "      <td>0.636054</td>\n",
              "      <td>6.500151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AA</th>\n",
              "      <td>23.0</td>\n",
              "      <td>0.107468</td>\n",
              "      <td>1.385143</td>\n",
              "      <td>-2.166711</td>\n",
              "      <td>-1.059465</td>\n",
              "      <td>0.230570</td>\n",
              "      <td>0.872640</td>\n",
              "      <td>2.976438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAIC</th>\n",
              "      <td>77.0</td>\n",
              "      <td>0.148678</td>\n",
              "      <td>1.799500</td>\n",
              "      <td>-2.562073</td>\n",
              "      <td>-0.202300</td>\n",
              "      <td>0.192839</td>\n",
              "      <td>0.547008</td>\n",
              "      <td>13.361668</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAL</th>\n",
              "      <td>35.0</td>\n",
              "      <td>-0.058771</td>\n",
              "      <td>2.753022</td>\n",
              "      <td>-9.438679</td>\n",
              "      <td>0.145322</td>\n",
              "      <td>0.740485</td>\n",
              "      <td>1.294718</td>\n",
              "      <td>5.205247</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AAME</th>\n",
              "      <td>44.0</td>\n",
              "      <td>0.055248</td>\n",
              "      <td>0.145597</td>\n",
              "      <td>-0.395677</td>\n",
              "      <td>0.011156</td>\n",
              "      <td>0.045079</td>\n",
              "      <td>0.099880</td>\n",
              "      <td>0.580378</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVIA</th>\n",
              "      <td>4.0</td>\n",
              "      <td>-0.260217</td>\n",
              "      <td>0.116521</td>\n",
              "      <td>-0.400173</td>\n",
              "      <td>-0.334244</td>\n",
              "      <td>-0.238637</td>\n",
              "      <td>-0.164610</td>\n",
              "      <td>-0.163422</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZVO</th>\n",
              "      <td>44.0</td>\n",
              "      <td>-0.044586</td>\n",
              "      <td>0.498383</td>\n",
              "      <td>-1.778515</td>\n",
              "      <td>-0.218795</td>\n",
              "      <td>-0.011200</td>\n",
              "      <td>0.214259</td>\n",
              "      <td>0.905355</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZWS</th>\n",
              "      <td>41.0</td>\n",
              "      <td>0.202404</td>\n",
              "      <td>0.292077</td>\n",
              "      <td>-0.596276</td>\n",
              "      <td>0.119546</td>\n",
              "      <td>0.243112</td>\n",
              "      <td>0.367039</td>\n",
              "      <td>0.785181</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZY</th>\n",
              "      <td>5.0</td>\n",
              "      <td>-0.911208</td>\n",
              "      <td>0.177125</td>\n",
              "      <td>-1.129214</td>\n",
              "      <td>-1.005066</td>\n",
              "      <td>-0.959363</td>\n",
              "      <td>-0.763060</td>\n",
              "      <td>-0.699335</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ZYNE</th>\n",
              "      <td>28.0</td>\n",
              "      <td>-0.479600</td>\n",
              "      <td>0.216884</td>\n",
              "      <td>-0.907455</td>\n",
              "      <td>-0.627237</td>\n",
              "      <td>-0.463632</td>\n",
              "      <td>-0.296105</td>\n",
              "      <td>-0.083903</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3559 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d675894-f4c8-4dbe-bf43-caf99d150667')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1d675894-f4c8-4dbe-bf43-caf99d150667 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1d675894-f4c8-4dbe-bf43-caf99d150667');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 174
        }
      ],
      "source": [
        "dfExtra.groupby('firm')['EPS'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 175,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 525
        },
        "id": "HBkFx5oUhMCw",
        "outputId": "71023612-f6e9-4859-f1f2-a1e27bbf7f75"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       firm       q    revenue       cogs      sgae otheropexp extraincome  \\\n",
              "19973   APA  2022q2    3052000          0   1529000          0     -226000   \n",
              "313754  WLK  2004q3   572031.0   487520.0   15055.0      516.0    -12884.0   \n",
              "256495  SEB  2020q4  1990000.0  1760000.0   88000.0        0.0    124000.0   \n",
              "316703  WTM  2021q4   944800.0        0.0  313300.0        0.0     -7200.0   \n",
              "316699  WTM  2020q4   520800.0        0.0  163500.0        0.0     14300.0   \n",
              "\n",
              "         finexp incometax totalassets  ... cto  \\\n",
              "19973         0    394000    13839000  ...   2   \n",
              "313754  10144.0   17595.0   1505866.0  ...   3   \n",
              "256495  -3000.0    4000.0   6399000.0  ...   4   \n",
              "316703      0.0   -3300.0   7000700.0  ...   4   \n",
              "316699      0.0 -117600.0   4831400.0  ...   4   \n",
              "\n",
              "                                       Name  \\\n",
              "19973                           Apache Corp   \n",
              "313754                        Westlake Corp   \n",
              "256495                        Seaboard Corp   \n",
              "316703  White Mountains Insurance Group Ltd   \n",
              "316699  White Mountains Insurance Group Ltd   \n",
              "\n",
              "                                Sector NAICS\\nlevel 1  market_value  \\\n",
              "19973   Mining, Quarrying, and Oil and Gas Extraction  3.490000e+01   \n",
              "313754                                  Manufacturing  2.486450e+01   \n",
              "256495                                Wholesale Trade  3.518321e+06   \n",
              "316703                          Finance and Insurance  3.059719e+06   \n",
              "316699                          Finance and Insurance  3.104058e+06   \n",
              "\n",
              "       book_value BookToMarketRatio ShortFinancialLeverage  \\\n",
              "19973   2490000.0      71346.704871               0.009032   \n",
              "313754   722938.0      29075.107080               0.000797   \n",
              "256495  3828000.0          1.088019               0.060634   \n",
              "316703  3704700.0          1.210797                    NaN   \n",
              "316699  3817900.0          1.229970                    NaN   \n",
              "\n",
              "       LongFinancialLeverage netincome            EPS  \n",
              "19973               0.352988  903000.0  903000.000000  \n",
              "313754              0.230558   28317.0   25396.412556  \n",
              "256495              0.160181  265000.0     228.294964  \n",
              "316703              0.070036  627600.0     207.967998  \n",
              "316699              0.074285  489200.0     157.704147  \n",
              "\n",
              "[5 rows x 29 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-586b8764-9d72-4b1e-a1a3-33629e8522fd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "      <th>BookToMarketRatio</th>\n",
              "      <th>ShortFinancialLeverage</th>\n",
              "      <th>LongFinancialLeverage</th>\n",
              "      <th>netincome</th>\n",
              "      <th>EPS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>19973</th>\n",
              "      <td>APA</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>3052000</td>\n",
              "      <td>0</td>\n",
              "      <td>1529000</td>\n",
              "      <td>0</td>\n",
              "      <td>-226000</td>\n",
              "      <td>0</td>\n",
              "      <td>394000</td>\n",
              "      <td>13839000</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>Apache Corp</td>\n",
              "      <td>Mining, Quarrying, and Oil and Gas Extraction</td>\n",
              "      <td>3.490000e+01</td>\n",
              "      <td>2490000.0</td>\n",
              "      <td>71346.704871</td>\n",
              "      <td>0.009032</td>\n",
              "      <td>0.352988</td>\n",
              "      <td>903000.0</td>\n",
              "      <td>903000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>313754</th>\n",
              "      <td>WLK</td>\n",
              "      <td>2004q3</td>\n",
              "      <td>572031.0</td>\n",
              "      <td>487520.0</td>\n",
              "      <td>15055.0</td>\n",
              "      <td>516.0</td>\n",
              "      <td>-12884.0</td>\n",
              "      <td>10144.0</td>\n",
              "      <td>17595.0</td>\n",
              "      <td>1505866.0</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>Westlake Corp</td>\n",
              "      <td>Manufacturing</td>\n",
              "      <td>2.486450e+01</td>\n",
              "      <td>722938.0</td>\n",
              "      <td>29075.107080</td>\n",
              "      <td>0.000797</td>\n",
              "      <td>0.230558</td>\n",
              "      <td>28317.0</td>\n",
              "      <td>25396.412556</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>256495</th>\n",
              "      <td>SEB</td>\n",
              "      <td>2020q4</td>\n",
              "      <td>1990000.0</td>\n",
              "      <td>1760000.0</td>\n",
              "      <td>88000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>124000.0</td>\n",
              "      <td>-3000.0</td>\n",
              "      <td>4000.0</td>\n",
              "      <td>6399000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>Seaboard Corp</td>\n",
              "      <td>Wholesale Trade</td>\n",
              "      <td>3.518321e+06</td>\n",
              "      <td>3828000.0</td>\n",
              "      <td>1.088019</td>\n",
              "      <td>0.060634</td>\n",
              "      <td>0.160181</td>\n",
              "      <td>265000.0</td>\n",
              "      <td>228.294964</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316703</th>\n",
              "      <td>WTM</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>944800.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>313300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-7200.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-3300.0</td>\n",
              "      <td>7000700.0</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>White Mountains Insurance Group Ltd</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>3.059719e+06</td>\n",
              "      <td>3704700.0</td>\n",
              "      <td>1.210797</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.070036</td>\n",
              "      <td>627600.0</td>\n",
              "      <td>207.967998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316699</th>\n",
              "      <td>WTM</td>\n",
              "      <td>2020q4</td>\n",
              "      <td>520800.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>163500.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>14300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-117600.0</td>\n",
              "      <td>4831400.0</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>White Mountains Insurance Group Ltd</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>3.104058e+06</td>\n",
              "      <td>3817900.0</td>\n",
              "      <td>1.229970</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.074285</td>\n",
              "      <td>489200.0</td>\n",
              "      <td>157.704147</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 29 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-586b8764-9d72-4b1e-a1a3-33629e8522fd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-586b8764-9d72-4b1e-a1a3-33629e8522fd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-586b8764-9d72-4b1e-a1a3-33629e8522fd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 175
        }
      ],
      "source": [
        "sorted_df = dfExtra.sort_values(by=['EPS'], ascending=False)\n",
        "sorted_df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yKdxzMnVhU93"
      },
      "source": [
        "##### Respuesta\n",
        "\n",
        "Si bien es dificil decir si el comportamiento es similar entre la firmas y las industrias por el orden de magnitud, podiamos afirmar que los ingresos netos entre las unidades de stocks va acorde de lo que podriamos esperar.\n",
        "\n",
        "En el caso de la industria de la manofactura tiene una relacion de perdida de ingresos netos entre las unidades de stocks que concuerdan con el comportamiento visto de la industria en los puntos anteriores"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Tzib0cX_i6ut"
      },
      "source": [
        "### 2.2.2 About statistical modeling"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SjYVxLF5jBM6"
      },
      "source": [
        "#### You have to select a group of firms according to their general industry classification:\n",
        "\n",
        "- Manufacturing industries\n",
        "- Commercial industries (retail and wholesale)\n",
        "- Service industries\n",
        "- Financial services"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P9BmppRMj5OT"
      },
      "source": [
        "#### Using your subset of firms that belong to your industry, which factors (variables) might be related to annual stock return one quarter in the future? Select at least 3 factors and briefly explain why you think might be related to stock returns.\n",
        "\n",
        "- Do histograms for each factor/variables and interpret them\n",
        "\n",
        "- Do plots to visualize the possible relationship each factor might have with the dependent variable.\n",
        "\n",
        "- Show descriptive statistics of these factors"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 176,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "haAfXXxUj-Se",
        "outputId": "a30a0aba-deb2-424c-b27b-a9682250f65b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Sector NAICS\\nlevel 1\n",
              "-                                                                              1\n",
              "Accommodation and Food Services                                               69\n",
              "Administrative and Support and Waste Management and Remediation Services     132\n",
              "Agriculture, Forestry, Fishing and Hunting                                    16\n",
              "Arts, Entertainment, and Recreation                                           21\n",
              "Construction                                                                  45\n",
              "Educational Services                                                          14\n",
              "Finance and Insurance                                                        697\n",
              "Health Care and Social Assistance                                             64\n",
              "Information                                                                  260\n",
              "Manufacturing                                                               1533\n",
              "Mining, Quarrying, and Oil and Gas Extraction                                103\n",
              "Other Services (except Public Administration)                                 16\n",
              "Professional, Scientific, and Technical Services                             144\n",
              "Real Estate and Rental and Leasing                                            67\n",
              "Retail Trade                                                                 152\n",
              "Transportation and Warehousing                                                69\n",
              "Utilities                                                                     77\n",
              "Wholesale Trade                                                               79\n",
              "Name: firm, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 176
        }
      ],
      "source": [
        "dfExtra.groupby('Sector NAICS\\nlevel 1')['firm'].nunique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 177,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 956
        },
        "id": "ix_nLpvEkNCO",
        "outputId": "f93821b4-708c-4a94-85f4-8b1bdeefcaaf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q   revenue     cogs sgae otheropexp extraincome finexp  \\\n",
              "192     AAIC  2003q1     49539     1646    0          0      -39327      0   \n",
              "193     AAIC  2003q2    148439    19721    0          0      -63765      0   \n",
              "194     AAIC  2003q3    184960    22972    0          0      -90544      0   \n",
              "195     AAIC  2003q4    245587    24656    0          0     -119889      0   \n",
              "196     AAIC  2004q1    253357    32066    0          0     -116762      0   \n",
              "...      ...     ...       ...      ...  ...        ...         ...    ...   \n",
              "322551  ZION  2021q2  570000.0  15000.0  0.0        0.0   -100000.0    0.0   \n",
              "322552  ZION  2021q3  569000.0  14000.0  0.0        0.0   -244000.0    0.0   \n",
              "322553  ZION  2021q4  566000.0  13000.0  0.0        0.0   -284000.0    0.0   \n",
              "322554  ZION  2022q1  555000.0  11000.0  0.0        0.0   -289000.0    0.0   \n",
              "322555  ZION  2022q2  608000.0  15000.0  0.0        0.0   -333000.0    0.0   \n",
              "\n",
              "       incometax totalassets  ... cto  \\\n",
              "192         2843     5501107  ...   1   \n",
              "193         6181     8755318  ...   2   \n",
              "194        14483     9217811  ...   3   \n",
              "195        21084    11333613  ...   4   \n",
              "196        14890    11806507  ...   1   \n",
              "...          ...         ...  ...  ..   \n",
              "322551  101000.0  87208000.0  ...   2   \n",
              "322552   71000.0  88306000.0  ...   3   \n",
              "322553   56000.0  93200000.0  ...   4   \n",
              "322554   52000.0  91126000.0  ...   1   \n",
              "322555   57000.0  87784000.0  ...   2   \n",
              "\n",
              "                                              Name  Sector NAICS\\nlevel 1  \\\n",
              "192                Arlington Asset Investment Corp  Finance and Insurance   \n",
              "193                Arlington Asset Investment Corp  Finance and Insurance   \n",
              "194                Arlington Asset Investment Corp  Finance and Insurance   \n",
              "195                Arlington Asset Investment Corp  Finance and Insurance   \n",
              "196                Arlington Asset Investment Corp  Finance and Insurance   \n",
              "...                                            ...                    ...   \n",
              "322551  Zions Bancorporation, National Association  Finance and Insurance   \n",
              "322552  Zions Bancorporation, National Association  Finance and Insurance   \n",
              "322553  Zions Bancorporation, National Association  Finance and Insurance   \n",
              "322554  Zions Bancorporation, National Association  Finance and Insurance   \n",
              "322555  Zions Bancorporation, National Association  Finance and Insurance   \n",
              "\n",
              "        market_value book_value BookToMarketRatio ShortFinancialLeverage  \\\n",
              "192              NaN  1011647.0               NaN                    NaN   \n",
              "193     1.861494e+06  1136093.0          0.610312                    NaN   \n",
              "194     2.416226e+06  1068153.0          0.442075                    NaN   \n",
              "195     3.844904e+06  1554339.0          0.404260                    NaN   \n",
              "196     4.517968e+06  1685673.0          0.373104                    NaN   \n",
              "...              ...        ...               ...                    ...   \n",
              "322551  8.659293e+06  8033000.0          0.927674                    NaN   \n",
              "322552  1.003054e+07  7774000.0          0.775033                    NaN   \n",
              "322553  9.882232e+06  7463000.0          0.755194                    NaN   \n",
              "322554  9.937213e+06  6294000.0          0.633377                    NaN   \n",
              "322555  7.704160e+06  5632000.0          0.731034                    NaN   \n",
              "\n",
              "       LongFinancialLeverage netincome       EPS  \n",
              "192                 0.000979    5723.0       NaN  \n",
              "193                 0.002914   58772.0  0.423071  \n",
              "194                 0.004949   56961.0  0.406658  \n",
              "195                 0.004781   79958.0  0.479968  \n",
              "196                 0.005508   89639.0  0.535497  \n",
              "...                      ...       ...       ...  \n",
              "322551              0.014999  354000.0  2.160966  \n",
              "322552              0.011551  240000.0  1.480837  \n",
              "322553              0.010858  213000.0  1.361340  \n",
              "322554              0.007561  203000.0  1.339277  \n",
              "322555              0.007644  203000.0  1.341184  \n",
              "\n",
              "[33626 rows x 29 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-94863bba-72ca-4e8e-8dc0-8bc0013b5d01\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>cto</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "      <th>BookToMarketRatio</th>\n",
              "      <th>ShortFinancialLeverage</th>\n",
              "      <th>LongFinancialLeverage</th>\n",
              "      <th>netincome</th>\n",
              "      <th>EPS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>192</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q1</td>\n",
              "      <td>49539</td>\n",
              "      <td>1646</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-39327</td>\n",
              "      <td>0</td>\n",
              "      <td>2843</td>\n",
              "      <td>5501107</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1011647.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000979</td>\n",
              "      <td>5723.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>193</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q2</td>\n",
              "      <td>148439</td>\n",
              "      <td>19721</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-63765</td>\n",
              "      <td>0</td>\n",
              "      <td>6181</td>\n",
              "      <td>8755318</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>1.861494e+06</td>\n",
              "      <td>1136093.0</td>\n",
              "      <td>0.610312</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.002914</td>\n",
              "      <td>58772.0</td>\n",
              "      <td>0.423071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>194</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q3</td>\n",
              "      <td>184960</td>\n",
              "      <td>22972</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-90544</td>\n",
              "      <td>0</td>\n",
              "      <td>14483</td>\n",
              "      <td>9217811</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>2.416226e+06</td>\n",
              "      <td>1068153.0</td>\n",
              "      <td>0.442075</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.004949</td>\n",
              "      <td>56961.0</td>\n",
              "      <td>0.406658</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q4</td>\n",
              "      <td>245587</td>\n",
              "      <td>24656</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-119889</td>\n",
              "      <td>0</td>\n",
              "      <td>21084</td>\n",
              "      <td>11333613</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>3.844904e+06</td>\n",
              "      <td>1554339.0</td>\n",
              "      <td>0.404260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.004781</td>\n",
              "      <td>79958.0</td>\n",
              "      <td>0.479968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2004q1</td>\n",
              "      <td>253357</td>\n",
              "      <td>32066</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-116762</td>\n",
              "      <td>0</td>\n",
              "      <td>14890</td>\n",
              "      <td>11806507</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>4.517968e+06</td>\n",
              "      <td>1685673.0</td>\n",
              "      <td>0.373104</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.005508</td>\n",
              "      <td>89639.0</td>\n",
              "      <td>0.535497</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322551</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>570000.0</td>\n",
              "      <td>15000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-100000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>101000.0</td>\n",
              "      <td>87208000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>8.659293e+06</td>\n",
              "      <td>8033000.0</td>\n",
              "      <td>0.927674</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.014999</td>\n",
              "      <td>354000.0</td>\n",
              "      <td>2.160966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322552</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>569000.0</td>\n",
              "      <td>14000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-244000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>71000.0</td>\n",
              "      <td>88306000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>1.003054e+07</td>\n",
              "      <td>7774000.0</td>\n",
              "      <td>0.775033</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.011551</td>\n",
              "      <td>240000.0</td>\n",
              "      <td>1.480837</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322553</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>566000.0</td>\n",
              "      <td>13000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-284000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>56000.0</td>\n",
              "      <td>93200000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>9.882232e+06</td>\n",
              "      <td>7463000.0</td>\n",
              "      <td>0.755194</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.010858</td>\n",
              "      <td>213000.0</td>\n",
              "      <td>1.361340</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322554</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>555000.0</td>\n",
              "      <td>11000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-289000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>52000.0</td>\n",
              "      <td>91126000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>9.937213e+06</td>\n",
              "      <td>6294000.0</td>\n",
              "      <td>0.633377</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.007561</td>\n",
              "      <td>203000.0</td>\n",
              "      <td>1.339277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322555</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>608000.0</td>\n",
              "      <td>15000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-333000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>57000.0</td>\n",
              "      <td>87784000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>7.704160e+06</td>\n",
              "      <td>5632000.0</td>\n",
              "      <td>0.731034</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.007644</td>\n",
              "      <td>203000.0</td>\n",
              "      <td>1.341184</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>33626 rows × 29 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94863bba-72ca-4e8e-8dc0-8bc0013b5d01')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-94863bba-72ca-4e8e-8dc0-8bc0013b5d01 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-94863bba-72ca-4e8e-8dc0-8bc0013b5d01');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 177
        }
      ],
      "source": [
        "df_Financial = dfExtra[(dfExtra['Sector NAICS\\nlevel 1']=='Finance and Insurance')].copy()\n",
        "\n",
        "\n",
        "df_Financial"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 178,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WcQW3MBLlJHn",
        "outputId": "c014857a-681f-400e-caba-53d0ee5d38f5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Sector NAICS\\nlevel 1\n",
              "Finance and Insurance    697\n",
              "Name: firm, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 178
        }
      ],
      "source": [
        "df_Financial.groupby('Sector NAICS\\nlevel 1')['firm'].nunique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 179,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fCeUv8lHlV4K",
        "outputId": "3f663a74-43cb-4281-d99e-a8dbc8a0bbc9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['firm', 'q', 'revenue', 'cogs', 'sgae', 'otheropexp', 'extraincome',\n",
              "       'finexp', 'incometax', 'totalassets', 'totalliabilities', 'shortdebt',\n",
              "       'longdebt', 'stockholderequity', 'adjprice', 'originalprice',\n",
              "       'sharesoutstanding', 'fiscalmonth', 'year', 'cto', 'Name',\n",
              "       'Sector NAICS\\nlevel 1', 'market_value', 'book_value',\n",
              "       'BookToMarketRatio', 'ShortFinancialLeverage', 'LongFinancialLeverage',\n",
              "       'netincome', 'EPS'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 179
        }
      ],
      "source": [
        "df_Financial.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 180,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "RERGrMPUlY29",
        "outputId": "c6dd8725-71f5-4b7e-debd-99d2b0578005"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        firm       q   revenue     cogs sgae otheropexp extraincome finexp  \\\n",
              "192     AAIC  2003q1     49539     1646    0          0      -39327      0   \n",
              "193     AAIC  2003q2    148439    19721    0          0      -63765      0   \n",
              "194     AAIC  2003q3    184960    22972    0          0      -90544      0   \n",
              "195     AAIC  2003q4    245587    24656    0          0     -119889      0   \n",
              "196     AAIC  2004q1    253357    32066    0          0     -116762      0   \n",
              "...      ...     ...       ...      ...  ...        ...         ...    ...   \n",
              "322551  ZION  2021q2  570000.0  15000.0  0.0        0.0   -100000.0    0.0   \n",
              "322552  ZION  2021q3  569000.0  14000.0  0.0        0.0   -244000.0    0.0   \n",
              "322553  ZION  2021q4  566000.0  13000.0  0.0        0.0   -284000.0    0.0   \n",
              "322554  ZION  2022q1  555000.0  11000.0  0.0        0.0   -289000.0    0.0   \n",
              "322555  ZION  2022q2  608000.0  15000.0  0.0        0.0   -333000.0    0.0   \n",
              "\n",
              "       incometax totalassets  ...                                        Name  \\\n",
              "192         2843     5501107  ...             Arlington Asset Investment Corp   \n",
              "193         6181     8755318  ...             Arlington Asset Investment Corp   \n",
              "194        14483     9217811  ...             Arlington Asset Investment Corp   \n",
              "195        21084    11333613  ...             Arlington Asset Investment Corp   \n",
              "196        14890    11806507  ...             Arlington Asset Investment Corp   \n",
              "...          ...         ...  ...                                         ...   \n",
              "322551  101000.0  87208000.0  ...  Zions Bancorporation, National Association   \n",
              "322552   71000.0  88306000.0  ...  Zions Bancorporation, National Association   \n",
              "322553   56000.0  93200000.0  ...  Zions Bancorporation, National Association   \n",
              "322554   52000.0  91126000.0  ...  Zions Bancorporation, National Association   \n",
              "322555   57000.0  87784000.0  ...  Zions Bancorporation, National Association   \n",
              "\n",
              "        Sector NAICS\\nlevel 1  market_value book_value BookToMarketRatio  \\\n",
              "192     Finance and Insurance           NaN  1011647.0               NaN   \n",
              "193     Finance and Insurance  1.861494e+06  1136093.0          0.610312   \n",
              "194     Finance and Insurance  2.416226e+06  1068153.0          0.442075   \n",
              "195     Finance and Insurance  3.844904e+06  1554339.0          0.404260   \n",
              "196     Finance and Insurance  4.517968e+06  1685673.0          0.373104   \n",
              "...                       ...           ...        ...               ...   \n",
              "322551  Finance and Insurance  8.659293e+06  8033000.0          0.927674   \n",
              "322552  Finance and Insurance  1.003054e+07  7774000.0          0.775033   \n",
              "322553  Finance and Insurance  9.882232e+06  7463000.0          0.755194   \n",
              "322554  Finance and Insurance  9.937213e+06  6294000.0          0.633377   \n",
              "322555  Finance and Insurance  7.704160e+06  5632000.0          0.731034   \n",
              "\n",
              "       ShortFinancialLeverage LongFinancialLeverage netincome       EPS  \\\n",
              "192                       NaN              0.000979    5723.0       NaN   \n",
              "193                       NaN              0.002914   58772.0  0.423071   \n",
              "194                       NaN              0.004949   56961.0  0.406658   \n",
              "195                       NaN              0.004781   79958.0  0.479968   \n",
              "196                       NaN              0.005508   89639.0  0.535497   \n",
              "...                       ...                   ...       ...       ...   \n",
              "322551                    NaN              0.014999  354000.0  2.160966   \n",
              "322552                    NaN              0.011551  240000.0  1.480837   \n",
              "322553                    NaN              0.010858  213000.0  1.361340   \n",
              "322554                    NaN              0.007561  203000.0  1.339277   \n",
              "322555                    NaN              0.007644  203000.0  1.341184   \n",
              "\n",
              "            EPSP  \n",
              "192          NaN  \n",
              "193     0.008789  \n",
              "194     0.006433  \n",
              "195     0.005593  \n",
              "196     0.005267  \n",
              "...          ...  \n",
              "322551  0.042201  \n",
              "322552  0.024530  \n",
              "322553  0.021968  \n",
              "322554  0.020715  \n",
              "322555  0.026534  \n",
              "\n",
              "[33626 rows x 30 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-92452341-bd4d-4f62-9d6c-3238a71d34ea\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>firm</th>\n",
              "      <th>q</th>\n",
              "      <th>revenue</th>\n",
              "      <th>cogs</th>\n",
              "      <th>sgae</th>\n",
              "      <th>otheropexp</th>\n",
              "      <th>extraincome</th>\n",
              "      <th>finexp</th>\n",
              "      <th>incometax</th>\n",
              "      <th>totalassets</th>\n",
              "      <th>...</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sector NAICS\\nlevel 1</th>\n",
              "      <th>market_value</th>\n",
              "      <th>book_value</th>\n",
              "      <th>BookToMarketRatio</th>\n",
              "      <th>ShortFinancialLeverage</th>\n",
              "      <th>LongFinancialLeverage</th>\n",
              "      <th>netincome</th>\n",
              "      <th>EPS</th>\n",
              "      <th>EPSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>192</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q1</td>\n",
              "      <td>49539</td>\n",
              "      <td>1646</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-39327</td>\n",
              "      <td>0</td>\n",
              "      <td>2843</td>\n",
              "      <td>5501107</td>\n",
              "      <td>...</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1011647.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000979</td>\n",
              "      <td>5723.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>193</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q2</td>\n",
              "      <td>148439</td>\n",
              "      <td>19721</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-63765</td>\n",
              "      <td>0</td>\n",
              "      <td>6181</td>\n",
              "      <td>8755318</td>\n",
              "      <td>...</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>1.861494e+06</td>\n",
              "      <td>1136093.0</td>\n",
              "      <td>0.610312</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.002914</td>\n",
              "      <td>58772.0</td>\n",
              "      <td>0.423071</td>\n",
              "      <td>0.008789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>194</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q3</td>\n",
              "      <td>184960</td>\n",
              "      <td>22972</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-90544</td>\n",
              "      <td>0</td>\n",
              "      <td>14483</td>\n",
              "      <td>9217811</td>\n",
              "      <td>...</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>2.416226e+06</td>\n",
              "      <td>1068153.0</td>\n",
              "      <td>0.442075</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.004949</td>\n",
              "      <td>56961.0</td>\n",
              "      <td>0.406658</td>\n",
              "      <td>0.006433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2003q4</td>\n",
              "      <td>245587</td>\n",
              "      <td>24656</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-119889</td>\n",
              "      <td>0</td>\n",
              "      <td>21084</td>\n",
              "      <td>11333613</td>\n",
              "      <td>...</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>3.844904e+06</td>\n",
              "      <td>1554339.0</td>\n",
              "      <td>0.404260</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.004781</td>\n",
              "      <td>79958.0</td>\n",
              "      <td>0.479968</td>\n",
              "      <td>0.005593</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>AAIC</td>\n",
              "      <td>2004q1</td>\n",
              "      <td>253357</td>\n",
              "      <td>32066</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-116762</td>\n",
              "      <td>0</td>\n",
              "      <td>14890</td>\n",
              "      <td>11806507</td>\n",
              "      <td>...</td>\n",
              "      <td>Arlington Asset Investment Corp</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>4.517968e+06</td>\n",
              "      <td>1685673.0</td>\n",
              "      <td>0.373104</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.005508</td>\n",
              "      <td>89639.0</td>\n",
              "      <td>0.535497</td>\n",
              "      <td>0.005267</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322551</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2021q2</td>\n",
              "      <td>570000.0</td>\n",
              "      <td>15000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-100000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>101000.0</td>\n",
              "      <td>87208000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>8.659293e+06</td>\n",
              "      <td>8033000.0</td>\n",
              "      <td>0.927674</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.014999</td>\n",
              "      <td>354000.0</td>\n",
              "      <td>2.160966</td>\n",
              "      <td>0.042201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322552</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2021q3</td>\n",
              "      <td>569000.0</td>\n",
              "      <td>14000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-244000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>71000.0</td>\n",
              "      <td>88306000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>1.003054e+07</td>\n",
              "      <td>7774000.0</td>\n",
              "      <td>0.775033</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.011551</td>\n",
              "      <td>240000.0</td>\n",
              "      <td>1.480837</td>\n",
              "      <td>0.024530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322553</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2021q4</td>\n",
              "      <td>566000.0</td>\n",
              "      <td>13000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-284000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>56000.0</td>\n",
              "      <td>93200000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>9.882232e+06</td>\n",
              "      <td>7463000.0</td>\n",
              "      <td>0.755194</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.010858</td>\n",
              "      <td>213000.0</td>\n",
              "      <td>1.361340</td>\n",
              "      <td>0.021968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322554</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2022q1</td>\n",
              "      <td>555000.0</td>\n",
              "      <td>11000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-289000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>52000.0</td>\n",
              "      <td>91126000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>9.937213e+06</td>\n",
              "      <td>6294000.0</td>\n",
              "      <td>0.633377</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.007561</td>\n",
              "      <td>203000.0</td>\n",
              "      <td>1.339277</td>\n",
              "      <td>0.020715</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322555</th>\n",
              "      <td>ZION</td>\n",
              "      <td>2022q2</td>\n",
              "      <td>608000.0</td>\n",
              "      <td>15000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-333000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>57000.0</td>\n",
              "      <td>87784000.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Zions Bancorporation, National Association</td>\n",
              "      <td>Finance and Insurance</td>\n",
              "      <td>7.704160e+06</td>\n",
              "      <td>5632000.0</td>\n",
              "      <td>0.731034</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.007644</td>\n",
              "      <td>203000.0</td>\n",
              "      <td>1.341184</td>\n",
              "      <td>0.026534</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>33626 rows × 30 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92452341-bd4d-4f62-9d6c-3238a71d34ea')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-92452341-bd4d-4f62-9d6c-3238a71d34ea button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-92452341-bd4d-4f62-9d6c-3238a71d34ea');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 180
        }
      ],
      "source": [
        "#EPSP = EPS \\ NetIncome('adjprice')\n",
        "\n",
        "df_Financial = df_Financial.assign(EPSP=lambda x: x.EPS.astype(np.float) / x.adjprice.astype(np.float) )\n",
        "\n",
        "df_Financial"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 181,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "id": "60wsrn-8lpTL",
        "outputId": "56e6310b-ff6d-4ce6-af7c-2fecdddba813"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5c05479dd0>"
            ]
          },
          "metadata": {},
          "execution_count": 181
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "df_Financial[(df_Financial['EPSP'] < df_Financial['EPSP'].quantile(.975)) & (df_Financial['EPSP'] > df_Financial['EPSP'].quantile(.025))]['EPSP'].hist(bins=100)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 182,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "id": "b0tB7SJRl-q9",
        "outputId": "fbd55668-a4be-468a-a7f0-5113f83ab5f3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5c052244d0>"
            ]
          },
          "metadata": {},
          "execution_count": 182
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "df_Financial[(df_Financial['BookToMarketRatio'] < df_Financial['BookToMarketRatio'].quantile(.975)) & (df_Financial['BookToMarketRatio'] > df_Financial['BookToMarketRatio'].quantile(.025))]['BookToMarketRatio'].hist(bins=200)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 183,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "id": "lMzXvyeomBbS",
        "outputId": "89a6d420-9c65-4fe5-be3f-1a46e086e0e1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f5c051d7390>"
            ]
          },
          "metadata": {},
          "execution_count": 183
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "df_Financial[(df_Financial['ShortFinancialLeverage'] < df_Financial['ShortFinancialLeverage'].quantile(.975)) & (df_Financial['ShortFinancialLeverage'] > df_Financial['ShortFinancialLeverage'].quantile(.025))]['ShortFinancialLeverage'].hist(bins=200)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 184,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xq7f8BcmmpvV",
        "outputId": "8edb1063-942e-4ca1-8bbc-39d29c18dcea"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: DeprecationWarning:\n",
            "\n",
            "`np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "192            NaN\n",
              "193            NaN\n",
              "194            NaN\n",
              "195            NaN\n",
              "196       1.198789\n",
              "            ...   \n",
              "322551    0.472042\n",
              "322552    0.778500\n",
              "322553    0.399489\n",
              "322554    0.200036\n",
              "322555   -0.012988\n",
              "Name: R, Length: 33626, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 184
        }
      ],
      "source": [
        "df_Financial['R'] = np.log(df_Financial['adjprice'].astype(np.float)) - np.log(df_Financial.groupby(['firm'])['adjprice'].shift(4).astype(np.float))\n",
        "df_Financial['R']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 185,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kIWIMv4gmq0i",
        "outputId": "2868d8f7-7d0d-446c-b8bd-2821d5d5e4cd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2776"
            ]
          },
          "metadata": {},
          "execution_count": 185
        }
      ],
      "source": [
        "df_Financial['R'].isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 186,
      "metadata": {
        "id": "iydhi2pJmr-U"
      },
      "outputs": [],
      "source": [
        "df_Financial['RNQ'] = df_Financial.groupby(['firm'])['R'].shift(-1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 187,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "id": "v726kBRamtn_",
        "outputId": "70c24e3d-4459-4c36-81e5-fa74ca6c31da"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#df_Services.plot(kind = 'scatter', x = 'EPSP' , y = 'RNQ')\n",
        "\n",
        "#plt.show() \n",
        "\n",
        "import seaborn as sns; sns.set_theme(color_codes=True)\n",
        "\n",
        "x = sns.regplot(x=\"EPSP\", y=\"RNQ\", data=df_Financial, scatter_kws={\"color\": \"blue\"}, line_kws={\"color\": \"red\"})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 212,
      "metadata": {
        "id": "28LRSxFamvAT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        },
        "outputId": "ba67919d-c4d6-4089-a2dc-aecd14c4ad83"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#df_Services.plot(kind = 'scatter', x = 'BookToMarketRatio', y = 'RNQ')\n",
        "\n",
        "#plt.show() \n",
        "\n",
        "x = sns.regplot(x=\"BookToMarketRatio\", y=\"RNQ\", data=df_Financial, scatter_kws={\"color\": \"blue\"}, line_kws={\"color\": \"red\"})"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "J73Zt5LwuAAa"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 213,
      "metadata": {
        "id": "9bQJmYNAmwab",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 285
        },
        "outputId": "a4fa3dcc-6dc7-4ae9-edc8-2f33cfc67158"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#df_Services.plot(kind = 'scatter', x = 'ShortFinancialLeverage', y = 'RNQ')\n",
        "\n",
        "#plt.show()\n",
        "\n",
        "x = sns.regplot(x=\"ShortFinancialLeverage\", y=\"RNQ\", data=df_Financial, scatter_kws={\"color\": \"blue\"}, line_kws={\"color\": \"red\"})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 215,
      "metadata": {
        "id": "pTw2ik_qmxqI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        },
        "outputId": "2c2649aa-d29e-42d9-a112-ddb2909d55e1"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#df_Services.plot(kind = 'scatter', x = 'LongFinancialLeverage', y = 'RNQ')\n",
        "\n",
        "#plt.show() \n",
        "\n",
        "#import seaborn as sns \n",
        "#sns.lmplot(x='LongFinancialLeverage',y='RNQ',data=df_Services,fit_reg=True)\n",
        "\n",
        "x = sns.regplot(x=\"LongFinancialLeverage\", y=\"RNQ\", data=df_Financial, scatter_kws={\"color\": \"blue\"}, line_kws={\"color\": \"red\"})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 216,
      "metadata": {
        "id": "kuoQmcb6mzAn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 246
        },
        "outputId": "28f9deab-34df-4f1f-8aaa-7f7b2c96e48d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         count      mean       std       min       25%  \\\n",
              "Sector NAICS\\nlevel 1                                                    \n",
              "Finance and Insurance  33321.0  0.019034  0.104083 -5.833328  0.009118   \n",
              "\n",
              "                            50%       75%       max  \n",
              "Sector NAICS\\nlevel 1                                \n",
              "Finance and Insurance  0.020082  0.030932  4.336266  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-750491cb-ee6f-4936-b3bb-a38ae6ee3cdb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>33321.0</td>\n",
              "      <td>0.019034</td>\n",
              "      <td>0.104083</td>\n",
              "      <td>-5.833328</td>\n",
              "      <td>0.009118</td>\n",
              "      <td>0.020082</td>\n",
              "      <td>0.030932</td>\n",
              "      <td>4.336266</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-750491cb-ee6f-4936-b3bb-a38ae6ee3cdb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-750491cb-ee6f-4936-b3bb-a38ae6ee3cdb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-750491cb-ee6f-4936-b3bb-a38ae6ee3cdb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 216
        }
      ],
      "source": [
        "df_Financial.groupby('Sector NAICS\\nlevel 1')['EPSP'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 217,
      "metadata": {
        "id": "izVuMSCjm0Kn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 246
        },
        "outputId": "4e21e0c9-720b-4dac-f47f-c9d795624208"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         count      mean       std       min      25%  \\\n",
              "Sector NAICS\\nlevel 1                                                   \n",
              "Finance and Insurance  33321.0  0.866387  0.822338 -9.643026  0.49503   \n",
              "\n",
              "                            50%       75%        max  \n",
              "Sector NAICS\\nlevel 1                                 \n",
              "Finance and Insurance  0.751641  1.030383  29.056915  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a03ca8ec-1128-45a8-8d3d-53a88b90a6a8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>33321.0</td>\n",
              "      <td>0.866387</td>\n",
              "      <td>0.822338</td>\n",
              "      <td>-9.643026</td>\n",
              "      <td>0.49503</td>\n",
              "      <td>0.751641</td>\n",
              "      <td>1.030383</td>\n",
              "      <td>29.056915</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a03ca8ec-1128-45a8-8d3d-53a88b90a6a8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a03ca8ec-1128-45a8-8d3d-53a88b90a6a8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a03ca8ec-1128-45a8-8d3d-53a88b90a6a8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 217
        }
      ],
      "source": [
        "df_Financial.groupby('Sector NAICS\\nlevel 1')['BookToMarketRatio'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 218,
      "metadata": {
        "id": "LejTYX1Km1Sl",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "outputId": "bceac370-4811-4c9a-99f0-c7320a686c06"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        count      mean       std  min  25%       50%  \\\n",
              "Sector NAICS\\nlevel 1                                                   \n",
              "Finance and Insurance  5965.0  0.054263  0.134316  0.0  0.0  0.004748   \n",
              "\n",
              "                            75%       max  \n",
              "Sector NAICS\\nlevel 1                      \n",
              "Finance and Insurance  0.032055  0.855438  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-70663d67-0dd6-4b6a-968e-97ddb85f4705\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>5965.0</td>\n",
              "      <td>0.054263</td>\n",
              "      <td>0.134316</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.004748</td>\n",
              "      <td>0.032055</td>\n",
              "      <td>0.855438</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70663d67-0dd6-4b6a-968e-97ddb85f4705')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-70663d67-0dd6-4b6a-968e-97ddb85f4705 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-70663d67-0dd6-4b6a-968e-97ddb85f4705');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 218
        }
      ],
      "source": [
        "df_Financial.groupby('Sector NAICS\\nlevel 1')['ShortFinancialLeverage'].describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 219,
      "metadata": {
        "id": "JgM7iHXam2Uq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 208
        },
        "outputId": "41960eb4-d8ee-4594-d5da-a7c0204eb84f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         count      mean       std  min      25%       50%  \\\n",
              "Sector NAICS\\nlevel 1                                                        \n",
              "Finance and Insurance  33626.0  0.195294  0.232862  0.0  0.02316  0.080744   \n",
              "\n",
              "                           75%       max  \n",
              "Sector NAICS\\nlevel 1                     \n",
              "Finance and Insurance  0.36126  2.972546  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b72a89b7-3387-46cc-bfb8-38effb45231f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector NAICS\n",
              "level 1</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Finance and Insurance</th>\n",
              "      <td>33626.0</td>\n",
              "      <td>0.195294</td>\n",
              "      <td>0.232862</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.02316</td>\n",
              "      <td>0.080744</td>\n",
              "      <td>0.36126</td>\n",
              "      <td>2.972546</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b72a89b7-3387-46cc-bfb8-38effb45231f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b72a89b7-3387-46cc-bfb8-38effb45231f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b72a89b7-3387-46cc-bfb8-38effb45231f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 219
        }
      ],
      "source": [
        "df_Financial.groupby('Sector NAICS\\nlevel 1')['LongFinancialLeverage'].describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#####  Argumentacion\n",
        "\n",
        "- EPSP\n",
        "\n",
        "  Ya que una accion se podria ver mas atractiva a medida que tiene una relacion mas alta, ya que es un indicativo que que tanto se beneficia cada parte de la firma.\n",
        "\n",
        "- La relacion entre el precio neto de la firma y el precio del mercado\n",
        "  \n",
        "  Podria influir en el rendimiento de las acciones, ya que es un indicativo de que tanto valor perciben los inversionista de la firma, ya que si consideraran que sus beneficios o su prevision a futuro no es buena no estarian dispuesto a pagar una accion mucho mas de lo que valen sus activos\n",
        "\n",
        "- La relacion entre las deudas y los activos.\n",
        "\n",
        "  Considero que podria influir ya que para el corto plazo podria ser un indicador de la salud de la firma, ya que de tener una relacion de deuda a corto plazo muy alta nos daria a entender de que no ha sido capaz de hacer frente a sus deudas con sus ingresos, mientras que para la deuda a largo plazo podria afectar al rendimiento futuro haciendo menos atractiva una accion si posee una deuda considerable, ya que si bien podriamos estimar si la firma seria capaz de pagarla a tiempo, la incertidumbre de que la situacion para la firma podria cambiar antes de liquidar su deuda podria reducir el interes por adquirir sus acciones."
      ],
      "metadata": {
        "id": "9gcUCXWOuB0E"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Design and run a multiple regression model to examine whether your selected factors and earnings per share deflated by price can explain/predict annual stock returns. You have to control for industry and firm size. To control for these variables you have to include them as extra independent variables in the model\n",
        "\n",
        "Your independent variables must be in the right scale so that you can compare the values of the variables among different firms of any size\n",
        "\n",
        "For each independent variable you have to check for outliers and do the corresponding adjustments to avoid unreliable results in your regression model\n",
        "\n",
        "You must check for possible multicollinearity problems. Briefly explain what is multicollinearity, run and interpret the corresponding test"
      ],
      "metadata": {
        "id": "8P2b2fZAuCz2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install statsmodels\n",
        "import statsmodels.api as sm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XXbd81gauMqd",
        "outputId": "4be2ca9d-af0b-49e6-8fe8-b815b5f8e5de"
      },
      "execution_count": 195,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: statsmodels in /usr/local/lib/python3.7/dist-packages (0.12.2)\n",
            "Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from statsmodels) (1.21.6)\n",
            "Requirement already satisfied: patsy>=0.5 in /usr/local/lib/python3.7/dist-packages (from statsmodels) (0.5.2)\n",
            "Requirement already satisfied: scipy>=1.1 in /usr/local/lib/python3.7/dist-packages (from statsmodels) (1.7.1)\n",
            "Requirement already satisfied: pandas>=0.21 in /usr/local/lib/python3.7/dist-packages (from statsmodels) (1.3.5)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.21->statsmodels) (2022.2.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.21->statsmodels) (2.8.2)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from patsy>=0.5->statsmodels) (1.15.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_Financial = df_Financial.sort_values(by=['q','market_value'], ascending = True)\n",
        "df_Financial['size'] = df_Financial.groupby(['q'])['market_value'].transform(lambda x: pd.qcut(x,3,labels = ['small', 'medium', 'big']))\n",
        "df_Financial[['size']].value_counts(sort = True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GtjTr-s8uRH-",
        "outputId": "a707c078-9e51-455d-d868-6efd3c2dc8a0"
      },
      "execution_count": 196,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "size  \n",
              "small     11138\n",
              "big       11103\n",
              "medium    11080\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 196
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = ['size','EPSP']\n",
        "\n",
        "model2 = sm.OLS((df_Financial['RNQ'].shift(-1)), sm.add_constant(pd.get_dummies(df_Financial[x], drop_first=True)), missing = 'drop').fit()\n",
        "\n",
        "print(model2.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5iN86wmpuXPk",
        "outputId": "fe4e8c99-22db-46df-ed13-4ceebb604a66"
      },
      "execution_count": 197,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                    RNQ   R-squared:                       0.004\n",
            "Model:                            OLS   Adj. R-squared:                  0.004\n",
            "Method:                 Least Squares   F-statistic:                     37.38\n",
            "Date:                Sat, 10 Sep 2022   Prob (F-statistic):           4.22e-24\n",
            "Time:                        04:55:02   Log-Likelihood:                -10636.\n",
            "No. Observations:               30814   AIC:                         2.128e+04\n",
            "Df Residuals:                   30810   BIC:                         2.131e+04\n",
            "Df Model:                           3                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===============================================================================\n",
            "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-------------------------------------------------------------------------------\n",
            "const           0.0744      0.003     21.743      0.000       0.068       0.081\n",
            "EPSP            0.1834      0.019      9.478      0.000       0.145       0.221\n",
            "size_medium     0.0099      0.005      2.071      0.038       0.001       0.019\n",
            "size_big        0.0216      0.005      4.526      0.000       0.012       0.031\n",
            "==============================================================================\n",
            "Omnibus:                     8551.044   Durbin-Watson:                   1.238\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           106136.904\n",
            "Skew:                          -0.983   Prob(JB):                         0.00\n",
            "Kurtosis:                      11.877   Cond. No.                         11.1\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/tsatools.py:142: FutureWarning:\n",
            "\n",
            "In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = ['size','BookToMarketRatio']\n",
        "\n",
        "model3 = sm.OLS((df_Financial['RNQ'].shift(-1)), sm.add_constant(pd.get_dummies(df_Financial[x], drop_first=True)), missing = 'drop').fit()\n",
        "\n",
        "print(model3.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4k9B8nJIuj8m",
        "outputId": "78b56751-07e0-431b-f731-c21783fe003e"
      },
      "execution_count": 198,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/tsatools.py:142: FutureWarning:\n",
            "\n",
            "In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                    RNQ   R-squared:                       0.005\n",
            "Model:                            OLS   Adj. R-squared:                  0.005\n",
            "Method:                 Least Squares   F-statistic:                     54.53\n",
            "Date:                Sat, 10 Sep 2022   Prob (F-statistic):           3.81e-35\n",
            "Time:                        04:55:02   Log-Likelihood:                -10610.\n",
            "No. Observations:               30814   AIC:                         2.123e+04\n",
            "Df Residuals:                   30810   BIC:                         2.126e+04\n",
            "Df Model:                           3                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "=====================================================================================\n",
            "                        coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-------------------------------------------------------------------------------------\n",
            "const                 0.1083      0.004     25.263      0.000       0.100       0.117\n",
            "BookToMarketRatio    -0.0293      0.002    -11.885      0.000      -0.034      -0.024\n",
            "size_medium           0.0035      0.005      0.719      0.472      -0.006       0.013\n",
            "size_big              0.0118      0.005      2.436      0.015       0.002       0.021\n",
            "==============================================================================\n",
            "Omnibus:                     8407.546   Durbin-Watson:                   1.251\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           104436.042\n",
            "Skew:                          -0.961   Prob(JB):                         0.00\n",
            "Kurtosis:                      11.812   Cond. No.                         5.37\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = ['size','ShortFinancialLeverage']\n",
        "\n",
        "model4 = sm.OLS((df_Financial['RNQ'].shift(-1)), sm.add_constant(pd.get_dummies(df_Financial[x], drop_first=True)), missing = 'drop').fit()\n",
        "\n",
        "print(model4.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ywYh1XMauooN",
        "outputId": "a56acca3-edf4-4419-9068-6eb1bd62c14e"
      },
      "execution_count": 199,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                    RNQ   R-squared:                       0.004\n",
            "Model:                            OLS   Adj. R-squared:                  0.004\n",
            "Method:                 Least Squares   F-statistic:                     7.784\n",
            "Date:                Sat, 10 Sep 2022   Prob (F-statistic):           3.49e-05\n",
            "Time:                        04:55:02   Log-Likelihood:                -2066.8\n",
            "No. Observations:                5520   AIC:                             4142.\n",
            "Df Residuals:                    5516   BIC:                             4168.\n",
            "Df Model:                           3                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "==========================================================================================\n",
            "                             coef    std err          t      P>|t|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------------------\n",
            "const                      0.0607      0.010      6.253      0.000       0.042       0.080\n",
            "ShortFinancialLeverage    -0.0637      0.035     -1.796      0.073      -0.133       0.006\n",
            "size_medium                0.0322      0.013      2.563      0.010       0.008       0.057\n",
            "size_big                   0.0522      0.012      4.365      0.000       0.029       0.076\n",
            "==============================================================================\n",
            "Omnibus:                     1996.905   Durbin-Watson:                   1.234\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            34438.319\n",
            "Skew:                          -1.273   Prob(JB):                         0.00\n",
            "Kurtosis:                      14.969   Cond. No.                         8.60\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/tsatools.py:142: FutureWarning:\n",
            "\n",
            "In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = ['size','LongFinancialLeverage']\n",
        "\n",
        "model5 = sm.OLS((df_Financial['RNQ'].shift(-1)), sm.add_constant(pd.get_dummies(df_Financial[x], drop_first=True)), missing = 'drop').fit()\n",
        "\n",
        "print(model5.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hC98UXD0uyZ4",
        "outputId": "0613b97a-f152-40f7-924c-bb5c1d31dc70"
      },
      "execution_count": 200,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                    RNQ   R-squared:                       0.001\n",
            "Model:                            OLS   Adj. R-squared:                  0.001\n",
            "Method:                 Least Squares   F-statistic:                     10.11\n",
            "Date:                Sat, 10 Sep 2022   Prob (F-statistic):           1.19e-06\n",
            "Time:                        04:55:02   Log-Likelihood:                -10772.\n",
            "No. Observations:               30850   AIC:                         2.155e+04\n",
            "Df Residuals:                   30846   BIC:                         2.158e+04\n",
            "Df Model:                           3                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "=========================================================================================\n",
            "                            coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-----------------------------------------------------------------------------------------\n",
            "const                     0.0793      0.004     21.516      0.000       0.072       0.087\n",
            "LongFinancialLeverage    -0.0198      0.008     -2.358      0.018      -0.036      -0.003\n",
            "size_medium               0.0128      0.005      2.645      0.008       0.003       0.022\n",
            "size_big                  0.0248      0.005      5.173      0.000       0.015       0.034\n",
            "==============================================================================\n",
            "Omnibus:                     8709.313   Durbin-Watson:                   1.221\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           106576.067\n",
            "Skew:                          -1.010   Prob(JB):                         0.00\n",
            "Kurtosis:                      11.879   Cond. No.                         4.97\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/tsatools.py:142: FutureWarning:\n",
            "\n",
            "In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "copy = df_Financial\n",
        "copy = copy.dropna()\n",
        "corr = copy.corr()\n",
        "corr.style.background_gradient(cmap='coolwarm')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 383
        },
        "id": "xJkXWUrJu3e4",
        "outputId": "39201b7f-ed36-4a19-e88a-0ebb708a55b1"
      },
      "execution_count": 201,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f5bfb5efad0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_68747_row0_col0, #T_68747_row1_col1, #T_68747_row2_col2, #T_68747_row3_col3, #T_68747_row4_col4, #T_68747_row5_col5, #T_68747_row6_col6, #T_68747_row7_col7, #T_68747_row8_col8, #T_68747_row9_col9 {\n",
              "  background-color: #b40426;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row0_col1 {\n",
              "  background-color: #e9785d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row0_col2, #T_68747_row4_col0, #T_68747_row4_col9 {\n",
              "  background-color: #6282ea;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row0_col3, #T_68747_row5_col4 {\n",
              "  background-color: #5875e1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row0_col4 {\n",
              "  background-color: #7093f3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row0_col5 {\n",
              "  background-color: #e36c55;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row0_col6 {\n",
              "  background-color: #afcafc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row0_col7 {\n",
              "  background-color: #4f69d9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row0_col8, #T_68747_row6_col9 {\n",
              "  background-color: #94b6ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row0_col9 {\n",
              "  background-color: #7a9df8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row1_col0 {\n",
              "  background-color: #e8765c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row1_col2 {\n",
              "  background-color: #8badfd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row1_col3, #T_68747_row8_col1, #T_68747_row8_col4 {\n",
              "  background-color: #5f7fe8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row1_col4, #T_68747_row3_col7 {\n",
              "  background-color: #506bda;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row1_col5 {\n",
              "  background-color: #ea7b60;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row1_col6 {\n",
              "  background-color: #bfd3f6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row1_col7, #T_68747_row2_col7 {\n",
              "  background-color: #5470de;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row1_col8 {\n",
              "  background-color: #8caffe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row1_col9 {\n",
              "  background-color: #7396f5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row2_col0, #T_68747_row2_col5, #T_68747_row2_col8, #T_68747_row2_col9, #T_68747_row3_col4, #T_68747_row4_col1, #T_68747_row4_col3, #T_68747_row4_col6, #T_68747_row4_col7, #T_68747_row8_col2 {\n",
              "  background-color: #3b4cc0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row2_col1, #T_68747_row6_col3 {\n",
              "  background-color: #5e7de7;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row2_col3 {\n",
              "  background-color: #84a7fc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row2_col4, #T_68747_row6_col4 {\n",
              "  background-color: #536edd;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row2_col6 {\n",
              "  background-color: #4e68d8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row3_col0 {\n",
              "  background-color: #4961d2;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row3_col1 {\n",
              "  background-color: #4a63d3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row3_col2, #T_68747_row5_col8 {\n",
              "  background-color: #9abbff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row3_col5 {\n",
              "  background-color: #3f53c6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row3_col6 {\n",
              "  background-color: #455cce;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row3_col8, #T_68747_row5_col7, #T_68747_row9_col6 {\n",
              "  background-color: #7da0f9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row3_col9 {\n",
              "  background-color: #6687ed;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row4_col2, #T_68747_row8_col5 {\n",
              "  background-color: #6b8df0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row4_col5 {\n",
              "  background-color: #3e51c5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row4_col8 {\n",
              "  background-color: #779af7;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row5_col0 {\n",
              "  background-color: #e36b54;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row5_col1 {\n",
              "  background-color: #e97a5f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row5_col2, #T_68747_row7_col3 {\n",
              "  background-color: #6c8ff1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row5_col3 {\n",
              "  background-color: #5977e3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row5_col6 {\n",
              "  background-color: #dfdbd9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row5_col9, #T_68747_row8_col6 {\n",
              "  background-color: #82a6fb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row6_col0 {\n",
              "  background-color: #b5cdfa;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row6_col1 {\n",
              "  background-color: #c1d4f4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row6_col2, #T_68747_row7_col5 {\n",
              "  background-color: #7ea1fa;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row6_col5 {\n",
              "  background-color: #dedcdb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row6_col7 {\n",
              "  background-color: #d3dbe7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row6_col8 {\n",
              "  background-color: #abc8fd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row7_col0, #T_68747_row7_col1 {\n",
              "  background-color: #5b7ae5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row7_col2 {\n",
              "  background-color: #88abfd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row7_col4 {\n",
              "  background-color: #5673e0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row7_col6 {\n",
              "  background-color: #d5dbe5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row7_col8 {\n",
              "  background-color: #a2c1ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_68747_row7_col9 {\n",
              "  background-color: #86a9fc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row8_col0 {\n",
              "  background-color: #6f92f3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row8_col3, #T_68747_row9_col3 {\n",
              "  background-color: #6485ec;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row8_col7 {\n",
              "  background-color: #7295f4;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row8_col9 {\n",
              "  background-color: #f29072;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row9_col0, #T_68747_row9_col7 {\n",
              "  background-color: #6a8bef;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row9_col1 {\n",
              "  background-color: #5d7ce6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row9_col2 {\n",
              "  background-color: #516ddb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row9_col4 {\n",
              "  background-color: #6180e9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row9_col5 {\n",
              "  background-color: #688aef;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_68747_row9_col8 {\n",
              "  background-color: #f08a6c;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_68747_\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th class=\"col_heading level0 col0\" >market_value</th>\n",
              "      <th class=\"col_heading level0 col1\" >book_value</th>\n",
              "      <th class=\"col_heading level0 col2\" >BookToMarketRatio</th>\n",
              "      <th class=\"col_heading level0 col3\" >ShortFinancialLeverage</th>\n",
              "      <th class=\"col_heading level0 col4\" >LongFinancialLeverage</th>\n",
              "      <th class=\"col_heading level0 col5\" >netincome</th>\n",
              "      <th class=\"col_heading level0 col6\" >EPS</th>\n",
              "      <th class=\"col_heading level0 col7\" >EPSP</th>\n",
              "      <th class=\"col_heading level0 col8\" >R</th>\n",
              "      <th class=\"col_heading level0 col9\" >RNQ</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row0\" class=\"row_heading level0 row0\" >market_value</th>\n",
              "      <td id=\"T_68747_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
              "      <td id=\"T_68747_row0_col1\" class=\"data row0 col1\" >0.810777</td>\n",
              "      <td id=\"T_68747_row0_col2\" class=\"data row0 col2\" >-0.109681</td>\n",
              "      <td id=\"T_68747_row0_col3\" class=\"data row0 col3\" >-0.056974</td>\n",
              "      <td id=\"T_68747_row0_col4\" class=\"data row0 col4\" >0.030969</td>\n",
              "      <td id=\"T_68747_row0_col5\" class=\"data row0 col5\" >0.838618</td>\n",
              "      <td id=\"T_68747_row0_col6\" class=\"data row0 col6\" >0.297141</td>\n",
              "      <td id=\"T_68747_row0_col7\" class=\"data row0 col7\" >0.007396</td>\n",
              "      <td id=\"T_68747_row0_col8\" class=\"data row0 col8\" >0.075176</td>\n",
              "      <td id=\"T_68747_row0_col9\" class=\"data row0 col9\" >0.057526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row1\" class=\"row_heading level0 row1\" >book_value</th>\n",
              "      <td id=\"T_68747_row1_col0\" class=\"data row1 col0\" >0.810777</td>\n",
              "      <td id=\"T_68747_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
              "      <td id=\"T_68747_row1_col2\" class=\"data row1 col2\" >0.037895</td>\n",
              "      <td id=\"T_68747_row1_col3\" class=\"data row1 col3\" >-0.027958</td>\n",
              "      <td id=\"T_68747_row1_col4\" class=\"data row1 col4\" >-0.087030</td>\n",
              "      <td id=\"T_68747_row1_col5\" class=\"data row1 col5\" >0.806588</td>\n",
              "      <td id=\"T_68747_row1_col6\" class=\"data row1 col6\" >0.351279</td>\n",
              "      <td id=\"T_68747_row1_col7\" class=\"data row1 col7\" >0.027671</td>\n",
              "      <td id=\"T_68747_row1_col8\" class=\"data row1 col8\" >0.041448</td>\n",
              "      <td id=\"T_68747_row1_col9\" class=\"data row1 col9\" >0.034794</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row2\" class=\"row_heading level0 row2\" >BookToMarketRatio</th>\n",
              "      <td id=\"T_68747_row2_col0\" class=\"data row2 col0\" >-0.109681</td>\n",
              "      <td id=\"T_68747_row2_col1\" class=\"data row2 col1\" >0.037895</td>\n",
              "      <td id=\"T_68747_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
              "      <td id=\"T_68747_row2_col3\" class=\"data row2 col3\" >0.092707</td>\n",
              "      <td id=\"T_68747_row2_col4\" class=\"data row2 col4\" >-0.074724</td>\n",
              "      <td id=\"T_68747_row2_col5\" class=\"data row2 col5\" >-0.071826</td>\n",
              "      <td id=\"T_68747_row2_col6\" class=\"data row2 col6\" >-0.007271</td>\n",
              "      <td id=\"T_68747_row2_col7\" class=\"data row2 col7\" >0.026804</td>\n",
              "      <td id=\"T_68747_row2_col8\" class=\"data row2 col8\" >-0.272778</td>\n",
              "      <td id=\"T_68747_row2_col9\" class=\"data row2 col9\" >-0.175091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row3\" class=\"row_heading level0 row3\" >ShortFinancialLeverage</th>\n",
              "      <td id=\"T_68747_row3_col0\" class=\"data row3 col0\" >-0.056974</td>\n",
              "      <td id=\"T_68747_row3_col1\" class=\"data row3 col1\" >-0.027958</td>\n",
              "      <td id=\"T_68747_row3_col2\" class=\"data row3 col2\" >0.092707</td>\n",
              "      <td id=\"T_68747_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
              "      <td id=\"T_68747_row3_col4\" class=\"data row3 col4\" >-0.169556</td>\n",
              "      <td id=\"T_68747_row3_col5\" class=\"data row3 col5\" >-0.053893</td>\n",
              "      <td id=\"T_68747_row3_col6\" class=\"data row3 col6\" >-0.036658</td>\n",
              "      <td id=\"T_68747_row3_col7\" class=\"data row3 col7\" >0.014856</td>\n",
              "      <td id=\"T_68747_row3_col8\" class=\"data row3 col8\" >-0.011568</td>\n",
              "      <td id=\"T_68747_row3_col9\" class=\"data row3 col9\" >-0.011722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row4\" class=\"row_heading level0 row4\" >LongFinancialLeverage</th>\n",
              "      <td id=\"T_68747_row4_col0\" class=\"data row4 col0\" >0.030969</td>\n",
              "      <td id=\"T_68747_row4_col1\" class=\"data row4 col1\" >-0.087030</td>\n",
              "      <td id=\"T_68747_row4_col2\" class=\"data row4 col2\" >-0.074724</td>\n",
              "      <td id=\"T_68747_row4_col3\" class=\"data row4 col3\" >-0.169556</td>\n",
              "      <td id=\"T_68747_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
              "      <td id=\"T_68747_row4_col5\" class=\"data row4 col5\" >-0.059023</td>\n",
              "      <td id=\"T_68747_row4_col6\" class=\"data row4 col6\" >-0.078087</td>\n",
              "      <td id=\"T_68747_row4_col7\" class=\"data row4 col7\" >-0.063305</td>\n",
              "      <td id=\"T_68747_row4_col8\" class=\"data row4 col8\" >-0.031647</td>\n",
              "      <td id=\"T_68747_row4_col9\" class=\"data row4 col9\" >-0.024394</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row5\" class=\"row_heading level0 row5\" >netincome</th>\n",
              "      <td id=\"T_68747_row5_col0\" class=\"data row5 col0\" >0.838618</td>\n",
              "      <td id=\"T_68747_row5_col1\" class=\"data row5 col1\" >0.806588</td>\n",
              "      <td id=\"T_68747_row5_col2\" class=\"data row5 col2\" >-0.071826</td>\n",
              "      <td id=\"T_68747_row5_col3\" class=\"data row5 col3\" >-0.053893</td>\n",
              "      <td id=\"T_68747_row5_col4\" class=\"data row5 col4\" >-0.059023</td>\n",
              "      <td id=\"T_68747_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
              "      <td id=\"T_68747_row5_col6\" class=\"data row5 col6\" >0.471789</td>\n",
              "      <td id=\"T_68747_row5_col7\" class=\"data row5 col7\" >0.152737</td>\n",
              "      <td id=\"T_68747_row5_col8\" class=\"data row5 col8\" >0.092483</td>\n",
              "      <td id=\"T_68747_row5_col9\" class=\"data row5 col9\" >0.083391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row6\" class=\"row_heading level0 row6\" >EPS</th>\n",
              "      <td id=\"T_68747_row6_col0\" class=\"data row6 col0\" >0.297141</td>\n",
              "      <td id=\"T_68747_row6_col1\" class=\"data row6 col1\" >0.351279</td>\n",
              "      <td id=\"T_68747_row6_col2\" class=\"data row6 col2\" >-0.007271</td>\n",
              "      <td id=\"T_68747_row6_col3\" class=\"data row6 col3\" >-0.036658</td>\n",
              "      <td id=\"T_68747_row6_col4\" class=\"data row6 col4\" >-0.078087</td>\n",
              "      <td id=\"T_68747_row6_col5\" class=\"data row6 col5\" >0.471789</td>\n",
              "      <td id=\"T_68747_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
              "      <td id=\"T_68747_row6_col7\" class=\"data row6 col7\" >0.430461</td>\n",
              "      <td id=\"T_68747_row6_col8\" class=\"data row6 col8\" >0.159518</td>\n",
              "      <td id=\"T_68747_row6_col9\" class=\"data row6 col9\" >0.141786</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row7\" class=\"row_heading level0 row7\" >EPSP</th>\n",
              "      <td id=\"T_68747_row7_col0\" class=\"data row7 col0\" >0.007396</td>\n",
              "      <td id=\"T_68747_row7_col1\" class=\"data row7 col1\" >0.027671</td>\n",
              "      <td id=\"T_68747_row7_col2\" class=\"data row7 col2\" >0.026804</td>\n",
              "      <td id=\"T_68747_row7_col3\" class=\"data row7 col3\" >0.014856</td>\n",
              "      <td id=\"T_68747_row7_col4\" class=\"data row7 col4\" >-0.063305</td>\n",
              "      <td id=\"T_68747_row7_col5\" class=\"data row7 col5\" >0.152737</td>\n",
              "      <td id=\"T_68747_row7_col6\" class=\"data row7 col6\" >0.430461</td>\n",
              "      <td id=\"T_68747_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
              "      <td id=\"T_68747_row7_col8\" class=\"data row7 col8\" >0.123524</td>\n",
              "      <td id=\"T_68747_row7_col9\" class=\"data row7 col9\" >0.098091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row8\" class=\"row_heading level0 row8\" >R</th>\n",
              "      <td id=\"T_68747_row8_col0\" class=\"data row8 col0\" >0.075176</td>\n",
              "      <td id=\"T_68747_row8_col1\" class=\"data row8 col1\" >0.041448</td>\n",
              "      <td id=\"T_68747_row8_col2\" class=\"data row8 col2\" >-0.272778</td>\n",
              "      <td id=\"T_68747_row8_col3\" class=\"data row8 col3\" >-0.011568</td>\n",
              "      <td id=\"T_68747_row8_col4\" class=\"data row8 col4\" >-0.031647</td>\n",
              "      <td id=\"T_68747_row8_col5\" class=\"data row8 col5\" >0.092483</td>\n",
              "      <td id=\"T_68747_row8_col6\" class=\"data row8 col6\" >0.159518</td>\n",
              "      <td id=\"T_68747_row8_col7\" class=\"data row8 col7\" >0.123524</td>\n",
              "      <td id=\"T_68747_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
              "      <td id=\"T_68747_row8_col9\" class=\"data row8 col9\" >0.731194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_68747_level0_row9\" class=\"row_heading level0 row9\" >RNQ</th>\n",
              "      <td id=\"T_68747_row9_col0\" class=\"data row9 col0\" >0.057526</td>\n",
              "      <td id=\"T_68747_row9_col1\" class=\"data row9 col1\" >0.034794</td>\n",
              "      <td id=\"T_68747_row9_col2\" class=\"data row9 col2\" >-0.175091</td>\n",
              "      <td id=\"T_68747_row9_col3\" class=\"data row9 col3\" >-0.011722</td>\n",
              "      <td id=\"T_68747_row9_col4\" class=\"data row9 col4\" >-0.024394</td>\n",
              "      <td id=\"T_68747_row9_col5\" class=\"data row9 col5\" >0.083391</td>\n",
              "      <td id=\"T_68747_row9_col6\" class=\"data row9 col6\" >0.141786</td>\n",
              "      <td id=\"T_68747_row9_col7\" class=\"data row9 col7\" >0.098091</td>\n",
              "      <td id=\"T_68747_row9_col8\" class=\"data row9 col8\" >0.731194</td>\n",
              "      <td id=\"T_68747_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 201
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression"
      ],
      "metadata": {
        "id": "MjhSwX0hu6Vr"
      },
      "execution_count": 203,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def calculate_vif(df, features):    \n",
        "    vif, tolerance = {}, {}    # all the features that you want to examine\n",
        "    for feature in features:\n",
        "        # extract all the other features you will regress against\n",
        "        X = [f for f in features if f != feature]        \n",
        "        X, y = df[X], df[feature]        # extract r-squared from the fit\n",
        "        r2 = LinearRegression().fit(X, y).score(X, y)                \n",
        "        \n",
        "        # calculate tolerance\n",
        "        tolerance[feature] = 1 - r2        # calculate VIF\n",
        "        vif[feature] = 1/(tolerance[feature])    # return VIF DataFrame\n",
        "    return pd.DataFrame({'VIF': vif, 'Tolerance': tolerance})"
      ],
      "metadata": {
        "id": "QAIALsgTu8Hs"
      },
      "execution_count": 206,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "calculate_vif(df=copy, features=['EPSP','BookToMarketRatio','ShortFinancialLeverage','LongFinancialLeverage'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "bvsmzUkPvDBx",
        "outputId": "51a485da-e55d-47e0-db92-b50c0c6f52a4"
      },
      "execution_count": 207,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                             VIF  Tolerance\n",
              "EPSP                    1.004524   0.995497\n",
              "BookToMarketRatio       1.012816   0.987347\n",
              "ShortFinancialLeverage  1.036481   0.964803\n",
              "LongFinancialLeverage   1.037105   0.964223"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-55763084-944b-4183-91db-322958a65e85\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>VIF</th>\n",
              "      <th>Tolerance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>EPSP</th>\n",
              "      <td>1.004524</td>\n",
              "      <td>0.995497</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BookToMarketRatio</th>\n",
              "      <td>1.012816</td>\n",
              "      <td>0.987347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ShortFinancialLeverage</th>\n",
              "      <td>1.036481</td>\n",
              "      <td>0.964803</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LongFinancialLeverage</th>\n",
              "      <td>1.037105</td>\n",
              "      <td>0.964223</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55763084-944b-4183-91db-322958a65e85')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-55763084-944b-4183-91db-322958a65e85 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-55763084-944b-4183-91db-322958a65e85');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 207
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = ['size','EPSP','BookToMarketRatio','ShortFinancialLeverage','LongFinancialLeverage']\n",
        "\n",
        "modelF = sm.OLS((df_Financial['RNQ'].shift(-1)), sm.add_constant(pd.get_dummies(df_Financial[x], drop_first=True)), missing = 'drop').fit()\n",
        "\n",
        "print(modelF.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LyG8fzxSvIoB",
        "outputId": "409ddb99-89f0-4a65-e528-141cad4fa295"
      },
      "execution_count": 208,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                    RNQ   R-squared:                       0.013\n",
            "Model:                            OLS   Adj. R-squared:                  0.012\n",
            "Method:                 Least Squares   F-statistic:                     12.23\n",
            "Date:                Sat, 10 Sep 2022   Prob (F-statistic):           1.01e-13\n",
            "Time:                        04:55:25   Log-Likelihood:                -1992.1\n",
            "No. Observations:                5503   AIC:                             3998.\n",
            "Df Residuals:                    5496   BIC:                             4045.\n",
            "Df Model:                           6                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "==========================================================================================\n",
            "                             coef    std err          t      P>|t|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------------------\n",
            "const                      0.1104      0.012      9.345      0.000       0.087       0.134\n",
            "EPSP                       0.0352      0.041      0.867      0.386      -0.044       0.115\n",
            "BookToMarketRatio         -0.0399      0.006     -6.981      0.000      -0.051      -0.029\n",
            "ShortFinancialLeverage    -0.0310      0.036     -0.861      0.389      -0.102       0.040\n",
            "LongFinancialLeverage     -0.0457      0.019     -2.408      0.016      -0.083      -0.008\n",
            "size_medium                0.0122      0.013      0.965      0.335      -0.013       0.037\n",
            "size_big                   0.0297      0.012      2.437      0.015       0.006       0.054\n",
            "==============================================================================\n",
            "Omnibus:                     1871.758   Durbin-Watson:                   1.265\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            33052.992\n",
            "Skew:                          -1.163   Prob(JB):                         0.00\n",
            "Kurtosis:                      14.779   Cond. No.                         12.0\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/statsmodels/tsa/tsatools.py:142: FutureWarning:\n",
            "\n",
            "In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
            "\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [],
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}